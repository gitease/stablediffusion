{
  "languageOption": {
    "label": "简体中文",
    "value": "zh-cn"
  },
  "menuStrings": {
    "ProductName": "<%= productName %>",
    "AboutProduct": "About GitKraken Desktop",
    "VersionNumber": "版本 <%= version %> (<%= arch %> <%= bitness %>-bit)",
    "ViewReleaseNotes": "View Release 否tes",
    "InstallGitKrakenCli": "Install the GitKraken CLI",
    "CheckingForUpdates": "Checking for updates...",
    "RestartAndInstallUpdate": "Restart and Install Update",
    "CheckForUpdateWithLastCheckedTime": "Check for Update <%= updateLastCheckedTime %>",
    "UpdateAvailableWithVersion": "Update available (<%= updateAvailableVersion %>)",
    "UpdateDownloadedShowFile": "Update downloaded (show file)",
    "UpdateErroredAtTime": "Update 错误ed <%= updateErrorTime %>",
    "DownloadingUpdate": "Downloading Update...",
    "Preferences": "偏好设置...",
    "&Preferences": "&偏好设置...",
    "Services": "Services",
    "Hide": "Hide GitKraken Desktop",
    "HideOthers": "Hide Others",
    "ShowAll": "Show All",
    "Quit": "Quit GitKraken Desktop",
    "E&xit": "E&xit",
    "File": "文件",
    "&File": "&文件",
    "NewTab": "New Tab",
    "New&Tab": "New &Tab",
    "CloneRepo": "Clone Repo",
    "Clo&neRepo": "Clo&ne Repo",
    "InitRepo": "Init Repo",
    "&InitRepo": "&Init Repo",
    "OpenRepo": "打开 Repo",
    "&OpenRepo": "&打开 Repo",
    "OpenRepoInExternalEditor": "打开 Repo in External 编辑器",
    "OpenRepoInNamedExternalEditor": "打开 Repo in {0}",
    "OpenRepoInExternal&Editor": "打开 Repo in External &编辑器",
    "Open&Terminal": "打开 External &终端",
    "OpenTerminal": "打开 External 终端",
    "OpenInFileManager": "打开 in 文件 Manager",
    "ReopenClosedTab": "Reopen 关闭d Tab",
    "ReopenClosed&Tab": "Reopen 关闭d &Tab",
    "SignIntoDifferentAccount": "登录to a Different Account",
    "Edit": "Edit",
    "&Edit": "&Edit",
    "Undo": "Undo",
    "&Undo": "&Undo",
    "Redo": "Redo",
    "&Redo": "&Redo",
    "Cut": "Cut",
    "&Cut": "&Cut",
    "Copy": "Copy",
    "C&opy": "C&opy",
    "Paste": "Paste",
    "&Paste": "&Paste",
    "SelectAll": "Select All",
    "Select&All": "Select &All",
    "View": "View",
    "&View": "&View",
    "ReloadWindow": "Reload Window",
    "RelaunchGitKraken": "Relaunch GitKraken Desktop",
    "&RelaunchGitKraken": "&Relaunch GitKraken Desktop",
    "ToggleFullScreen": "Toggle Full Screen",
    "Toggle&FullScreen": "Toggle &Full Screen",
    "Developer": "Developer",
    "SupportLogs": "Support Logs",
    "RunTests": "Run Tests...",
    "ToggleDeveloperTools": "Toggle Developer Tools",
    "ToggleDeveloper&Tools": "Toggle Developer &Tools",
    "ToggleMainProcessDeveloperTools": "Toggle Main Process Developer Tools",
    "ToggleMainProcessDeveloper&Tools": "Toggle Main Process Developer &Tools",
    "ToggleRequestHandlerDeveloperTools": "Toggle Request Handler Process Developer Tools",
    "ToggleRequestHandlerDeveloper&Tools": "Toggle Request Handler Process Developer &Tools",
    "PrintPerformanceTimingsToTerminal": "Print Performance Timings to 终端",
    "Tabs": "Tabs",
    "CloseTab": "关闭 Tab",
    "SelectNextTab": "Select Next Tab",
    "SelectPreviousTab": "Select Previous Tab",
    "OpenTabsList": "打开 Tabs List",
    "SelectTab1": "Select Tab 1",
    "SelectTab2": "Select Tab 2",
    "SelectTab3": "Select Tab 3",
    "SelectTab4": "Select Tab 4",
    "SelectTab5": "Select Tab 5",
    "SelectTab6": "Select Tab 6",
    "SelectTab7": "Select Tab 7",
    "SelectTab8": "Select Tab 8",
    "SelectTab9": "Select Tab 9",
    "Favorites": "Favorites",
    "OpenFavorite1": "打开 Favorite Repo 1",
    "OpenFavorite2": "打开 Favorite Repo 2",
    "OpenFavorite3": "打开 Favorite Repo 3",
    "OpenFavorite4": "打开 Favorite Repo 4",
    "OpenFavorite5": "打开 Favorite Repo 5",
    "OpenFavorite6": "打开 Favorite Repo 6",
    "OpenFavorite7": "打开 Favorite Repo 7",
    "OpenFavorite8": "打开 Favorite Repo 8",
    "OpenFavorite9": "打开 Favorite Repo 9",
    "ShowDetailPanel": "Show 提交 Details Panel",
    "ShowLeftPanel": "Show Left Panel",
    "ShowToolbar": "Show Toolbar",
    "ShowTerminalPanel": "Show 终端 Panel",
    "Window": "Window",
    "Minimize": "Minimize",
    "Zoom": "Zoom",
    "Help": "帮助",
    "&Help": "&帮助",
    "ViewSupportDocs": "View Support Documentation",
    "ViewErrorLogs": "View 错误 Logs",
    "ViewPerformanceLogs": "View Performance Logs",
    "ViewActivityLogs": "View Activity Logs",
    "ContactSupport": "Contact Support",
    "BrowseSubmitFeatureRequests": "Browse or Submit Feature Requests",
    "KeyboardShortcuts": "Keyboard Shortcuts",
    "OpenFuzzyFinder": "打开 Command Palette",
    "FollowUsOnTwitter": "Follow Us on Twitter"
  },
  "strings": {
    "About-OpenSource": "GitKraken Desktop uses some fine open source projects:",
    "About-Libgit2License": "The libgit2 library is used via 否deGit under the GNU public license with a linking exception",
    "About-OpenSourceLicenses": "Dependent 打开 Source Licenses",
    "About-Company": "Axosoft, LLC DBA GitKraken",
    "About-AllRightsReserved": "All rights reserved",
    "About-Version": "GitKraken Desktop 版本 {0}",
    "Application": "Application",
    "Bytes": "bytes",
    "By": "{0} by ",
    "NoMatches": "否 matches",
    "NoFilterMatches": "否 results matching filter",
    "QuitGitKraken": "Quit GitKraken Desktop",
    "Done": "Done",
    "Or": "or",
    "OpenInFileManager": "打开 in file manager",
    "Update": "Update",
    "SelectAll": "Select All",
    "UnSelectAll": "Unselect All",
    "GitKrakenDotDev": "GitKraken.dev",
    "DontShowThisAgain": "Don't show this again",
    "Repo-Close": "关闭 仓库",
    "Repo-Delete": "删除 repository",
    "Repo-GitMaintenanceLabel": "GitKraken is optimizing the repository for improved performance. This may take several minutes on larger repositories.",
    "Repo-GitMaintenanceFailed-Title": "仓库 Maintenance Failed",
    "Repo-GitMaintenanceFailed-Message": "Something went wrong when attempting to perform repository maintenance.",
    "Repo-GitMaintenanceSuccess-Title": "仓库 Maintenance Finished",
    "Repo-Open": "打开 repository",
    "Repo-OpenInDefaultTerminal": "打开 in default terminal",
    "Repo-OpenEmbeddedTerminal": "Toggle terminal panel",
    "Prompt-DoNotAskAgain": "Don't ask again",
    "Registration-ChangeEmail": "登录to a different account",
    "Registration-CheckStatus": "Check Status",
    "Registration-GetStartedCreateYourAccount": "Get Started - 创建 Your Account",
    "Registration-NoCreditCardRequired": "否 Credit Card Required",
    "Registration-OpenYourPrivateRepository": "打开 your private repository",
    "Registration-OrCloseRepository": "Or close repository",
    "Registration-PrivateRepoDetected": "This appears to be a private repository",
    "Registration-PrivateRepoDetectedFreeContent": "The free plan of GitKraken Desktop does not support opening private or self-hosted repositories. Upgrade to open this repository.",
    "Registration-PrivateRepoDetectedUnregisteredContent": "打开ing private or self-hosted repositories requires a license. 创建 a GitKraken account for a free trial to open this repository.",
    "Registration-PrivateRepoDetectedUnregisteredSuperchargeContent": "Supercharge Git and unlock access to all features by starting your free {0}-day trial. Required for private or self-hosted repositories.",
    "Registration-StartRegisteredTrialButtonLabel": "Start a Free {0}-Day Trial",
    "Registration-SignUpForRegisteredTrialButtonLabel": "Sign Up for a Free {0}-Day Trial",
    "Registration-CreateAccount": "创建 a GitKraken Account",
    "Registration-CreatingAccount": "Creating Account...",
    "Registration-EmailAddress": "Email",
    "Registration-EnterEmailAddress": "Enter email address",
    "Registration-EnterName": "Enter name",
    "Registration-SelfHostedLoginFailedDueToNoLicense": "Your account does not have an active GitKraken Self-Hosted license.",
    "Registration-ForgotPassword": "I forgot my password",
    "Registration-GoBackToSelfHostedConfiguration": "Change the URL of the GitKraken Self-Hosted server",
    "Registration-LdapUsername": "Username",
    "Registration-Name": "Name",
    "Registration-ServerConnectionError": "Could not connect to server.",
    "Registration-AzureTextUnderIcon": "Azure DevOps",
    "Registration-BitbucketTextUnderIcon": "Bitbucket",
    "Registration-GitLabTextUnderIcon": "GitLab",
    "Registration-GitHubTextUnderIcon": "GitHub",
    "Registration-SelectAzureOrg": "Select Azure Organization",
    "Registration-SignInWithAzure": "登录 with Azure DevOps",
    "Registration-SignUpWithAzure": "Sign up with Azure DevOps",
    "Registration-SignInWithBitbucket": "登录 with Bitbucket",
    "Registration-SignUpWithBitbucket": "Sign up with Bitbucket",
    "Registration-SignInWithGitHub": "登录 with GitHub",
    "Registration-SignUpWithGitHub": "Sign up with GitHub",
    "Registration-SignInWithGitLab": "登录 with GitLab",
    "Registration-SignUpWithGitLab": "Sign up with GitLab",
    "Registration-SignInWithGoogle": "登录 with Google",
    "Registration-SignInWithSSO": "登录 with SSO",
    "Registration-SignUpWithSSO": "Sign up with SSO",
    "Registration-CheckForSSOProvider": "Check for SSO Provider",
    "Registration-SelectSSOProvider": "Select SSO Provider",
    "Registration-SignUpWithGoogle": "Sign up with Google",
    "Registration-SuccessfullyRegistered": "Email verified!",
    "Registration-HaveNotRegistered": "You have not verified your email address yet",
    "Registration-iHaveReadAndAgreeToThe": "I have read and agree to the {0}",
    "Registration-iAgree": "I Agree",
    "Registration-Password": "Password",
    "Registration-ConfirmPassword": "确认 Password",
    "Registration-ResendEmail": "Send Again",
    "Registration-ResendingEmail": "Sending...",
    "Registration-Failed": "Could not connect to server",
    "Registration-FailedExtra": "Please try again later.",
    "Registration-FailedExtraDaysLeft": "Please try again within {0} days to continue using GitKraken Desktop.",
    "Registration-EULA": "End User License Agreement",
    "Registration-EULAAbbreviated": "EULA",
    "Registration-EULAUpdateTitle": "End User License Agreement Update",
    "Registration-EULAFirstTimeMessage": "Almost there! We just need to make sure you agree to our EULA.",
    "Registration-EULAUpdateMessage": "The End User License Agreement has been updated. You must agree to the new version to continue using GitKraken Desktop.",
    "Registration-EULALoadFailed": "Failed To Load End User License Agreement",
    "Registration-PasswordIsGood": "That's a great password!",
    "Registration-PasswordStrength0": "very weak",
    "Registration-PasswordStrength1": "weak",
    "Registration-PasswordStrength2": "moderate",
    "Registration-PasswordStrength3": "strong",
    "Registration-PasswordStrength4": "luxurious",
    "Registration-PasswordStrengthPrefix": "Your password is ",
    "Registration-PasswordTooShort": "Password must be at least {0} characters.",
    "Registration-ProLicenseExpiredTitle": "License Expired",
    "Registration-StudentLicenseExpiredTitle": "Student License Expired",
    "Registration-ProLicenseExpiredBody1": "Your GitKraken license has expired. Please renew your subscription to continue using GitKraken Desktop.",
    "Registration-StudentLicenseExpiredBody1-1": "Your GitHub Student license for GitKraken Pro has expired. You've got a few options:",
    "Registration-StudentLicenseExpiredBody1-2": "If you're sure you still have student status with GitHub, you'll need to {0} again to verify your license.",
    "Registration-StudentLicenseExpiredBody1-2Button": "sign in with GitHub",
    "Registration-StudentLicenseExpiredBody1-3": "If you need to renew your student status with GitHub, {0}. You can use the free version in the meantime.",
    "Registration-StudentLicenseExpiredBody1-3Button": "visit the GitHub Education site",
    "Registration-StudentLicenseExpiredBody1-4": "If you're interested in a premium license, {0}.",
    "Registration-StudentLicenseExpiredBody1-4Button": "view GitKraken plans",
    "Registration-StudentLicenseExpiredBody1-5": "Otherwise, you can {0}.",
    "Registration-StudentLicenseExpiredBody1-5Button": "switch to a Free license",
    "Registration-ProLicenseExpiredBody2-1": "You are now using the free version of GitKraken Desktop. The ability to open private and self-hosted repos, the merge conflict editor, Profiles, and the GitHub Enterprise Server, GitLab Self-Managed, Bitbucket Data Center, and Azure DevOps integrations have been disabled.",
    "Registration-ProLicenseExpiredBody2-2": "You can renew your subscription at any time from the main menu, or by visiting {0}.",
    "Registration-StudentLicenseExpiredBody2-2": "You can subscribe at any time from the main menu, or by visiting {0}.",
    "Registration-ProLicenseExpiredCancel": "取消 Subscription",
    "Registration-ProLicenseExpiredGoToShop": "Renew Subscription",
    "Registration-UseGitKraken": "Use GitKraken Desktop",
    "Registration-ValidateConfirmPassword": "Passwords must match.",
    "Registration-ValidateField": "This field is required.",
    "Registration-ValidateEmail": "Must use a valid email.",
    "Registration-VerifyEmailForTrialButton": "Verify Email for Free Trial",
    "Registration-VerifyEmailLabel": "Already verified?",
    "Registration-VerifyEmailTitle": "Please verify your email",
    "Registration-VerifyEmailBody": "We haven't received verification from {0} yet. Please follow the link in the email sent to this address to continue using GitKraken Desktop.",
    "Registration-CantFindEmail": "Can't find the email?",
    "Registration-IncorrectEmail": "Incorrect account?",
    "Registration-DesireToUnregister": "否t ready for a free trial?",
    "Registration-LogOutButton": "Log Out",
    "Registration-XDaysToActivate": "{0} Days to Activate",
    "Registration-1DayToActivate": "1 Day to Activate",
    "Registration-Login": "登录",
    "Registration-LoggingIn": "Signing in...",
    "Registration-LoginTitle": "Welcome to GitKraken Desktop",
    "Registration-LoginWithSSO": "Login with {0}",
    "Registration-GenericProviderName": "provider",
    "Registration-NoProviders": "否 providers found for this email address. Please try another email address or contact your known provider",
    "Registration-GoToLoginLeadin": "Already have an account? ",
    "Registration-GoToSignUpLeadin": "Don't have an account? ",
    "Registration-GoToLogin": "登录.",
    "Registration-GoToSignUp": "Sign up.",
    "Registration-ManualInput": "Manually input the OAuth token",
    "Registration-OrSeparatorLine": "or",
    "Registration-NotUsingHostingService": "否t using a hosting service?",
    "Registration-SignUpForTrialTitle": "Sign Up and Unlock More Features",
    "Registration-SignUpTitle": "Sign up with your hosting service",
    "Registration-SignInTitle": "登录 with your hosting service",
    "Registration-SignUpForTrialDescription1": "Start your {0} day trial and get access to private repos, GitKraken AI, Conflict Prevention, enterprise integrations, and more.",
    "Registration-SignInWithEmail": "登录 with email",
    "Registration-SignUpWithEmail": "Sign up with email",
    "Registration-SignIn": "Sign In",
    "Registration-SignUp": "Sign Up",
    "Registration-Purchase": "Purchase",
    "Role-Admin": "Admin",
    "Role-Billing": "Billing Contact",
    "Role-Owner": "Owner",
    "SelfHostedConfiguration-Title": "Configure GitKraken Self-Hosted",
    "SelfHostedConfiguration-EnterHostname": "Please paste the URL provided on the GitKraken Desktop download page:",
    "SelfHostedConfiguration-CouldNotConnect": "Could not connect to the server.",
    "SelfHostedConfiguration-CouldNotParseURL": "Could not parse the given URL.",
    "Status-Pending": "Pending",
    "LicenseExpirationWarning-NDays": "License expires in {0} days",
    "LicenseExpirationWarning-Tomorrow": "License expires in 1 day!",
    "LicenseExpirationWarning-Today": "License expires in less than a day!",
    "Standalone-LicenseConfigurationTitle": "Serverless License",
    "Standalone-LicenseInfoForActive": "Licensed to {0} for {1} users",
    "Standalone-LicenseInfoForActiveExpiresSoon": "Licensed to {0} for {1} users. Expires in {2} days",
    "Standalone-LicenseInfoExpiresTomorrow": "Licensed to {0} for {1} users. Expires in {2} day",
    "Standalone-LicenseInfoExpiresToday": "Licensed to {0} for {1} users. Expires today",
    "Standalone-LicenseInfoExpired": "Licensed to {0} for {1} users. Expired",
    "Standalone-Unlicensed": "Unlicensed",
    "Standalone-LicensedTo": "Licensed To",
    "Standalone-NumberOfUsers": "# of Users",
    "Standalone-Expires": "Expires",
    "Standalone-DateExpired": "Expired {0}",
    "Standalone-GitKrakenIsUnlicensed": "This copy of GitKraken Desktop is unlicensed.",
    "Standalone-SavedLicenseIsInvalid": "The license on disk is invalid.",
    "Standalone-AddAValidLicense": "添加 a valid license file to continue.",
    "Standalone-AddALicense": "添加 a license file to continue.",
    "Standalone-UpdateLicense": "Update License",
    "Standalone-AddLicense": "添加 License",
    "Standalone-UpdatedLicenseWasExpired": "The license file you selected is expired.",
    "Standalone-UpdatedLicenseFailedToUpdate": "Something went wrong when we tried to use the selected license.",
    "Standalone-UpdatedLicenseWasInvalid": "The license file you selected was invalid.",
    "Standalone-UpdatedLicenseWasNotFound": "The license file you chose was not found.",
    "Standalone-BadSelectedLicense": "Update License Failed",
    "Standalone-LicenseSuccessfullyUpdated": "License 成功fully Updated",
    "AnnotatedTag": "Annotated Tag",
    "Apply": "Apply",
    "Author": "Author",
    "Branch": "分支",
    "branch": "branch",
    "Cancel": "取消",
    "Clear": "Clear",
    "ClearAll": "Clear All",
    "Close": "关闭",
    "Commit": "提交",
    "Comments": "Comments",
    "Create": "创建",
    "Open": "打开",
    "Clone": "Clone",
    "Favorite": "Favorite",
    "Recent": "Recent",
    "DeletingWithEllipsis": "Deleting...",
    "Draft": "Draft",
    "AuthoredLabel": "authored",
    "CoauthorsLabel": "Co-authors:",
    "CommitterLabel": "committed",
    "CommitLabel": "commit:",
    "CommitLabelBadge": "COMMIT:",
    "ParentLabel": "parent:",
    "ParentLabelBadge": "PARENT:",
    "CheckingOutBranch": "Checking out branch",
    "ConnectingWithEllipsis": "Connecting...",
    "DiscardAllChanges": "Discard all changes",
    "HostingService": "Hosting Service",
    "SelectHostingService": "Select hosting service",
    "Fetch": "Fetch",
    "Filter": "filter",
    "GeneratingWithEllipsis": "Generating...",
    "GPG": "GPG",
    "Likes": "Likes",
    "LoadingDiffWithEllipsis": "Loading diff...",
    "LoadingWithEllipsis": "Loading...",
    "Local": "Local",
    "Log": "Log",
    "MergeRequest": "合并 Request",
    "MergeRequests": "合并 Requests",
    "MergeRequestAllCaps": "MERGE REQUEST",
    "MergeRequestsAllCaps": "MERGE REQUESTS",
    "MergeRequestAbbreviationSingular": "MR",
    "MergeRequestAbbreviationPlural": "MRs",
    "New": "New",
    "Optional": "(optional)",
    "Parent": "Parent",
    "Parents": "Parents",
    "PerformXOrY": "{0} or {1}",
    "Pop": "Pop",
    "Preview": "PREVIEW",
    "Project": "Project",
    "PullRequestAbbreviationSingular": "PR",
    "PullRequestAbbreviationPlural": "PRs",
    "Pull": "拉取",
    "PullRequest": "拉取 Request",
    "PullRequests": "拉取 Requests",
    "PullRequestAllCaps": "PULL REQUEST",
    "PullRequestsAllCaps": "PULL REQUESTS",
    "Push": "推送",
    "Redo": "Redo",
    "Repo": "Repo",
    "RepoX": "Repo: {0}",
    "Repository": "仓库",
    "repository": "repository",
    "Save": "保存",
    "Search": "Search",
    "Selected": "Selected",
    "DontSave": "Don't 保存",
    "ToggleHideLabel": "Hide",
    "ToggleSoloLabel": "Solo",
    "UpgradeGitKrakenButtonLabel": "Upgrade GitKraken",
    "UpgradeNowLabel": "Upgrade now",
    "UpgradeToProButtonLabel": "Upgrade to GitKraken Pro",
    "ShowAll": "Show All",
    "SoloBranch": "Solo this branch",
    "UnsoloAll": "Stop Soloing",
    "SuccessWithBang": "成功!",
    "Stage": "Stage",
    "Staged": "Staged",
    "Stash": "Stash",
    "Tag": "Tag",
    "Undo": "Undo",
    "Uninitialized": "Uninitialized",
    "Unstage": "Unstage",
    "Unstaged": "Unstaged",
    "Cli": "终端",
    "PaletteButtonLabel": "Actions",
    "UpstreamBranch": "Upstream branch",
    "ViewAllRepositories": "View all repositories",
    "ViewReleaseNotes": "View Release 否tes",
    "ViewSupportDocs": "View Support Documentation",
    "WIPs": "WIPs",
    "WorkInProgressOnBranchAbbr": "WIP on {0}",
    "Zoom": "Zoom",
    "License-Community": "Community",
    "License-Pro": "Pro",
    "License-Business": "Business",
    "License-Enterprise": "Enterprise",
    "LicenseBadge-Advanced": "ADVANCED",
    "LicenseBadge-Community": "COMMUNITY",
    "LicenseBadge-Enterprise": "ENTERPRISE",
    "LicenseBadge-Business": "BUSINESS",
    "LicenseBadge-Pro": "PRO",
    "LicenseBadge-Trial": "TRIAL",
    "LicenseBadge-SelfHosted": "SELF-HOSTED",
    "LicenseBadge-Standalone": "SERVERLESS",
    "CommunityPlanBadgeTooltip": "Licensed for use on open source projects. Click to see plans.",
    "Stash-ApplyWithUncommittedChangesPrompt": "You have uncommitted changes. Are you sure you want to apply the stash on top of your changes?",
    "Stash-PartialStashSelectedPath": "This will stash all staged and unstaged changes in \"{0}\". Are you sure you want to stash all changes in the file?",
    "Stash-PartialStashSelectedPaths": "This will stash all staged and unstaged changes in the selected files. Are you sure you want to stash all selected files?",
    "StashMessage-Checkout": "Auto stash before checking out \"{0}\"",
    "StashMessage-CherryPick": "Auto stash before cherry pick of \"{0}\"",
    "StashMessage-Merge": "Auto stash before merge of \"{0}\" and \"{1}\"",
    "StashMessage-PatchApply": "Auto stash before patch apply of \"{0}\"",
    "StashMessage-Rebase": "Auto stash before rebase of \"{0}\"",
    "StashMessage-RebaseOnto": "Auto stash before rebase of \"{0}\" onto \"{1}\"",
    "StashMessage-Reset": "Auto stash before reset",
    "StashMessage-Revert": "Auto stash before revert of \"{0}\"",
    "StashMessage-UndoRedo-DiscardAllChanges": "Auto stash before Undo Discard all changes",
    "Ignore": "Ignore",
    "IgnoreFile": "Ignore '{0}'",
    "IgnoreNFiles": "Ignore {0} files",
    "AllFilesWithSameExtension": "All files with the extension '{0}'",
    "AllFilesInFolder": "All files in '{0}/'",
    "IgnoreAllFilesInFolder": "Ignore all files in '{0}/'",
    "File-AlreadyExists": "文件 '{0}' already exists",
    "File-Blame": "文件 Blame",
    "File-CanOnlyEditText": "Only text files can be edited",
    "File-CouldNotOpenFileName": "Could not open {0}",
    "File-CouldNotOpenInEditor": "Could not open file in editor",
    "File-CouldNotCreate": "Could not create file",
    "File-CouldNotCreateOutOfRepo": "Cannot create a file outside of the repository!",
    "File-Create": "创建 文件",
    "File-Created": "创建d '{0}'",
    "File-Delete": "删除 file",
    "File-Deleted": "删除d '{0}'",
    "File-DoesNotExist": "文件 does not exist",
    "File-ConfirmDeletePath": "Are you sure you want to delete '{0}'?",
    "File-Open": "打开 file",
    "File-Edit": "Edit file",
    "File-OpenInDefaultProgram": "打开 file in default program",
    "File-OpenInExternalEditor": "打开 in external editor",
    "File-OpenInNamedEditor": "打开 in {0}",
    "File-OpenWithName": "打开 {0}",
    "File-Reset": "Discard changes",
    "File-ShowFolderContents": "打开 folder",
    "File-ShowFolderContentsMac": "打开 in Finder",
    "File-ShowInFolder": "Show in folder",
    "File-ShowInFolderMac": "Show in Finder",
    "File-ShowInFolderMacWithName": "Show {0} in Finder",
    "File-ShowInFolderWithName": "Show {0} in folder",
    "File-StatusAdded": "ADDED",
    "File-StatusDeleted": "DELETED",
    "File-StatusRenamed": "RENAMED",
    "File-StatusRenamedFrom": "from",
    "File-StatusRenamedTo": "to",
    "File-UnstageAndRemove": "Unstage and delete file",
    "Folder-CherryPickFromStash": "Apply stashed folder",
    "Folder-NewFile": "创建 a file in this folder",
    "Folder-MarkConflictedFilesAsResolved": "Mark all resolved",
    "Folder-Open": "打开 folder",
    "Folder-StageAll": "Stage folder",
    "Folder-StashAll": "Stash folder",
    "Folder-UnstageAll": "Unstage folder",
    "Folder-DiscardAllChanges": "Discard all changes in folder",
    "Folder-ExportChangesToPatch": "创建 Patch from changes in directory",
    "FileHistory": "文件 History",
    "FileHistory-AuthorInfo": "Authored by {0} on {1}",
    "FileHistory-CannotLinkToGraph": "This commit is not visible on the graph",
    "FileHistory-End": "End of History",
    "FileHistory-LinkToGraph": "View {0} on graph",
    "FileHistory-BlameButtonLabel": "Blame",
    "FileHistory-ShowBlame": "Show blame details",
    "FileHistory-UnknownAuthorName": "Unknown",
    "FuzzyFinder-DefaultPlaceHolder": "Search for commands and actions (e.g., 打开 Repo)",
    "FuzzyFinder-BlamePlaceholder": "Search for a file to view who did what (i.e. its blame)",
    "FuzzyFinder-CheckoutPlaceholder": "Search for a branch to checkout",
    "FuzzyFinder-CloseTab": "关闭 Tab",
    "FuzzyFinder-CreateAnnotatedTag": "创建 Annotated Tag",
    "FuzzyFinder-CreateBranch": "创建 分支",
    "FuzzyFinder-CreateFilePlaceholder": "Enter a new file name",
    "FuzzyFinder-CreateTag": "创建 Tag",
    "FuzzyFinder-DeleteFilePlaceholder": "Search for a file to delete",
    "FuzzyFinder-EditFilePlaceholder": "Search for a file to edit",
    "FuzzyFinder-DevPlaceholder": "Commands only available in dev mode",
    "FuzzyFinder-HistoryPlaceholder": "Search for a file to view its history / blame",
    "FuzzyFinder-InitializeLfsOnThisRepo": "Initialize LFS on this repo",
    "FuzzyFinder-OpenInDefaultEditor": "打开 in External 编辑器",
    "FuzzyFinder-OpenFilePlaceholder": "Search for a file to open",
    "FuzzyFinder-OpenRepoPlaceholder": "Search for a repository to open",
    "FuzzyFinder-RenameBranch": "Rename 分支",
    "FuzzyFinder-RepoMaintenance": "Perform Repo Maintenance",
    "FuzzyFinder-SearchCommitsPlaceholder": "Search commits by message, sha, or author",
    "FuzzyFinder-StageAllChanges": "Stage all changes",
    "FuzzyFinder-SwitchProfilePlaceholder": "Search for a profile to switch to",
    "FuzzyFinder-SwitchThemePlaceholder": "Search for a theme to switch to",
    "FuzzyFinder-UnstageAllChanges": "Unstage all changes",
    "FuzzyFinder-ViewFilePlaceholder": "Search for a file to view",
    "FuzzyFinder-BlameFilePrefix": "Blame",
    "FuzzyFinder-CheckoutRefPrefix": "Checkout",
    "FuzzyFinder-ConfigureGitFlow": "Configure Gitflow",
    "FuzzyFinder-ConfigureGpgSigning": "Configure 提交 Signing",
    "FuzzyFinder-ConfigureLfs": "Configure LFS",
    "FuzzyFinder-CreateFileKeywords": "create new file",
    "FuzzyFinder-DeleteFilePrefix": "删除 文件",
    "FuzzyFinder-EditFilePrefix": "Edit 文件",
    "FuzzyFinder-StartPullRequest": "Start 拉取 Request",
    "FuzzyFinder-StartPullRequestKeywords": "New 创建 拉取 Request",
    "FuzzyFinder-DevPrefix": "Dev",
    "FuzzyFinder-DiscardAllKeywords": "reset hard all",
    "FuzzyFinder-FileHistoryPrefix": "History",
    "FuzzyFinder-InitRepoKeywords": "initialize",
    "FuzzyFinder-OpenGitFlowPanel": "Gitflow",
    "FuzzyFinder-OpenFile": "打开 文件",
    "FuzzyFinder-OpenFileInExternalCompareTool": "打开 in External Diff/合并 Tool",
    "FuzzyFinder-OpenInFileManagerKeywords": "folder explorer finder",
    "FuzzyFinder-OpenInTerminalKeywords": "in-app terminal command line console",
    "FuzzyFinder-OpenWorkspaces": "打开 Workspaces",
    "FuzzyFinder-OpenRepoPrefix": "打开 Repo",
    "FuzzyFinder-SearchCommits": "Search 提交s",
    "FuzzyFinder-Settings": "设置",
    "FuzzyFinder-SettingsKeywords": "preferences options",
    "FuzzyFinder-ShareWipAsCloudPatch": "Share uncommitted changes as Cloud Patch",
    "FuzzyFinder-ShareWipAsCloudPatchKeywords": "WIP working directory cloud patch",
    "FuzzyFinder-ShareCommitAsCloudPatch": "Share commit as Cloud Patch",
    "FuzzyFinder-ShareStashAsCloudPatch": "Share stash as Cloud Patch",
    "FuzzyFinder-ShareCommitsAsCloudPatch": "Share commits as Cloud Patch",
    "FuzzyFinder-StashPrefix": "Stash: ",
    "FuzzyFinder-SwitchProfile": "Switch to Profile",
    "FuzzyFinder-SwitchTheme": "Switch Theme",
    "FuzzyFinder-ToggleSyntaxHighlighting": "Toggle Syntax Highlighting",
    "FuzzyFinder-ToggleToolbarLabels": "Toggle Toolbar Labels",
    "FuzzyFinder-ViewFile": "View 文件",
    "FuzzyFinder-ViewErrorLogs": "View 错误 Logs",
    "FuzzyFinder-ViewPerformanceLogs": "View Performance Logs",
    "FuzzyFinder-ViewReleaseNotes": "View Release 否tes",
    "FuzzyFinder-ViewReleaseNotesKeywords": "patch notes changelog",
    "FuzzyFinder-ViewWorkingDirectoryChanges": "View Working Directory Changes",
    "FuzzyFinder-ViewWorkingDirectoryChangesKeywords": "changes wip workdir working",
    "FuzzyFinder-GenerateCommitMessage": "Generate 提交 Message",
    "FuzzyFinder-GenerateCommitMessageKeywords": "chatgpt openai",
    "CommitSearch-ClearFilter": "Clear filter",
    "CommitSearch-Placeholder": "find commit",
    "CommitSearch-ResultsText": "{0} of {1}",
    "CommitSearch-NoResults": "0 results",
    "CommitSearch-NoAuthorsFound": "否 authors found",
    "CommitSearch-Indexing": "Indexing",
    "CommitFilter-FilterPlaceholder": "filter the graph by team or author",
    "CommitFilter-AuthorsInOrg": "members of {0}",
    "CommitFilter-AuthorsNotInOrg": "authors not in your organization",
    "CommitFilter-Authors": "authors",
    "CommitFilter-Teams": "teams",
    "GARLIC-RequestCancelledFromCredentialChange": "Request cancelled, credentials have changed for {0}",
    "GitHook-ExitCode": "Git Hook exited with {0}",
    "GitHook-ExitedSuccessfully": "{0}: 退出ed with code 0",
    "GitHooks-ExitedSuccessfully": "Git Hooks exited with code 0: {0}",
    "GitHooks-Failed": "Multiple Git Hooks have failed",
    "GitHook-HookFailed": "{0} Failed",
    "GitHook-PermissionDenied": "{0} isn't executable!",
    "GitHook-PrePushDidNotRun": "Pre-push hook did not run",
    "GitHook-PrePushDidNotRunReason": "{0} does not exist on {1}",
    "GitHook-FailedToRun": "Git Hook failed to run.",
    "LeftPanel-CheckedOut": "Checked out",
    "LeftPanel-ClearFilter": "Clear filter",
    "LeftPanel-Collapse": "Collapse Panel",
    "LeftPanel-FilterCommits": "Filter ({0} + {1} + f)",
    "LeftPanel-Filtering": "Filtering",
    "LeftPanel-Expand": "Expand Panel",
    "LeftPanel-Hide": "Hide in the graph",
    "LeftPanel-Show": "Show in the graph",
    "LeftPanel-StopSoloing": "Stop soloing this branch",
    "LeftPanelAddUserForkRow-YouHaveAFork": "You have a fork of this repo",
    "LeftPanelAddUserForkRow-AddRemoteButtonLabel": "添加",
    "LeftPanelAddUserForkRow-AddThisFork": "添加 this fork as a remote",
    "TextOperation-Cut": "Cut",
    "TextOperation-Copy": "Copy",
    "TextOperation-CopyFileContentsToClipboard": "Copy file contents to clipboard",
    "TextOperation-CopySuccess": "Copied!",
    "TextOperation-Paste": "Paste",
    "TextOperation-Delete": "删除",
    "TextOperation-SelectAll": "Select All",
    "ResizePanel": "Resize Panel",
    "Hide": "Hide",
    "Show": "Show",
    "FastForwardBranchToBranch": "Fast forward branch {0} to branch {1}",
    "MergedBranchToRef": "合并 branch '{0}' into {1}",
    "MergedRemoteBranchToRef": "合并 remote-tracking branch '{0}' into {1}",
    "MergedTagToRef": "合并 tag '{0}' into {1}",
    "MergedBranchToMaster": "合并 branch '{0}'",
    "MergedRemoteBranchToMaster": "合并 remote-tracking branch '{0}'",
    "MergedTagToMaster": "合并 tag '{0}'",
    "MergeConflictMessageSingular": "A file conflict was found when attempting to merge into {0}",
    "MergeConflictMessagePlural": "{0} file conflicts were found when attempting to merge into {1}",
    "ExternalDiffTool": "external diff tool",
    "ExternalMergeTool": "external merge tool",
    "OpenInDiffTool": "打开 in diff tool",
    "OpenInMergeTool": "打开 in merge tool",
    "OpenIn": "打开 in {0}",
    "OpenSingleRepoIn": "打开 in {0}",
    "OpenSingleRepoInMenuItem": "打开 repo in {0}",
    "OpenAllInWorkspace": "打开 all in {0} workspace",
    "OpenAllInWorkspaceMenuItem": "打开 all repos in {0} workspace",
    "OpenXIn": "打开 {0} in {1} workspace",
    "OpenXInMenuItem": "打开 {0} repos in {1} workspace",
    "MarkAllResolved": "Mark All Resolved",
    "MarkNResolved": "Mark {0} resolved",
    "MarkAsConflicted": "Mark conflicted",
    "MarkAsResolved": "Mark resolved",
    "MarkNConflicted": "Mark {0} conflicted",
    "TakeIncoming": "Take incoming ({0})",
    "TakeCurrent": "Take current ({0})",
    "TakeIncomingNFiles": "Take incoming ({0}) {1} files",
    "TakeCurrentNFiles": "Take current ({0}) {1} files",
    "UnsupportedRebaseMessageNodeGit": "A rebase in this repository was started by using an external application or Git Executable",
    "UnsupportedRebaseMessageGitExecutable": "An interactive rebase in this repository was started by using an external application",
    "UnknownUnsupportedRebaseMessage": "A rebase started in this repository is not supported",
    "ViewExternalEditorSettings": "View External 编辑器 设置",
    "ViewDiffToolSettings": "View Diff Tool 设置",
    "ViewMergeToolSettings": "View 合并 Tool 设置",
    "ViewShPathSettings": "View 设置",
    "ViewTerminalSettings": "View 终端 设置",
    "AbortMergeButtonLabel": "Abort 合并",
    "AbortRebaseButtonLabel": "Abort Rebase",
    "AmendOrRewordPreviousCommitMessageButtonLabel": "Update Message",
    "AmendPreviousCommitMessageTip": "Click to amend your commit message",
    "AmendStashMessageTip": "Click to amend your stash message",
    "AutoUpdate-Notification-RestartGitKrakenAndInstallUpdateButtonLabel": "Restart and update",
    "AutoUpdate-StatusBar-RestartGitKrakenAndInstallUpdateButtonLabel": "Update Ready (Restart GitKraken Desktop)",
    "BrowseButtonLabel": "Browse",
    "CancelAmendPreviousCommitMessageButtonLabel": "取消 Amend",
    "CancelButtonLabel": "取消",
    "CancelCreateSharedPatchButtonLabel": "取消 Patch Creation",
    "CancelRewordPreviousCommitMessageButtonLabel": "取消 Reword",
    "CherryPickFileFromStash": "Apply stashed file",
    "CherryPickNFilesFromStash": "Apply {0} files from stash",
    "CommitAndMergeButtonLabel": "提交 and 合并",
    "CommitButtonLabelAddMessage": "Type a Message to 提交",
    "CommitButtonLabelSingular": "提交 Changes to 1 文件{0}{1}",
    "CommitButtonLabelPlural": "提交 Changes to {0} 文件s{1}{2}",
    "AmendPreviousCommitButtonLabel": "Amend Previous 提交{0}{1}",
    "CommitButtonLabelCheckboxAmend": "Amend previous commit",
    "CommitButtonLabelPushSuffix": " and 推送",
    "CommitButtonLabelSkipHooksSuffix": " (Skip Hooks)",
    "CommitButtonLabelCheckboxPushAfterCommitting": "推送 after committing",
    "CommitButtonLabelCheckboxSkipHooks": "Skip Git hooks",
    "CommitButtonLabelStageFiles": "Stage Changes to 提交",
    "Communication-SupportFormSubject": "GitKraken Desktop Support Request",
    "ContinueRebaseButtonLabel": "Continue Rebase",
    "CreateSharedPatchButtonLabel": "创建 Patch",
    "DefaultYourOrgNameLowercase": "your organization",
    "DeleteAndCommitLabel": "删除 & 提交",
    "DeleteButtonLabel": "删除",
    "DisabledMergeButtonLabel": "否 Changes to 合并",
    "DiscardNChanges": "Discard {0} files",
    "DiscardThisHunk": "Discard Hunk",
    "DiscardThisLine": "Discard this line",
    "DiscardUnstagedChangesButtonLabel": "Discard Unstaged Changes",
    "DismissButtonLabel": "Dismiss",
    "DropCommitButtonLabel": "Drop commit",
    "DropCommitsButtonLabel": "Drop commits",
    "ExitPreferencesButtonLabel": "退出 偏好设置",
    "FinishButtonLabel": "Finish",
    "ForcePushButtonLabel": "Force 推送",
    "ForcePushWithLeaseButtonLabel": "Force 推送",
    "ForcePushWithoutLeaseButtonLabel": "Force 推送 Anyway",
    "ForceRemoveWorktreeButtonLabel": "Force Remove Worktree",
    "GenerateButtonLabel": "Generate",
    "InitializeButtonLabel": "Initialize",
    "LinuxUpdate-DownloadDebUpdateButtonLabel": ".deb",
    "LinuxUpdate-DownloadFromGitKraken": "Download from GitKraken.com",
    "LinuxUpdate-DownloadRpmUpdateButtonLabel": ".rpm",
    "LinuxUpdate-DownloadTarGzUpdateButtonLabel": ".tar.gz",
    "LinuxUpdate-Downloaded": "Completed downloading {0}",
    "LinuxUpdate-Downloading": "Downloading {0}...",
    "LinuxUpdate-FailedTryAgain": "Update Failed. Try Again.",
    "LinuxUpdate-Notification-AvailableStatus": "Download Update",
    "LinuxUpdate-ShowDownloadedUpdateButtonLabel": "Update Downloaded (Show 文件)",
    "LinuxUpdate-SomethingWentWrong": "Something went wrong when downloading the update",
    "LinuxUpdate-StatusBar-AvailableStatus": "Update Available ({0})",
    "LinuxUpdate-TryAgain": "Try Again",
    "LogInButtonLabel": "Log In",
    "NextButtonLabel": "Next",
    "NoButtonLabel": "否",
    "OKButtonLabel": "OK",
    "OpenNowButtonLabel": "打开 否w",
    "PreviousButtonLabel": "Previous",
    "ProceedButtonLabel": "Proceed",
    "RefCreatedMessage": "{0}: {1} created @ {2}",
    "ResetAllButtonLabel": "Reset All",
    "ResetAllWithSubmodulesButtonLabel": "Continue",
    "ResetFileButtonLabel": "Reset 文件",
    "ResetFilesButtonLabel": "Reset 文件s",
    "RetryWithoutOAuthLabel": "重试 without OAuth",
    "RevertThisHunk": "Revert Hunk",
    "RevertThisHunk-Tooltip": "Apply the inverse of this hunk to your working directory",
    "RewordCommitMessageHelperText": "Rewording this commit message will cause {0} commits to be rebased.",
    "RewordCommitMessageTooltip": "Click to reword your commit message",
    "RewordInputTitle": "Reword commit message",
    "SaveAncestor": "保存 Ancestor",
    "SeePlansButtonLabel": "See GitKraken Plans",
    "SelectPlaceholder": "Select...",
    "SignIntoMyAccount": "Sign In to My Account",
    "SkipCommitButtonLabel": "Skip 提交",
    "StageAllChanges": "Stage All Changes",
    "StageFilemodeChange": "Stage filemode change",
    "StageNChangesButtonLabel": "Stage {0} 文件s",
    "StageNChangesMenu": "Stage {0} files",
    "StageSelectedLines": "Stage selected lines",
    "StageThisChange": "Stage this change",
    "StageThisFile": "Stage 文件",
    "StageThisHunk": "Stage Hunk",
    "StageThisLine": "Stage this line",
    "StartRebaseButtonLabel": "是, Start Rebase",
    "StartTrialButtonLabel": "Start a Free Trial",
    "StashNFiles": "Stash {0} files",
    "StashThisFile": "Stash file",
    "SubmitButtonLabel": "Submit",
    "AcceptButtonLabel": "Accept",
    "SupportButtonLabel": "Support",
    "TrialStatus1Day": "1 day of GitKraken Trial Remaining - Upgrade 否w",
    "TrialStatusXDays": "{0} days of GitKraken Trial Remaining - Upgrade 否w",
    "UnstageAllChanges": "Unstage All Changes",
    "UnstageAndRemoveButtonLabel": "Unstage & 删除",
    "UnstageFilemodeChange": "Unstage filemode change",
    "UnstageNChangesButtonLabel": "Unstage {0} 文件s",
    "UnstageNChangesMenu": "Unstage {0} files",
    "UnstageThisChange": "Unstage this change",
    "UnstageThisFile": "Unstage 文件",
    "UnstageThisHunk": "Unstage Hunk",
    "UnstageThisLine": "Unstage this line",
    "WindowsFilemodeChangeWarning": "文件mode changes may have been made for the index outside of GitKraken Desktop.",
    "WindowsFilemodeChangeWarningConfigEnabled": "You have filemode changes enabled in your git config! In Windows, the files in the working directory appear to have -x, so filemode changes show up here.",
    "YesButtonLabel": "是",
    "ConfirmButtonLabel": "确认",
    "RemoveButtonLabel": "Remove",
    "Option-None": "<否ne>",
    "Option-Custom": "<Custom>",
    "Option-UseMergeTool": "<Use 合并 Tool>",
    "Option-BuiltInTerminal": "GitKraken Desktop Integrated 终端",
    "ActivityLogButtonTooltip": "Activity Logs",
    "UndoValidButtonTooltip": "Undo {0}",
    "RedoValidButtonTooltip": "Redo {0}",
    "ReferralButtonTooltip": "Earn $20",
    "UndoCannotButtonTooltip": "Cannot undo",
    "RedoCannotButtonTooltip": "Cannot redo",
    "UndoInvalidButtonTooltip": "Cannot undo {0}. Only commit (with a parent), checkout, and some discard operations are currently supported.",
    "RedoInvalidButtonTooltip": "否 recent undo found to redo",
    "RefreshButtonTooltip": "Refresh",
    "RefreshTokenLabel": "Refresh Token",
    "SetAsDefaultOptionTooltip": "Set as default",
    "DefaultOptionTooltip": "Default",
    "PushButtonTooltip": "推送",
    "PushToButtonTooltip": "推送 to {0}",
    "PullOptionsMessage": "Select a default pull/fetch operation to execute when clicking this button",
    "PullOptions-FetchAll": "Fetch All",
    "PullOptions-Merge": "拉取 (fast-forward if possible)",
    "PullOptions-FastForwardOnly": "拉取 (fast-forward only)",
    "PullOptions-Rebase": "拉取 (rebase)",
    "StashButtonTooltip": "Stash",
    "ApplyStashButtonTooltip": "Apply Stash",
    "PopStashButtonTooltip": "Pop Stash",
    "SearchCommitsTooltip": "Search 提交s ({0} + F)",
    "CliButtonTooltip-terminalPanel": "Show/Hide 终端",
    "InviteButtonTooltip": "Invite a collaborator to GitKraken",
    "FuzzyFinderButtonTooltip": "Command Palette ({0} + P)",
    "KeyBindingsTooltip": "Keyboard Shortcuts ({0} + /)",
    "Rebasing-LoadingOverlayLabel": "Rebasing",
    "Rebasing-CommitLabel": "Rebasing commit {0} out of {1}",
    "Rebasing-AutoStashLabel": "Stashing uncommitted changes",
    "Rebasing-PoppingAutoStashLabel": "Popping auto stashed changes",
    "ReflogAction": "Action with reflog message \"{0}\"",
    "ReflogActionCommit": "提交 \"{0}\"",
    "ReflogActionCommitAmend": "提交 amend \"{0}\"",
    "ReflogActionCheckout": "Checkout from \"{0}\" to \"{1}\"",
    "ReflogActionReset": "Reset to \"{0}\"",
    "ReflogActionSaveOne": "Discard \"{0}\"",
    "ReflogActionSaveMany": "Discard \"{0}\" and {1} other file(s)",
    "ReflogActionSaveUnknown": "Discard",
    "ReflogActionDeleteBranchTracking": "删除 branch \"{0}\" tracking \"{1}\"",
    "ReflogActionDeleteBranch": "删除 branch \"{0}\"",
    "ReflogActionRemoveRemote": "Remove remote \"{0}\"",
    "ConflictsHeader-Merging": "Merging {0} into {1} ",
    "ConflictsHeader-Rebasing": "Rebasing {0} onto {1} ",
    "ContextMenu-AddToDictionary": "添加 to Dictionary",
    "ContextMenu-AmendOrRewordCommitMessage": "Edit commit message",
    "ContextMenu-AmendStashMessage": "Edit stash message",
    "ContextMenu-AnnotateTag": "Annotate {0}",
    "ContextMenu-CheckoutBranch": "Checkout {0}",
    "ContextMenu-CheckoutCommit": "Checkout this commit",
    "ContextMenu-CheckoutCommitSubmenu": "this commit",
    "ContextMenu-Checkout": "Checkout",
    "ContextMenu-CherrypickCommit": "Cherry pick commit",
    "ContextMenu-CherrypickCommits": "Cherry pick {0} commits",
    "ContextMenu-CreateAnnotatedTag": "创建 annotated tag here",
    "ContextMenu-CreateWorktreeFrom": "创建 worktree from",
    "ContextMenu-CreateWorktreeFromBranch": "创建 worktree from {0}",
    "ContextMenu-CreateWorktreeFromCommit": "创建 worktree from this commit",
    "ContextMenu-CreateWorktreeFromCommitSubmenu": "this commit",
    "ContextMenu-CloseTab": "关闭 tab",
    "ContextMenu-CloseOtherTabs": "关闭 other tabs",
    "ContextMenu-CloseTabsRight": "关闭 tabs to the right",
    "ContextMenu-CommitNotInGraph": "Can't jump to commit in graph, because it's not visible.",
    "ContextMenu-CompareAgainstWorkingCopy": "Compare commit against working directory",
    "ContextMenu-CopyBranchName": "Copy branch name",
    "ContextMenu-CopyDeepLinkFailed": "Failed to copy deep link",
    "ContextMenu-CopyDeepLinkFailedMissingInfo": "否 commit sha, branch name or tag name found.",
    "ContextMenu-CopyDeepLinkFailedNoFirstCommitSha": "否 first commit sha found for the repo.",
    "ContextMenu-CopyDeepLinkFailedNoRemoteUrl": "否 remote url could be found.",
    "ContextMenu-CopyDeepLinkForBranch": "Copy link to branch: {0}",
    "ContextMenu-CopyDeepLinkForCommit": "Copy link to this commit",
    "ContextMenu-CopyDeepLinkForCommitOnRemote": "Copy link to this commit on remote: {0}",
    "ContextMenu-CopyDeepLinkForRemote": "Copy link to remote: {0}",
    "ContextMenu-CopyDeepLinkForTag": "Copy link to this tag",
    "ContextMenu-CopyDeepLinkForTagOnRemote": "Copy link to this tag on remote: {0}",
    "ContextMenu-CopyDeepLinkOnRemote": "on remote: {0}",
    "ContextMenu-OpenGijLinkFailed": "Failed to open Jira link",
    "ContextMenu-OpenGijLinkFailedMissingInfo": "否 commit sha found.",
    "ContextMenu-OpenGijLinkFailedNoFirstCommitSha": "否 first commit sha found for the repo.",
    "ContextMenu-OpenGijLinkFailedMissingResource": "Please ensure a Jira project is selected in the Issues section of the left panel.",
    "ContextMenu-OpenGijLinkForCommit": "打开 Jira to this commit",
    "ContextMenu-OpenGijLinkForCommitFileDiff": "打开 Jira to this file diff",
    "ContextMenu-OpenGijLinkForCommitFileDiffOnInstance": "打开 Jira to this file diff on instance: {0}",
    "ContextMenu-OpenGijLinkForCommitOnInstance": "打开 Jira to this commit on instance: {0}",
    "ContextMenu-OpenWorktreeFromBranch": "打开 worktree from {0}",
    "ContextMenu-CopyFilePath": "Copy file path",
    "ContextMenu-CopyCommitSha": "Copy commit sha",
    "ContextMenu-CopyTagName": "Copy tag name",
    "ContextMenu-CreateBranchHere": "创建 branch here",
    "ContextMenu-CreateTagHere": "创建 tag here",
    "ContextMenu-DeleteLocalAndRemoteBranches": "删除 {0} and {1}",
    "ContextMenu-DeleteAll": "删除 all \"{0}\" branches (local && remote)",
    "ContextMenu-DeleteBranch": "删除 {0}",
    "ContextMenu-Delete1BranchInFolder": "删除 1 branch in folder \"{0}\"",
    "ContextMenu-DeleteNBranchesInFolder": "删除 {0} branches in folder \"{1}\"",
    "ContextMenu-DeleteNLocalBranches": "删除 {0} local branches",
    "ContextMenu-DeleteNStashes": "删除 {0} stashes",
    "ContextMenu-DeleteTagXLocally": "删除 {0} locally",
    "ContextMenu-DeleteTagFromRemote": "删除 tag from remote",
    "ContextMenu-DeleteTagXFromRemoteY": "删除 {0} from {1}",
    "ContextMenu-DeleteTagXFromAllRemotes": "删除 {0} from all remotes",
    "ContextMenu-DropCommit": "Drop commit",
    "ContextMenu-DropCommits": "Drop {0} commits",
    "ContextMenu-EditRemote": "Edit {0}",
    "ContextMenu-ExportStashToCloudPatch": "Share stash as Cloud Patch",
    "ContextMenu-FastForward": "Fast-forward {0} to {1}",
    "ContextMenu-FavoriteRepository": "Favorite repository",
    "ContextMenu-FetchRemote": "Fetch {0}",
    "ContextMenu-ForkRemoteOnService": "Fork {0} ({1}) on {2}",
    "ContextMenu-GitHubActionDelete": "删除 Workflow",
    "ContextMenu-GitHubActionEdit": "Edit Workflow",
    "ContextMenu-GitHubActionView": "View Workflow on GitHub",
    "ContextMenu-GoToParentCommit": "Jump to commit in graph",
    "ContextMenu-HideAllStashes": "Hide all stashes",
    "ContextMenu-HideAllTags": "Hide all tags",
    "ContextMenu-HideNStashes": "Hide {0} stashes",
    "ContextMenu-HideNLocalBranches": "Hide {0} branches",
    "ContextMenu-IssueCheckoutBranchFrom": "Checkout branch from {0}",
    "ContextMenu-IssueCreateBranchGitFlowFeature": "Gitflow: create feature branch",
    "ContextMenu-IssueCreateBranchGitFlowHotfix": "Gitflow: create hotfix branch",
    "ContextMenu-IssueCreateBranchGitFlowRelease": "Gitflow: create release branch",
    "ContextMenu-IssueCopyCardLink": "Copy card link",
    "ContextMenu-IssueCopyIssueLink": "Copy issue link",
    "ContextMenu-IssueViewIssueInGitHub": "View issue in GitHub",
    "ContextMenu-IssueViewIssueInGitHubEnterprise": "View issue in GitHub Enterprise Server",
    "ContextMenu-IssueViewIssueInGitLab": "View issue in GitLab",
    "ContextMenu-IssueViewCardInTrello": "View card in Trello",
    "ContextMenu-IssueViewIssueInIssueTracker": "View issue in issue tracker",
    "ContextMenu-IssueViewIssueInJira": "View issue in Jira",
    "ContextMenu-IssueViewCardX": "View card {0}",
    "ContextMenu-IssueViewIssueX": "View issue {0}",
    "ContextMenu-IssueViewCardXInBrowser": "View card {0} in browser",
    "ContextMenu-IssueViewIssueXInBrowser": "View issue {0} in browser",
    "ContextMenu-IssueTrackerFilterRemoveFilter": "Remove this filter",
    "ContextMenu-IssueTrackerFilterEditFilter": "Edit this filter",
    "ContextMenu-IssueTrackerFilterMoveDown": "Move this filter down",
    "ContextMenu-IssueTrackerFilterMoveUp": "Move this filter up",
    "ContextMenu-LeftPanelShowAllLocalBranches": "Show all local branches",
    "ContextMenu-LeftPanelShowAllRemotes": "Show all remotes",
    "ContextMenu-LeftPanelHideAllLocalBranches": "Hide all local branches",
    "ContextMenu-LeftPanelHideAllRemotes": "Hide all remotes",
    "ContextMenu-LeftPanelMaximizeThisSection": "Maximize this section",
    "ContextMenu-LeftPanelCloudPatches": "Cloud Patches",
    "ContextMenu-LeftPanelGitFlow": "Gitflow",
    "ContextMenu-LeftPanelGitHubActions": "GitHub Actions",
    "ContextMenu-LeftPanelGitHubIssues": "GitHub Issues",
    "ContextMenu-LeftPanelGitHubEnterpriseIssues": "GitHub Issues",
    "ContextMenu-LeftPanelGitLabIssues": "GitLab Issues",
    "ContextMenu-LeftPanelGitLabSelfManagedIssues": "GitLab Issues",
    "ContextMenu-LeftPanelIssues": "Issues",
    "ContextMenu-LeftPanelJiraIssues": "Jira Issues",
    "ContextMenu-LeftPanelLocal": "Local",
    "ContextMenu-LeftPanelPullRequests": "拉取 Requests",
    "ContextMenu-LeftPanelRemote": "Remote",
    "ContextMenu-LeftPanelStashes": "Stashes",
    "ContextMenu-LeftPanelSubmodules": "Submodules",
    "ContextMenu-LeftPanelTags": "Tags",
    "ContextMenu-LeftPanelTeams": "Teams",
    "ContextMenu-LeftPanelTrello": "Trello",
    "ContextMenu-LeftPanelWorktrees": "Worktrees",
    "ContextMenu-MergeBranchIntoBranch": "合并 {0} into {1}",
    "ContextMenu-MoveCommitDown": "Move commit down",
    "ContextMenu-MoveCommitUp": "Move commit up",
    "ContextMenu-MoveXCommitsDown": "Move {0} commits down",
    "ContextMenu-MoveXCommitsUp": "Move {0} commits up",
    "ContextMenu-NoItems": "(no actions)",
    "ContextMenu-PickCommit": "Pick commit",
    "ContextMenu-PushAndStartPullRequestToRef": "推送 {0} and start a pull request to {1}",
    "ContextMenu-PushAndStartPullRequest": "推送 {0} and start a pull request",
    "ContextMenu-PushTagToRemote": "推送 tag to remote",
    "ContextMenu-PushXToEllipses": "推送 {0} to...",
    "ContextMenu-PushXToAllRemotes": "推送 {0} to all remotes",
    "ContextMenu-PushXToY": "推送 {0} to {1}",
    "ContextMenu-RebaseBranchOntoBranch": "Rebase {0} onto {1}",
    "ContextMenu-RebaseBranchOntoBranchInteractively": "Interactive Rebase {0} onto {1}",
    "ContextMenu-RebaseXChildrenOfShaInteractively": "Interactive Rebase {0} children of {1}",
    "ContextMenu-RefNotDisplayed": "{0} more refs not displayed",
    "ContextMenu-RemoveRemote": "Remove {0}",
    "ContextMenu-RenameBranch": "Rename {0}",
    "ContextMenu-RenameTab": "Rename tab",
    "ContextMenu-AliasRepo": "Alias repository",
    "ContextMenu-ReopenClosedTab": "Reopen 关闭d Tab",
    "ContextMenu-ResetBranchToThisCommit": "Reset {0} to this commit",
    "ContextMenu-ResetSoftWithHint": "Soft - keep all changes",
    "ContextMenu-ResetMixedWithHint": "Mixed - keep working copy but reset index",
    "ContextMenu-ResetHardWithHint": "Hard - discard all changes",
    "ContextMenu-RevertCommit": "Revert commit",
    "ContextMenu-RewordCommit": "Reword commit",
    "ContextMenu-SetUpstream": "Set Upstream",
    "ContextMenu-ShowAllStashes": "Show all stashes",
    "ContextMenu-ShowAllTags": "Show all tags",
    "ContextMenu-ShowNLocalBranches": "Show {0} branches",
    "ContextMenu-SoloNLocalBranches": "Solo {0} branches",
    "ContextMenu-ShowNStashes": "Show {0} stashes",
    "ContextMenu-SquashCommit": "Squash commit",
    "ContextMenu-StartPullRequestFromY": "Start a pull request from {0}",
    "ContextMenu-StartPullRequestToX": "Start a pull request to {0}",
    "ContextMenu-StartPullRequestToXFromY": "Start a pull request to {0} from {1}",
    "ContextMenu-StashApply": "Apply Stash",
    "ContextMenu-StashDelete": "删除 Stash",
    "ContextMenu-StashPop": "Pop Stash",
    "ContextMenu-StopSoloingNLocalBranches": "Stop soloing {0} branches",
    "ContextMenu-SquashXCommits": "Squash {0} commits",
    "ContextMenu-UnfavoriteRepository": "Unfavorite repository",
    "ContextMenu-ViewServiceRemoteInBrowser": "View {0} on {1}",
    "StashDeletion-Complete": "Stash Deletion Complete",
    "StashDeletion-SuccessfullyDeletedNStashes": "成功fully deleted {0} out of {1} stashes.",
    "Toolbar-CloseSubmodule": "关闭 Submodule",
    "Toolbar-CloseRepository": "关闭 仓库",
    "Toolbar-CloseWorktree": "关闭 Worktree",
    "Toolbar-PushNotAvailableInDetachedHead": "推送 is not available when in a detached HEAD state",
    "Toolbar-PullMergeNotAvailableInDetachedHead": "拉取 (fast-forward if possible) is not available when in a detached HEAD state",
    "Toolbar-PullFastForwardOnlyNotAvailableInDetachedHead": "拉取 (fast-forward only) is not available when in a detached HEAD state",
    "Toolbar-PullRebaseNotAvailableInDetachedHead": "拉取 (rebase) is not available when in a detached HEAD state",
    "BreadCrumbs-FavoritesHeader": "Favorites",
    "BreadCrumbs-RecentsHeader": "Recently opened",
    "Profile-AddAProfile": "添加 a Profile",
    "Profile-AddProfile": "添加 Profile",
    "Profile-AuthorEmail": "Author Email",
    "Profile-AuthorName": "Author Name",
    "Profile-ConfirmDelete": "Are you sure you want to {0} this profile?",
    "Profile-CreateOrganization": "创建 Organization",
    "Profile-RegisterToCreateOrg": "Start a free trial to invite your team members and collaborate on Workspaces",
    "Profile-CopySettingsFromCurrentProfile": "Copy settings from current profile",
    "Profile-CurrentProfile": "Current profile",
    "Profile-Delete": "删除",
    "Profile-DeleteLower": "delete",
    "Profile-DeleteProfile": "删除 profile",
    "Profile-DeleteProfileWarning": "This action cannot be undone",
    "Profile-Description": "GitKraken Desktop uses profiles to store your application preferences as well as git config information. The preferences you set after installing are set as your default profile. Pro plans allow you to create additional profiles and quickly switch between them for different work environments.",
    "Profile-Description-FreeAddendum": "{0} to create multiple profiles.",
    "Profile-Description-UpgradeLinkText": "Upgrade your plan",
    "Profile-Description-NoAccountAddendum": "{0} to create multiple profiles, or {1}.",
    "Profile-Description-RegisterLinkText": "Start a free trial",
    "Profile-Description-LoginLinkText": "log in",
    "Profile-EditProfile": "Edit Profile",
    "Profile-ExplainLocal": "This profile will only be accessible on this machine",
    "Profile-ExplainSync": "\"Local\" profiles are only accessible on this machine. \"Synced\" profiles will sync with your account and be available on any machine.",
    "Profile-ExplainSyncModal": "Sync a profile to access it when logged into your GitKraken account on any machine",
    "Profile-FinishEditing": "Please finish editing your file before adding or changing profiles",
    "Profile-Local": "Local",
    "Profile-ManageAccount": "Manage Account",
    "Profile-MyProfiles": "My Profiles",
    "Profile-Organization": "Organization",
    "Profile-ProfileName": "Profile Name",
    "Profile-ProfileType": "Profile Type",
    "Profile-RequiresPro": "Upgrade to add or switch profiles",
    "Profile-RequiresTrial": "Start a free trial to save your preferences across multiple profiles",
    "Profile-SaveChanges": "保存 Changes",
    "Profile-SelectIcon": "Select a profile icon",
    "Profile-SwitchToThisProfile": "Switch to this profile",
    "Profile-SyncChanges": "Keep my .gitconfig updated with my GitKraken Desktop Profile preferences",
    "Profile-SyncChangesSub": "When checked, GitKraken Desktop will update your global .gitconfig to match GitKraken 偏好设置, including commit author name and email, and any GPG settings.",
    "Profile-Synced": "Synced",
    "Profile-Type": "Type",
    "ProfileAccountMenu-Account": "Account",
    "ProfileAccountMenu-CommitSignature": "提交 signature",
    "ProfileAccountMenu-ManageAccount": "Manage account",
    "ProfileAccountMenu-ManageProfiles": "Manage profiles",
    "ProfileAccountMenu-NoProfiles": "否 Profiles",
    "ProfileAccountMenu-NoProfileSelected": "否 profile selected",
    "ProfileAccountMenu-Organization": "Organization",
    "ProfileAccountMenu-SignIntoDifferentAccount": "登录to a different account",
    "ProfileAccountMenu-SignIn": "登录",
    "Profiles": "Profiles",
    "RefBar-FilterIconToolTip": "Filtered results",
    "RefBar-GroupCloudPatches": "CLOUD PATCHES",
    "RefBar-GroupGitFlow": "GITFLOW",
    "RefBar-GroupGitHubAction": "GITHUB ACTIONS",
    "RefBar-GroupGitHub": "GITHUB ISSUES",
    "RefBar-GroupGitHubEnterprise": "GITHUB ISSUES",
    "RefBar-GroupGitLab": "GITLAB ISSUES",
    "RefBar-GroupGitLabSelfManaged": "GITLAB ISSUES",
    "RefBar-GroupIssueTracker": "ISSUES",
    "RefBar-GroupJira": "JIRA ISSUES",
    "RefBar-GroupTeamVisibility": "TEAMS",
    "RefBar-GroupTrello": "TRELLO",
    "RefBar-GroupLocal": "LOCAL",
    "RefBar-GroupRemote": "REMOTE",
    "RefBar-GroupPullRequests": "PULL REQUESTS",
    "RefBar-GroupStashes": "STASHES",
    "RefBar-GroupSubmodules": "SUBMODULES",
    "RefBar-GroupTags": "TAGS",
    "RefBar-GroupWorktrees": "WORKTREES",
    "RefBar-NAhead": "{0} ahead",
    "RefBar-NBehind": "{0} behind",
    "RefBar-NavigateToTag": "Navigate to tag",
    "RefBar-StatusViewing": "Viewing",
    "RefBar-StatusSoloing": "Soloing",
    "RefBar-AddRemote": "添加 a remote",
    "RefBar-AddGitHubAction": "添加 a GitHub Action",
    "RefBar-OpenGitFlow": "打开 Gitflow",
    "RefBar-AddSubmodule": "添加 a new submodule",
    "RefBar-AddWorktree": "添加 a new worktree",
    "RefBar-BranchActions": "分支 actions",
    "RefBar-TagActions": "Tag actions",
    "RefBar-SilentFetchFailed": "Autofetch failed. Fetch manually for more information.",
    "Repo-SuccessfullyCreatedRepo": "成功fully created repo",
    "PullRequest-SuccessfullyCreatePullRequest": "成功fully created pull request",
    "ViewOnHostingService": "View on {0}",
    "GitHubActionBar-Menu": "GitHub Action actions",
    "PullRequestBar-Assignees": "Assignees",
    "PullRequestBar-Reviewers": "Reviewers",
    "PullRequestBar-Labels": "Labels",
    "PullRequestBar-Opened": "打开ed: {0}",
    "PullRequestBar-Updated": "Updated: {0}",
    "PullRequestBar-CreatePullRequest": "创建 拉取 Request",
    "PullRequestBar-Menu": "拉取 request actions",
    "PullRequestBar-UnknownPullRequestHead": "Private/删除d repository (access denied)",
    "PullRequestBar-UnknownPullRequestOwnerLogin": "Unknown username (access denied)",
    "PullRequestBar-ViewPullRequestInBrowser": "View pull request {0}{1} on {2}",
    "PullRequestBar-ReviewPullRequest": "Review code && suggest changes for {0}{1} on {2}",
    "PullRequestBar-CopyPullRequestLink": "Copy link for pull request {0}{1}",
    "PullRequestBar-GoToInGraph": "Go to {0} in graph",
    "PullRequestBar-ViewContinuousIntegrationResultInBrowser": "View {0}'s latest build",
    "PullRequestBar-AddPullRequestRemote": "添加 {0} as a remote",
    "PullRequestBar-AddPullRequestRemoteAndCheckoutPRHead": "添加 remote and checkout {0}",
    "PullRequestBar-CreateWorktree": "创建 Worktree from 拉取 Request",
    "PullRequestFilter-CancelLabel": "取消",
    "PullRequestFilter-CreateFilter": "创建 a filter",
    "PullRequestFilter-CreateFilterLabel": "创建 拉取 Request Filter",
    "PullRequestFilter-EditFilter": "Edit this filter",
    "PullRequestFilter-EditFilterLabel": "Edit 拉取 Request Filter",
    "PullRequestFilter-FilterLabel": "Filter 拉取 Requests",
    "PullRequestFilter-FilterQueryPlaceholder": "Enter a query to filter pull requests",
    "PullRequestFilter-MoveDown": "Move this filter down",
    "PullRequestFilter-MoveUp": "Move this filter up",
    "PullRequestFilter-NameLabel": "Filter name",
    "PullRequestFilter-NamePlaceholder": "Enter a name for this filter",
    "PullRequestFilter-RemoveFilter": "Remove this filter",
    "PullRequestFilter-RemoveFilterLabel": "Remove",
    "PullRequestFilter-RemoveFilterPrompt": "Do you want to remove the \"{0}\" filter?",
    "PullRequestFilter-SearchPlaceholder": "Search pull requests",
    "PullRequestFilter-SyntaxAssignee": "assignee",
    "PullRequestFilter-SyntaxAssigneeLabel": "Assignee:",
    "PullRequestFilter-SyntaxAuthorLabel": "Author:",
    "PullRequestFilter-SyntaxBaseLabel": "Base:",
    "PullRequestFilter-SyntaxBranchName": "branch_name",
    "PullRequestFilter-SyntaxChangesRequested": "changes_requested",
    "PullRequestFilter-SyntaxCreatedLabel": "创建d:",
    "PullRequestFilter-SyntaxDisplayName": "display_name",
    "PullRequestFilter-SyntaxDraftLabel": "Draft:",
    "PullRequestFilter-SyntaxFailure": "failure",
    "PullRequestFilter-SyntaxFalse": "false",
    "PullRequestFilter-SyntaxHeadLabel": "Head:",
    "PullRequestFilter-SyntaxInvolves": "involves",
    "PullRequestFilter-SyntaxInvolvesLabel": "Involves:",
    "PullRequestFilter-SyntaxLabel": "label",
    "PullRequestFilter-SyntaxLabelLabel": "Label:",
    "PullRequestFilter-SyntaxLabelName": "label_name",
    "PullRequestFilter-SyntaxMilestone": "milestone",
    "PullRequestFilter-SyntaxMilestoneLabel": "Milestone",
    "PullRequestFilter-SyntaxMilestoneName": "milestone_name",
    "PullRequestFilter-SyntaxNone": "none",
    "PullRequestFilter-SyntaxNoLabel": "否 value:",
    "PullRequestFilter-SyntaxPending": "pending",
    "PullRequestFilter-SyntaxReferenceLink": "support site",
    "PullRequestFilter-SyntaxReferenceTitle": "拉取 Request Filter Syntax",
    "PullRequestFilter-SyntaxReferenceSubTitle": "Read more about filtering pull requests on the {0}.",
    "PullRequestFilter-SyntaxReview": "review",
    "PullRequestFilter-SyntaxReviewApproved": "approved",
    "PullRequestFilter-SyntaxReviewLabel": "Review State:",
    "PullRequestFilter-SyntaxReviewRequested": "review-requested",
    "PullRequestFilter-SyntaxReviewedByLabel": "Reviewed By:",
    "PullRequestFilter-SyntaxReviewersLabel": "Requested Reviewers:",
    "PullRequestFilter-SyntaxStatus": "status",
    "PullRequestFilter-SyntaxStatusLabel": "Status:",
    "PullRequestFilter-SyntaxSuccess": "success",
    "PullRequestFilter-SyntaxTrue": "true",
    "PullRequestFilter-SyntaxUpdatedLabel": "Updated:",
    "PullRequestFilter-SyntaxUserName": "user_name",
    "PullRequestPanel-AddAssignee": "添加 assignee...",
    "PullRequestPanel-AddAssignees": "添加 assignees...",
    "PullRequestPanel-AddLabels": "添加 labels...",
    "PullRequestPanel-AddReviewer": "添加 reviewer...",
    "PullRequestPanel-AddReviewers": "添加 reviewers...",
    "PullRequestPanel-AddRequiredReviewers": "添加 required reviewers...",
    "PullRequestPanel-AddTemplate": "添加 template...",
    "PullRequestPanel-Assignee": "Assignee",
    "PullRequestPanel-Assignees": "Assignees",
    "PullRequestPanel-Description": "Description",
    "PullRequestPanel-EditOnService": "Continue editing on {0}",
    "PullRequestPanel-FromRepo": "From Repo",
    "PullRequestPanel-HideFiles": "Hide 文件s",
    "PullRequestPanel-Labels": "Labels",
    "PullRequestPanel-MergeConflictDetected": "合并 conflict detected",
    "PullRequestPanel-NoAssigneesFound": "否 assignees found",
    "PullRequestPanel-NoLabelsFound": "否 labels found",
    "PullRequestPanel-NoReviewersFound": "否 reviewers found",
    "PullRequestPanel-NoTemplatesFound": "否 templates found",
    "PullRequestPanel-PullRequestTitle": "拉取 request title",
    "PullRequestPanel-PullRequestDescription": "拉取 request description",
    "PullRequestPanel-Repo": "Repo",
    "PullRequestPanel-Reviewer": "Reviewer",
    "PullRequestPanel-Reviewers": "Reviewers",
    "PullRequestPanel-RequiredReviewers": "Required Reviewers",
    "PullRequestPanel-ShowFiles": "Show 文件s",
    "PullRequestPanel-SubmitAsDraft": "Submit as draft",
    "PullRequestPanel-Template": "Template",
    "PullRequestPanel-Title": "Title",
    "PullRequestPanel-ToRepo": "To Repo",
    "PullRequestPanel-AzureDevopsEditPullRequestWarning": "Your pull request title and/or description will not be transferred to AzureDevops if you choose to Edit on AzureDevops",
    "PullRequestPanel-GitHubEditPullRequestWarning": "Your pull request reviewers will not be transferred to GitHub if you choose to Edit on GitHub",
    "PullRequestPanel-GitHubDraftPullRequestTooltip": "Draft pull requests are available in public repositories with GitHub Free for organizations and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud.",
    "PullRequestTooltip-WantsToMerge": "wants to merge",
    "PullRequestTooltip-Into": "into",
    "PullRequestTooltip-BuildStatus": "Build Status:",
    "PullRequestTooltip-ChecksOK": "{0} / {1} checks OK",
    "PullRequestTooltip-ChecksOKChangesRequested": "{0} / {1} checks OK, changes requested",
    "PullRequestTooltip-ChecksOKReviewPending": "{0} / {1} checks OK, review pending",
    "PullRequestTooltip-ChecksOKReviewSuccess": "{0} / {1} checks OK, no pending reviews or changes requested",
    "PullRequestTooltip-ChangesRequested": "Changes requested",
    "PullRequestTooltip-ReviewPending": "Review pending",
    "PullRequestTooltip-ReviewSuccess": "否 pending reviews or changes requested",
    "PullRequestTooltip-UnknownRequester": "[UNKNOWN]",
    "ContinuousIntegrationTooltip-SomeChecksFailed": "Some checks failed",
    "ContinuousIntegrationTooltip-SomeChecksPending": "Some checks pending",
    "ContinuousIntegrationTooltip-AllChecksPassed": "All checks passed",
    "IssueTooltip-Description": "Description",
    "IssueTooltip-Labels": "Labels",
    "IssueTooltip-List": "List",
    "IssueTooltip-Milestone": "Milestone",
    "IssueTooltip-Milestones": "Milestones",
    "IssueTooltip-Reporter": "Reporter",
    "IssueTooltip-Status": "Status",
    "IssueTooltip-None": "否ne",
    "IssueViewPanel-Branches": "分支es",
    "IssueViewPanel-Repository": "仓库",
    "IssueViewPanel-BranchName": "分支 name",
    "IssueViewPanel-EnterBranchName": "Enter a branch name",
    "IssueViewPanel-BaseNewBranchOn": "Base new branch on",
    "IssueViewPanel-Checklists": "Checklists",
    "IssueViewPanel-ClearMember": "Clear member",
    "IssueViewPanel-ClearMembers": "Clear members",
    "IssueViewPanel-CollapseReplies": "Collapse {0} replies",
    "IssueViewPanel-CollapseReply": "Collapse {0} reply",
    "IssueViewPanel-CreateBranch": "创建 branch",
    "IssueViewPanel-CreatedBy": "创建d by",
    "IssueViewPanel-DueDate": "Due Date",
    "IssueViewPanel-DuplicateFilterName": "Duplicate filter name",
    "IssueViewPanel-List": "List",
    "IssueViewPanel-NameLabel": "Filter Name",
    "IssueViewPanel-OpenCardInBrowser": "打开 card in browser",
    "IssueViewPanel-OpenIssueInBrowser": "打开 issue in browser",
    "IssueViewPanel-ReplyToComment": "Reply to comment",
    "IssueViewPanel-ReplyToThread": "Reply to thread",
    "IssueViewPanel-SelectRepo": "Select repository",
    "IssueViewPanel-ShowReplies": "Show {0} replies",
    "IssueViewPanel-ShowReply": "Show {0} reply",
    "IssueViewPanel-State": "State",
    "IssueViewPanel-Status": "Status",
    "IssueViewPanel-StatusInvalidTransition": "Invalid status transition",
    "IssueViewPanel-TaskLists": "Task Lists",
    "Jira-OpenGitIntegrationForJira": "View Git Integration for Jira",
    "Jira-GIJHeading": "Git Integration for Jira + GitKraken",
    "Jira-GIJMessage": "The Git Integration for Jira allows developers to review branches, commits, and pull requests directly in Jira. With this app installed on your Jira instance and the GitKraken Jira integration connected, you'll be able to quickly navigate between viewing file and commit diffs in both GitKraken Desktop and Jira.",
    "Jira-GIJIsInstalled": "App is installed on your Jira instance",
    "Jira-GIJNotInstalled": "Ask an admin to install this app on your Jira instance",
    "JiraFilterForm-JqlError": "JQL 错误",
    "JiraFilterForm-JqlLabel": "Query (JQL)",
    "JiraFilterForm-JqlEmpty": "JQL cannot be empty",
    "JiraFilterForm-JqlMissingProject": "JQL must contain 'project = \"{0}\"'",
    "JiraFilterForm-JqlPlaceholder": "Enter a JQL query",
    "JiraFilterForm-ValidateError": "Unable to validate query with Jira",
    "MemberMenu-AreYouSureRemoveMember": "Are you sure you want to remove \"{0}\" from your organization?",
    "MemberMenu-CurrentOwner": "Current Owner",
    "MemberMenu-EmailsDontMatch": "Emails do not match",
    "MemberMenu-MakeAdmin": "Make {0} an Admin",
    "MemberMenu-MakeBilling": "Make {0} a Billing Contact",
    "MemberMenu-MakeUser": "Make {0} a User",
    "MemberMenu-NewOwner": "New Owner",
    "MemberMenu-PleaseTypeNewOwnersEmail": "Please type the new owner's email here",
    "MemberMenu-RemoveMember": "Remove member",
    "MemberMenu-TransferOwnership": "Transfer Ownership",
    "MemberMenu-TransferWarning": "Making {0} the owner of this organization is irreversible. You will be downgraded to an admin, or a billing contact if there are not enough licenses. Billing contacts do not consume a license.",
    "MemberMenu-SelectToTransfer": "Select a member to transfer",
    "MemberMenu-VerifyTransferOwnership": "To verify, please type \"{0}\" below.",
    "RemoteBar-Menu": "Remote actions",
    "ShPath-ConfirmPath": "This repo needs sh to run GitHooks. Is {0} the path to your sh?",
    "StashBar-Menu": "Stash actions",
    "WorkDirMessageInput-WIPPlaceholder": "// WIP",
    "Timeline-1HourAgo": "1 hour ago",
    "Timeline-NHoursAgo": "{0} hours ago",
    "Timeline-Yesterday": "yesterday",
    "Timeline-NDaysAgo": "{0} days ago",
    "Timeline-1WeekAgo": "a week ago",
    "Timeline-NWeeksAgo": "{0} weeks ago",
    "Timeline-1MonthAgo": "a month ago",
    "Timeline-NMonthsAgo": "{0} months ago",
    "Timeline-1YearAgo": "a year ago",
    "Timeline-NYearsAgo": "{0} years ago",
    "Timeline-NPlusYearsAgo": "{0}+ years ago",
    "Timeline-ArbitrarilyLongAgo": "Stop scrolling please",
    "Graph-AdjustCommitCount": "Displaying {0} commits. Adjust this setting in ",
    "Graph-Preferences": "偏好设置",
    "Graph-IsLoadingRows": "Loading...",
    "Graph-NoCommits": "否 commits",
    "Graph-WorkInProgress": "Work in progress",
    "GraphHeader-BranchTag": "BRANCH / TAG",
    "GraphHeader-Changes": "CHANGES",
    "GraphHeader-CommitAuthor": "AUTHOR",
    "GraphHeader-CommitDateTime": "COMMIT DATE / TIME",
    "GraphHeader-CommitGraph": "GRAPH",
    "GraphHeader-CommitMessage": "COMMIT MESSAGE",
    "GraphHeader-CommitSha": "SHA",
    "GraphHeader-EditColumns": "Column settings",
    "GraphHeader-Filter": "Filter",
    "GraphHeader-HiddenRefs-btn": "Hidden 分支es / Tags",
    "OptionalGraphZone-CommitAuthor": "Author",
    "OptionalGraphZone-CommitDateTime": "Date / Time",
    "OptionalGraphZone-CommitSha": "Sha",
    "OptionalGraphZone-CommitChanges": "Changes",
    "OptionalGraphZone-CommitMessage": "提交 message",
    "OptionalGraphZone-Graph": "Graph",
    "OptionalGraphZone-Ref": "分支 / Tag",
    "IssueIcon-Tooltip": "{0}: {1}",
    "PullRequestIcon-Tooltip": "#{0}: {1}",
    "UpstreamIndicatorIcon-BehindAndAheadTooltip": "{0} commit(s) behind and {1} commit(s) ahead of {2}\n Double-click to pull changes",
    "UpstreamIndicatorIcon-BehindTooltip": "{0} commit(s) behind {1}\n Double-click to pull changes",
    "UpstreamIndicatorIcon-AheadTooltip": "{0} commit(s) ahead of {1}\n Double-click to push changes",
    "Ref-Current": "current",
    "Ref-Local": "local",
    "Ref-Remote": "Remote 分支",
    "Ref-Tag": "Tag",
    "Ref-Worktree": "Worktree",
    "RightPanel-FilterFiles": "Filter files",
    "RightPanel-MergeConflictsDetected": "合并 conflicts detected",
    "RightPanel-1ChangeOn": "1 file change on",
    "RightPanel-NChangesOn": "{0} file changes on",
    "RightPanel-SuggestionFor": "Suggestion for:",
    "RightPanel-CreatingCloudPatch": "Creating Cloud Patch from",
    "RightPanel-CreatingCloudPatchForPullRequest": "Suggesting changes to:",
    "RightPanel-SuggestChangeToPullRequest": "Suggest {0} file change to PR {1}{2}",
    "RightPanel-NCommitsSelected": "{0} commits selected",
    "RightPanel-RebaseConflictsDetected": "Rebase conflicts detected",
    "RightPanel-UnsupportedRebase": "External rebase in progress",
    "RightPanel-Reviewing": "Reviewing:",
    "RightPanel-ViewChange": "View Change",
    "RightPanel-ViewChanges": "View Changes",
    "RightPanel-ViewConflict": "View Conflict",
    "RightPanel-ViewConflicts": "View Conflicts",
    "RightPanel-View1FileChangeInWorkingDirectory": "1 file change in working directory",
    "RightPanel-ViewNFileChangesInWorkingDirectory": "{0} file changes in working directory",
    "RightPanel-View1FileConflictInWorkingDirectory": "1 file conflict in working directory",
    "RightPanel-ViewNFileConflictsInWorkingDirectory": "{0} file conflicts in working directory",
    "RightPanel-ViewAllFiles": "View all files",
    "StagingPanel-Amend": "Amend",
    "StagingPanel-WarningDetachedHeadState": "You are in a detached HEAD state",
    "StagingPanel-DetachedHeadStateExplanation": "If you checkout another branch or commit, you might lose any commits created in a detached HEAD state",
    "CommitMessage-CommitMessageLabel": "提交 Message",
    "CommitMessage-SummaryPlaceholder": "提交 summary",
    "CommitMessage-DescriptionPlaceholder": "Description",
    "SharedPatchMessage-SummaryPlaceholder": "Cloud Patch title",
    "SharedPatchMessage-DescriptionPlaceholder": "Description",
    "CodeSuggestMessage-SummaryPlaceholder": "Suggestion title",
    "CodeSuggestMessage-DescriptionPlaceholder": "Description",
    "StashMessage-SummaryPlaceholder": "Stash title",
    "StashMessage-DescriptionPlaceholder": "Description",
    "StashMessage-GeneratingMessage": "Generating Message",
    "StashMessage-GenerateStashMessage": "Generate a stash message with AI",
    "StashMessage-NoStagedChanges": "You must have staged changes to generate a stash message.",
    "CommitMessage-GeneratingMessage": "Generating Message",
    "CommitMessage-GenerateCommitMessage": "Generate a commit message with AI",
    "CommitMessage-NoStagedChanges": "You must have staged changes to generate a commit message.",
    "CommitDetailPanel-AndTheWIP": "and the WIP",
    "CommitDetailPanel-CommitOptions": "提交 options",
    "CommitDetailPanel-DiffBetweenACommitAndTheWIP": "Viewing diff between a commit and the WIP",
    "CommitDetailPanel-DiffBetweenCommitsTitle": "Viewing merged diff of {0} commits",
    "CommitDetailPanel-DiffBetweenTwoCommits": "Viewing diff between 2 commits",
    "CommitDetailPanel-WorkingDirectory": "Working directory",
    "CommitDetailPanel-Tab-CloudPatch-Label": "Cloud Patch",
    "CommitDetailPanel-Tab-CloudPatch-ActionLabelDisabledStageChanges": "Stage Changes to 创建 Patch",
    "CommitDetailPanel-Tab-CloudPatch-ActionLabelDisabledNoMessage": "Type a Message to 创建 Patch",
    "CommitDetailPanel-Tab-CloudPatch-ActionLabelFromCommit": "创建 Cloud Patch",
    "CommitDetailPanel-Tab-CloudPatch-ActionLabelSingular": "创建 a Shareable Cloud Patch from 1 文件",
    "CommitDetailPanel-Tab-CloudPatch-ActionLabelPlural": "创建 a Shareable Cloud Patch from {0} 文件s",
    "CommitDetailPanel-Tab-CodeSuggest-Label": "Code Suggest",
    "CommitDetailPanel-Tab-CodeSuggest-ActionLabelDisabledStageChanges": "Stage Changes to Suggest",
    "CommitDetailPanel-Tab-CodeSuggest-ActionLabelDisabledNoMessage": "Type a Message to Suggest",
    "CommitDetailPanel-Tab-CodeSuggest-ActionLabelSingular": "Suggest 1 文件 Change to PR {0}{1}",
    "CommitDetailPanel-Tab-CodeSuggest-ActionLabelPlural": "Suggest {0} 文件 Change to PR {1}{2}",
    "CommitDetailPanel-Tab-Commit-Label": "提交",
    "CommitDetailPanel-Tab-Stash-Label": "Stash",
    "CommitDetailPanel-Tab-Stash-ActionLabelDisabledStageChanges": "Stage Changes to Stash",
    "CommitDetailPanel-Tab-Stash-ActionLabelDisabledNoMessage": "Type a Message to Stash",
    "CommitDetailPanel-Tab-Stash-ActionLabelSingular": "Stash Changes to 1 文件",
    "CommitDetailPanel-Tab-Stash-ActionLabelPlural": "Stash Changes to {0} 文件s",
    "CommitDiffSection-DateByAuthorName": "{0} by {1}",
    "CommitDiffSection-FileAdded": "added",
    "CommitDiffSection-FileDeleted": "deleted",
    "CommitDiffSection-FileModified": "modified",
    "CommitDiffSection-FileRenamed": "renamed",
    "CommitDiffSection-NFilesAdded": "{0} added",
    "CommitDiffSection-NFilesDeleted": "{0} deleted",
    "CommitDiffSection-NFilesModified": "{0} modified",
    "CommitDiffSection-NFilesRenamed": "{0} renamed",
    "UncommittedFileList-ConflictedFilesTitleSummary": "Conflicted 文件s ({0})",
    "UncommittedFileList-StagedFilesTitleSummary": "Staged 文件s ({0})",
    "UncommittedFileList-UnconflictedFilesTitleSummary": "Resolved 文件s ({0})",
    "UncommittedFileList-UnstagedFilesTitleSummary": "Unstaged 文件s ({0})",
    "FileViewPanel-DiffView": "Diff View",
    "FileViewPanel-EditInWorkDir": "Edit in Working Directory",
    "FileViewPanel-EditThisFile": "Edit This 文件",
    "FileViewPanel-EditInReviewMode": "Edit to Suggest Changes to PR {0}{1}",
    "FileViewPanel-ExitReview": "退出 Review",
    "FileViewPanel-OpenInJira": "打开 in Jira",
    "FileViewPanel-Editable": "editable",
    "FileViewPanel-FileView": "文件 View",
    "FileViewPanel-DiffFileMode": "文件 Mode Changes from {0} to {1}",
    "FileViewPanel-HunkView": "Hunk View",
    "FileViewPanel-InlineView": "Inline View",
    "FileViewPanel-NextDiff": "Next Change",
    "FileViewPanel-PreviousDiff": "Previous Change",
    "FileViewPanel-SaveChanges": "保存 Changes",
    "FileViewPanel-SplitView": "Split View",
    "FileViewPanel-IgnoreWhiteSpace": "Ignore Leading/Trailing Whitespace",
    "FileViewPanel-History": "History",
    "FileViewPanel-Blame": "Blame",
    "PendingInteractiveRebasePanel-InteractiveRebase": "Interactive Rebase",
    "PendingInteractiveRebasePanel-Reset": "Reset",
    "PendingInteractiveRebasePanel-CancelRebase": "取消 Rebase",
    "PendingInteractiveRebasePanel-StartRebase": "Start Rebase",
    "PendingInteractiveRebasePanel-UpdateMessage": "Update Message",
    "PendingInteractiveRebasePanel-InteractiveCherrypick": "Interactive Cherry Pick",
    "PendingInteractiveRebasePanel-CancelCherrypick": "取消 Cherry Pick",
    "PendingInteractiveRebasePanel-StartCherrypick": "Start Cherry Pick",
    "FileContentsPanel-Binary": "Binary file",
    "FileContentsPanel-Deleted": "文件 was deleted",
    "FileContentsPanel-EmptyDiff": "文件 contents are unchanged.",
    "FileNodeListControls-FullPath": "Path",
    "FileNodeListControls-SortByNameLabel": "Sort by filename",
    "FileNodeListControls-TreeView": "Tree",
    "FileNodeListHeader-CollapseAll": "Collapse All",
    "FileNodeListHeader-ExpandAll": "Expand All",
    "FileNode-1HiddenSelection": "1 file selected",
    "FileNode-NHiddenSelections": "{0} files selected",
    "Merge-AutoResolved": "合并 tool automatically resolved your conflict",
    "Merge-A": "A",
    "Merge-B": "B",
    "Merge-BinaryFile": "Binary 文件",
    "Merge-Commit": "提交",
    "Merge-ConflictXofY": "conflict {0} of {1}",
    "Merge-DontTake": "Don't take this line",
    "Merge-NoAncestorFile": "否 ancestor file",
    "Merge-NoImage": "否 image",
    "Merge-Reset": "Clear Selections",
    "Merge-ResetMerge": "Reset",
    "Merge-SaveOutput": "保存 Output",
    "Merge-SaveWithConflicts": "创建 Conflict Chunks",
    "Merge-TakeAll": "Take all",
    "Merge-UntakeAll": "Untake all",
    "Merge-TakeLine": "Take this line",
    "Merge-OneConflict": "(1 conflict)",
    "Merge-Output": "Output",
    "Merge-PremiumFeature": "Premium GitKraken Feature",
    "Merge-Unknown": "Applied patch or stash",
    "Merge-UpgradeLink": "Upgrade GitKraken",
    "Merge-RegisterLink": "Start a free trial",
    "Merge-UpgradeText": "to edit file output",
    "Merge-PremiumMergeDescription": "Upgrade GitKraken and further simplify merge conflict resolution with the ability to directly edit the output without ever leaving the application.",
    "Merge-XConflicts": "({0} conflicts)",
    "DiffImage-ShowDiffOverlay": "Diff overlay old image",
    "DiffImage-OldImage": "Old image",
    "DiffImage-NewImage": "New image",
    "Patch-Apply": "Apply patch",
    "Patch-ApplyTo": "Apply patch to {0}",
    "Patch-StashApplyTo": "Stash WIP and apply patch to {0}",
    "Patch-ApplyingPatch": "Applying patch",
    "Patch-Base": "Base:",
    "Patch-CopyLink": "Copy link to Cloud Patch",
    "Patch-OpenPatchFile": "打开 patch file",
    "Patch-ExportFileToPatch": "创建 patch from file changes",
    "Patch-ExportNFilesToPatch": "创建 patch from changes in {0} files",
    "Patch-ExportWorkdir": "创建 patch from all working directory changes",
    "Patch-SaveFileAsFilename": "保存 patch file as",
    "Patch-CreateFromCommit": "创建 patch from commit",
    "Patch-CreateFromMultipleCommits": "创建 patch from commits",
    "Patch-CreationSuccessful": "Patch created successfully",
    "Patch-ApplicationSuccessful": "Patch applied successfully",
    "Patch-CreationSuccessfulMessage": "Patch file saved to {0}",
    "Patch-CloudPatchSuccessfullyCreated": "Cloud Patch successfully created",
    "Patch-CodeSuggestionSuccessfullyCreated": "Code Suggestion successfully created",
    "Patch-CloudPatchTitlePlaceholder": "Cloud Patch for {0}",
    "Patch-OpenRepoAndPreviewCloudPatch": "打开 repository and view Cloud Patch",
    "Patch-CopyCloudPatchLinkButtonLabel": "Copy Cloud Patch Link",
    "Patch-CopyCodeSuggestionLinkButtonLabel": "Copy Code Suggestion Link",
    "Patch-CopyCloudPatchLinkMenu": "Copy Cloud Patch link",
    "Patch-ShareCommitAsCloudPatch": "Share commit as Cloud Patch",
    "Patch-ShareMultipleCommitsAsCloudPatch": "Share commits as Cloud Patch",
    "Patch-ShareCommitAsCloudPatchWithError": "Share commit as Cloud Patch ({0})",
    "Patch-ShareMultipleCommitsAsCloudPatchWithError": "Share commits as Cloud Patch ({0})",
    "Patch-DeleteCloudPatch": "删除 Cloud Patch",
    "Patch-RemoveCloudPatch": "Remove Cloud Patch from view",
    "Patch-NoCloudPatchesInLeftPanel": "Your Cloud Patches will appear here.",
    "Patch-CreatedByMeHeader": "创建d By Me",
    "Patch-SharedWithMeHeader": "Shared With Me",
    "Patch-RecentlyOpenedHeader": "Recently 打开ed",
    "Patch-RefreshCloudPatches": "Check for new Cloud Patches",
    "Patch-PromptToDeleteDraftWithName": "Are you sure you want to delete \"{0}\"?",
    "Patch-PromptToDeleteDraft": "Are you sure you want to delete this Cloud Patch?",
    "Patch-PromptSelectPatch": "Multi-repo Cloud Patches not supported. Please select a patch to apply.",
    "Patch-SelfHostedReminder": "Cloud Patches are securely stored by your organization.",
    "Patch-PatchNumber": "Patch {0}",
    "Patch-PatchNumberAndRepoName": "Patch {0} ({1})",
    "CloudPatch-CreateFromAllFiles": "创建 a Cloud Patch from all files",
    "CloudPatch-CreateFromStagedFiles": "创建 a Cloud Patch from staged files",
    "CloudPatch-CreateVisibilityPublic": "Anyone with the link",
    "CloudPatch-CreateVisibilityPrivate": "Members of my Org with the link",
    "CloudPatch-CreateVisibilityInviteOnly": "Only collaborators",
    "CloudPatch-EditDraftDifferentOrg": "This draft is from a different organization. Please change to the \"{0}\" organization to edit this draft ({1} > Switch organization).",
    "CloudPatch-EditDraftDifferentOrgLink1": "偏好设置 > Organization",
    "CloudPatch-EditDraftMessageTip": "Click to edit the Cloud Patch Message",
    "CloudPatch-InviteUser": "Invite User",
    "CloudPatch-VisibilityTooltipDisabledRole": "\"{0}\" users are not able to edit visibility",
    "CloudPatch-ShareTooltipDisabledRole": "\"{0}\" users are not able to edit shared users",
    "CloudPatch-ShareNoOptionsMessage": "Invite collaborators to your org to share directly",
    "CloudPatch-SharePlaceholder": "Select collaborators to share with",
    "CloudPatch-UpdateDraftButton": "Update Cloud Patch",
    "CloudPatch-UpdateSuccessful": "Cloud Patch Updated",
    "CloudPatch-SuggestChangesOnPR": "Send Code Suggestion for PR {0}{1}",
    "CloudPatch-SuggestChangesOnPRTemplate-Summary": "Code Suggestion for {0}{1}",
    "CloudPatch-SuggestChangesOnRemoteConflictTemplate-Summary": "Potential conflict with {0}",
    "CloudPatch-SuggestChangesOnRemoteConflictTemplate-Description": "Here are my changes on {0} that might conflict with your changes on {1}. Apply this patch to view and resolve any conflicts.",
    "CloudPatch-InfoTooltip-Title": "Send changes as a Cloud Patch",
    "CloudPatch-InfoTooltip-1": "When you have changes in your working directory, GitKraken makes it easy to share those changes as a patch that is easily accessible via a link.",
    "CloudPatch-InfoTooltip-2": "You control who has access - make it public or invite specific people to your org - and GitKraken will generate a link to share. Invitees will receive a notification in-app if they're using GitKraken Desktop, but anyone with permission can view the patch on {0}.",
    "CloudPatch-InfoTooltip-LearnMore": "Learn more about Cloud Patches",
    "CodeSuggest-InfoTooltip-Title": "Send changes as a Code Suggestion",
    "CodeSuggest-InfoTooltip-1": "When you have changes on a branch that is associated with a PR, GitKraken can send those changes to the PR author for review without committing and pushing them to the remote branch.",
    "CodeSuggest-InfoTooltip-2": "The PR author will be able to follow a link to review, accept, or reject those changes on {0} - no need to have GitKraken Desktop installed.",
    "CodeSuggest-InfoTooltip-LearnMore": "Learn more about Code Suggest",
    "CodeSuggest-ApplyTo": "Apply suggestion to {0}",
    "CodeSuggest-PromptCheckoutHead": "The branch for this pull request must be checked out to edit. Continue?",
    "CodeSuggest-StashApplyTo": "Stash WIP and apply suggestion to {0}",
    "CodeSuggest-Reject": "Reject suggestion",
    "CodeSuggest-AlreadyArchivedAccepted": "This Code Suggestion was accepted",
    "CodeSuggest-AlreadyArchivedCommitted": "This Code Suggestion was committed",
    "CodeSuggest-AlreadyArchivedRejected": "This Code Suggestion was rejected",
    "CodeSuggest-AlreadyArchivedUnknown": "This Code Suggestion was archived",
    "CodeSuggest-ProviderAccessInfo": "Anyone with access to this PR will be able to view and accept.",
    "ConflictDetection-Popover-Tooltip": "A conflict is detected with {0}. Click to view details and resolve.",
    "ConflictDetection-Popover-Title": "Conflict detected with target branch",
    "ConflictDetection-Popover-Description-YourBranch": "Your branch: {0}",
    "ConflictDetection-Popover-Description-TheirBranch": "{0}'s branch: {1}",
    "ConflictDetection-Popover-Description-MergeTarget": "合并 target: {0}",
    "ConflictDetection-Popover-Tooltip-TheirCommitNotFoundLocally": "The conflicting commits may not be pushed, or you might need to fetch.",
    "ConflictDetection-Popover-Explainer": "Conflicts tend to become harder to resolve as the two branches continue to change. If you plan to merge or rebase, we recommend doing an early one now to resolve existing conflicts before they get worse.",
    "ConflictDetection-Popover-Option-Rebase": "Rebase {0} onto {1}",
    "ConflictDetection-Popover-Option-Merge": "合并 {0} into {1}",
    "ConflictDetection-Popover-OpenConflictDetectionSettings": "Set target branches in settings",
    "ConflictDetection-Popover-RemoveRemoteFromDetection": "Stop detecting conflicts with remote {0}",
    "ConflictDetection-Popover-ViewAndResolveConflictsHeader": "View and Resolve",
    "ConflictDetection-Popover-OtherOptionsHeader": "Other Options",
    "ConflictDetection-Popover-Potential-Conflict-Detected": "Potential conflict detected",
    "ConflictDetection-Popover-Conflict-with-Remote-Org-Member": "{0} has changes that could conflict with your changes on {1}. Review to avoid future conflicts.",
    "ConflictDetection-Popover-SendCloudPatch": "Send your changes to {0} with a Cloud Patch",
    "ConflictDetection-Popover-DetectConflictsEarlierByInvitingAuthorsToOrg": "Detect conflicts earlier by inviting {0} to your org",
    "ConflictDetection-Popover-DetectConflictsEarlierByInvitingTeammatesToOrg": "Detect conflicts earlier by inviting teammates to your org",
    "ConflictDetection-Popover-CodeWithConfidenceAndDeliverFaster": "Code with confidence and deliver faster by catching potential conflicts before they happen.",
    "ConflictDetection-Popover-LearnMore": "Learn more.",
    "ConflictDetection-Popover-IgnorePotentialConflictWarnings": "Ignore potential conflict warnings for your changes on {0}",
    "ConflictDetection-Popover-PushChanges": "推送 your changes so {0} can fetch them",
    "ConflictDetection-Popover-ShowOverlappedFiles": "Show {0} overlapping files",
    "ConflictDetection-Popover-OverlappedFilePath": "文件: {0}",
    "ConflictDetection-Popover-OverlappedFileLines": "Lines: {0}-{1}",
    "ConflictDetection-Popover-OverlappedFileSingleLine": "Line: {0}",
    "ConflictDetection-Popover-UpToDateWithMergeTarget": "Up to Date with 合并 Target",
    "ConflictDetection-Popover-UpToDateWithMergeTargetDesc": "Your current branch {0} will not cause conflicts when merging with its target branch {1}.",
    "ConflictDetection-Popover-NoConflictsDetectedAgainstBranch": "否 conflicts detected against {0}",
    "ConflictDetection-Popover-ConnectIntegrationToOpenPullRequests": "Connect {0} to open {1} from GitKraken",
    "ConflictDetection-Popover-OpenAPullRequestToBranch": "打开 a {0} to {1}",
    "ConflictDetection-Popover-UnknownBranchName": "unknown",
    "ConflictDetection-Popover-ViewPullRequestOnProvider": "View {0} #{1} on {2}",
    "Feedback-Tooltip-Helpful": "帮助ful",
    "Feedback-Tooltip-NotHelpful": "否t helpful",
    "Feedback-Thanks-Helpful": "Thanks — glad that was useful!",
    "Feedback-Thanks-NotHelpful": "Thanks for the feedback. What didn't work?",
    "Feedback-Options-Placeholder": "Choose a reason...",
    "Feedback-Options-AI-NotHelpful-SuggestionInaccurate": "The suggestion was incorrect or inaccurate",
    "Feedback-Options-AI-NotHelpful-NotRelevant": "It wasn't relevant to my current work",
    "Feedback-Options-AI-NotHelpful-MissedImportantContext": "It missed important context",
    "Feedback-Options-AI-NotHelpful-UnclearOrPoorlyFormatted": "It was unclear or poorly formatted",
    "Feedback-Options-AI-NotHelpful-GenericOrRepetitive": "It felt too generic or repetitive",
    "Feedback-Options-AI-NotHelpful-Other": "Other",
    "Feedback-Options-Conflict-NotHelpful-DidntUnderstand": "I didn't understand what this warning meant",
    "Feedback-Options-Conflict-NotHelpful-DidntKnowWhatNext": "I didn't know what to do next",
    "Feedback-Options-Conflict-NotHelpful-NotAConflict": "This wasn't actually a conflict",
    "Feedback-Options-Conflict-NotHelpful-ExpectedMoreInfo": "I expected to see more info (like my teammate's changes)",
    "Feedback-Options-Conflict-NotHelpful-WasntImportant": "It flagged something that wasn't important",
    "Feedback-Options-Conflict-NotHelpful-TooTechnical": "It was too technical or overwhelming",
    "Feedback-Options-Conflict-NotHelpful-Other": "Other",
    "Feedback-Other-Title": "Describe the issue in your own words...",
    "Feedback-Other-Placeholder": "Tell us what didn't work or what you expected instead...",
    "Feedback-Submit": "Submit Feedback",
    "Feedback-Submit-Success": "Got it — we'll keep improving",
    "RefZone-EnterBranchName": "enter branch name",
    "RefZone-EnterTagName": "enter tag name",
    "RefZone-LocalRefLabel": "local",
    "ChangeRepo-InitRepo": "Init",
    "ChangeRepo-OpenRepo": "Browse",
    "ChangeRepo-OpenRepoManagementTab": "打开 仓库 Management Tab",
    "OpenRepo-AddProjectFolder": "添加 a Projects Folder",
    "OpenRepo-AddProjectFolderTooltip": "添加 a folder in which you keep multiple repositories, so GitKraken Desktop can help you open them quickly",
    "OpenRepo-BrowseForProjectDirectory": "Browse for project directory",
    "OpenRepo-BrowseForReposButtonLabel": "打开 a 仓库",
    "OpenRepo-BrowseForReposDialogTitle": "Select a repository to open",
    "OpenRepo-Favorites": "Favorites",
    "OpenRepo-FavoritesSubtext": "Drag and drop to reorder favorites and configure shortcuts",
    "OpenRepo-IsOpenIndicator": "(open)",
    "OpenRepo-NoReposFavorited": "否 repositories have been favorited.",
    "OpenRepo-NoReposFound": "GitKraken Desktop did not find any repositories.",
    "OpenRepo-OpenFailed": "打开 Failed",
    "OpenRepo-OpeningRepo": "打开ing repo",
    "OpenRepo-ProjectFoldersSection": "Project Directories",
    "OpenRepo-RecentlyOpened": "Recently 打开ed",
    "OpenRepo-SearchingForRepos": "Looking for repos",
    "OpenRepo-SearchBarPlaceholder": "Filter repos by name",
    "OpenRepo-InvalidFilepath": "Invalid 文件path",
    "OpenRepo-CouldNotFindRepoAtFilepath": "Could not find repo at {0}",
    "ALL_REPOS_SECTION": "All repositories",
    "OPEN_REPOS_SECTION": "打开 repositories",
    "FAVORITE_REPOS_SECTION": "Favorites",
    "RECENT_REPOS_SECTION": "Recent repositories",
    "CloneRepositoryModal-Title": "Clone a 仓库",
    "InitRepositoryModal-Title": "Initialize a 仓库",
    "CloneRepositoriesModal-SelectLocationToCloneX": "Please select a location to clone {0}:",
    "CloneRepositoriesModal-SelectLocationToCloneXRepos": "Please select a location to clone {0} repositories:",
    "RepoManagement-Title": "仓库 Management",
    "RepoManagement-ErrorInRepository": "仓库 \"{0}\" had the following error: {1}",
    "RepoManagement-OneSectionsIsHidden": "1 group is hidden",
    "RepoManagement-XSectionsAreHidden": "{0} groups are hidden",
    "RepoManagement-ChooseSectionsToUnhide": "Choose groups to make visible",
    "RepoManagement-UnhideAll": "Unhide all",
    "RepoManagement-LeaveAllHidden": "Leave all hidden",
    "RepoManagement-UnHideSections": "Unhide groups",
    "RepoManagement-UnHideOneSections": "Unhide 1 group",
    "RepoManagement-UnHideXSections": "Unhide {0} groups",
    "RepoManagement-Collapse": "Collapse",
    "RepoManagement-Expand": "Expand",
    "RepoManagement-removeRepoFromFavorites": "Remove repository from favorites",
    "RepoManagement-addRepoToFavorites": "添加 repository to favorites",
    "RepoManagement-closeAllRepos": "关闭 all tabs",
    "RepoManagement-closeXRepos": "关闭 {0} repositories",
    "RepoManagement-closeRepo": "关闭 repository",
    "RepoManagement-removeAllRecentRepos": "Remove all",
    "RepoManagement-removeXRecentRepos": "Remove {0} repositories",
    "RepoManagement-removeRecentRepo": "Remove repository",
    "RepoManagement-fetchAll": "Fetch all repositories",
    "RepoManagement-fetchXRepos": "Fetch {0} repositories",
    "RepoManagement-fetchRepo": "Fetch repository",
    "RepoManagement-pullAll": "拉取 all repositories",
    "RepoManagement-pullXRepos": "拉取 {0} repositories",
    "RepoManagement-pullRepo": "拉取 repository",
    "RepoManagement-RepoIsUnreachable": "Repo is unreachable and may have been deleted",
    "RepoManagement-openRepoDetails": "打开 repository details",
    "RepoManagement-openAllRepos": "打开 all repos in new tabs",
    "RepoManagement-openXRepos": "打开 {0} repositories",
    "RepoManagement-removeRepo": "Remove repository",
    "RepoManagement-removeAllRepos": "Remove all repositories",
    "RepoManagement-removeXRepos": "Remove {0} repositories",
    "RepoManagement-searchRepositories": "Search repositories",
    "RepoManagement-workDirSummary": "WIP summary",
    "Workspace-workDirSummary-checkbox-hint": "Display WIP summary for all repos. 否te: large repos may take longer to load this data.",
    "RepoManagement-ManageTeamWorkspaces": "Manage Cloud Workspaces on {0}",
    "RepoManagement-OpenInWorkspaceInLaunchpad": "打开 Workspace in Launchpad",
    "RepoManagement-ResetAllWorkspacesToDefaultColor": "Reset all workspaces to default color",
    "RepoManagement-ResetAllWorkspacesToDefaultColor-Desc": "Reset all workspaces colors in Repo Management to the default color",
    "RepoManagement-ResetAllDefaultGroupsToDefaultColor": "Reset all default groups to default color",
    "RepoManagement-ResetAllDefaultGroupsToDefaultColor-Desc": "Reset all default groups colors in Repo Management to the default color",
    "RepoManagement-ResetAllDefaultGroupsColorSuccess": "All default groups successfully reset to default color",
    "RepoManagement-ResetAllWorkspacesGroupsColorSuccess": "All workspaces groups successfully reset to default color",
    "RepoManagement-ChangeColor": "Change color",
    "RepoManagement-ShowSection": "Show",
    "RepoManagement-HideSection": "Hide",
    "RepoManagement-AllRepositoriesGroupsAreHidden": "All repository groups are hidden. Use the {0} to un-hide groups.",
    "RepoManagement-NoResultsFound": "否 results found",
    "Color": "Color",
    "Color-Gray": "Gray",
    "Graph-ColorNumber": "Graph color {0}",
    "DefaultColor": "Default color",
    "CloneRepo-CloneARepo": "Clone a Repo",
    "CloneRepo-CloneDestinationPath": "Where to clone to",
    "CloneRepo-ClonedRepoName": "Full path",
    "CloneRepo-CloneRepoButtonLabel": "Clone the repo!",
    "CloneRepo-RepoToCloneViaService": "仓库 to clone",
    "CloneRepo-RepoToCloneUrl": "URL",
    "CloneRepo-CloneSuccess": "成功fully cloned repo '{0}'",
    "CloneRepo-CloneFailed": "Clone Failed",
    "CloneRepo-CloneViaUrl": "Clone with URL",
    "CloneRepo-CollapseSshSettings": "Hide SSH settings",
    "CloneRepo-ExpandSshSettings": "Show SSH settings",
    "CloneRepo-Clone": "Clone",
    "CloneRepo-CloneRepository": "Clone repository",
    "CloneRepo-CloneRepositories": "Clone repositories",
    "LocateRepo-LocateInFilesystem": "Locate in filesystem",
    "InitRepo-CreateRepoButtonLabel": "创建 仓库",
    "InitRepo-CreateRepoAndCloneButtonLabel": "创建 仓库 and Clone",
    "InitRepo-CreateRepoTarget": "Initialize in",
    "InitRepo-DefaultBranchName": "Default branch name",
    "InitRepo-GitIgnoreTemplate": ".gitignore Template (optional)",
    "InitRepo-InitLocally": "Local Only",
    "InitRepo-InitARepo": "Initialize a Repo",
    "InitRepo-License": "License (optional)",
    "InitRepo-HostingServiceAccountLabel": "Account",
    "InitRepo-HostingServiceProjectLabel": "Project",
    "InitRepo-HostingServiceRepoNameLabel": "Name",
    "InitRepo-HostingServiceRepoDescriptionLabel": "Description",
    "InitRepo-HostingServiceAccessLabel": "Access",
    "InitRepo-HostingServiceCloneAfterInitLabel": "Clone after init",
    "InitRepo-InvalidDefaultBranchName": "Invalid branch name.",
    "InitRepo-PublicAccess": "Public",
    "InitRepo-PrivateAccess": "Private",
    "InitRepo-PrivateRepoNeedsAnAccount": "You'll be prompted to start a free trial to access private repos.",
    "FileHistory-NothingFound": "Searched until {0} ({1})",
    "FileHistory-ContinueLooking": "Go Deeper",
    "GeneralPreferences": "General",
    "GeneralPreferences-AllowTeamVisibility": "Share my current branch status with my team",
    "GeneralPreferences-AllowTeamVisibilityHelp": "Disabling this prevents GitKraken from notifying teammates about potential conflicts based on a summary of your local changes.",
    "GeneralPreferences-AutoFetchInterval": "Auto-Fetch Interval",
    "GeneralPreferences-AutoFetchIntervalHelp": "In minutes, between 0 and 60 (0 disables auto-fetch). Fetches all visible remotes.",
    "GeneralPreferences-AutoFetchIntervalWarning": "If you have many visible remotes, this may impact performance.",
    "GeneralPreferences-AutoFetchIntervalWarningWithLfs": "If you have many visible remotes, this may impact performance. LFS objects will not be automatically fetched.",
    "GeneralPreferences-AutoConflictDetectionHelp": "Unchecking this will disable proactive conflict detection for all repositories. You can disable an individual repository from {0}.",
    "GeneralPreferences-AutoPrune": "Auto-Prune",
    "GeneralPreferences-AutoUpdateSubmodules": "Keep submodules up to date",
    "GeneralPreferences-AutoUpdateSubmodulesHelp": "Automatically update all submodules after performing a Git action",
    "GeneralPreferences-ConflictDetectionEnabled": "Enable proactive conflict detection with target branch",
    "GeneralPreferences-DefaultBranchName": "Default 分支 Name",
    "GeneralPreferences-DefaultBranchNameHelp": "Sets the default branch name when initializing new repositories.",
    "GeneralPreferences-DeleteOrigAfterMerge": "删除 \".orig\" files after merging",
    "GeneralPreferences-AutoCrlfHelp": "Sets core.autocrlf in your global Git Config.",
    "GeneralPreferences-Longpaths": "Longpaths",
    "GeneralPreferences-LongpathsHelp": "Sets core.longpaths in your global Git Config. By default, Windows only supports file paths less than 260 characters. Enable support for longer file paths.",
    "GeneralPreferences-GitConfigDefault": "Git Config Default",
    "GeneralPreferences-GitkrakenTerminal": "Use In-App 终端 Instead",
    "GeneralPreferences-RememberTabs": "Remember tabs",
    "GeneralPreferences-OptIntoAnalytics": "Send usage data about GitKraken Desktop to GitKraken",
    "GeneralPreferences-OptIntoBugReporting": "Send bug reports about GitKraken Desktop to GitKraken",
    "GeneralPreferences-WindowsShPathLocation": "Path to sh.exe",
    "GeneralPreferences-WindowsShPathLocationHelp": "Pointing to sh.exe is only required if you're using Git hooks.\nsh.exe can be found wherever you've installed Git for Windows,\nwhich is typically in Program 文件s\\Git\\bin.\nIf you can't find it, you may need to install Git for Windows.",
    "GeneralPreferences-InitialCommitsToShowInGraph": "Initial 提交s in Graph",
    "GeneralPreferences-InitialCommitsToShowInGraphHelp": "Minimum 500. If commit lazy loading is enabled, GitKraken Desktop will load additional commits if you reach the earliest commit in the Graph.",
    "GeneralPreferences-InitialCommitsToShowInGraphWarning": "Increasing this value may adversely affect performance.",
    "GeneralPreferences-EnableCommitsLazyLoadingInGraph": "Lazy Load 提交s in Graph",
    "GeneralPreferences-ShowAllCommitsInGraph": "Show All 提交s in Graph",
    "GeneralPreferences-ShowAllCommitsInGraphWarning": "Enabling this option may adversely affect performance.",
    "GeneralPreferences-UseExtendedLogging": "Use extended logging in activity log",
    "GeneralPreferences-OpenUrlInHost": "打开 URLs in Windows Default Browser",
    "GeneralPreferences-OpenUrlInHostHelp": "If enabled, all URLs GitKraken Desktop opens will open in your Windows default browser.",
    "GeneralPreferences-OpenFileInHost": "打开 文件s and Directories in Windows",
    "GeneralPreferences-OpenFileInHostHelp": "If enabled, all files and directories GitKraken Desktop opens will open in the Windows default program for that file type.",
    "GeneralPreferences-HideLaunchpadInStatusBar": "Hide Launchpad in status bar",
    "ConflictPrevention": "Conflict Prevention",
    "ConflictDetectionPreferences-Label": "Conflict Prevention",
    "ConflictDetectionPreferences-Instructions": "GitKraken Desktop can automatically compare your branch against its \"Base\" branch to see if any conflicts arise while you're working.",
    "ConflictDetectionPreferences-RepoSpecificConflictDetectionEnabled": "Enable proactive conflict detection with target branch",
    "ConflictDetectionPreferences-RepoSpecificConflictDetectionEnabledHelp1": "Unchecking this will disable proactive conflict detection only for {0}.",
    "ConflictDetectionPreferences-RepoSpecificConflictDetectionEnabledHelp2": "To disable it globally, go to {0} > {1}.",
    "ConflictDetectionPreferences-DisabledByProfileSettingWarning": "Globally disabled for all repositories. To re-enable, go to {0} > {1}.",
    "ConflictDetectionPreferences-BranchMatchingRules": "Base branches",
    "ConflictDetectionPreferences-BranchMatchingRulesHelp1": "When looking for conflicts, GitKraken Desktop will try to determine which \"base branch\" your active branch started from. You can improve its accuracy by limiting which branches are considered as a possible base branch.",
    "ConflictDetectionPreferences-BranchMatchingRulesHelp2": "If your current branch is associated with a pull request, GitKraken prioritizes checking the pull request's target branch, overriding branch filtering rules to ensure the most relevant conflicts are detected.",
    "ConflictDetectionPreferences-BranchMatchingRulesExample1Pattern": "origin/main",
    "ConflictDetectionPreferences-BranchMatchingRulesExample1Details": "include a single branch ({0}) on {1}",
    "ConflictDetectionPreferences-BranchMatchingRulesExample1Details0": "main",
    "ConflictDetectionPreferences-BranchMatchingRulesExample1Details1": "origin",
    "ConflictDetectionPreferences-BranchMatchingRulesExample2Pattern": "origin/**",
    "ConflictDetectionPreferences-BranchMatchingRulesExample2Details": "include all branches on {0}",
    "ConflictDetectionPreferences-BranchMatchingRulesExample2Details0": "origin",
    "ConflictDetectionPreferences-BranchMatchingRulesExample3Pattern": "origin/feature/**",
    "ConflictDetectionPreferences-BranchMatchingRulesExample3Details": "include branches on {0} which begin with {1}",
    "ConflictDetectionPreferences-BranchMatchingRulesExample3Details0": "origin",
    "ConflictDetectionPreferences-BranchMatchingRulesExample3Details1": "feature/",
    "ConflictDetectionPreferences-BranchMatchingRulesExample4Pattern": "!origin/abc",
    "ConflictDetectionPreferences-BranchMatchingRulesExample4Details": "exclude a single branch ({0}) on {1}",
    "ConflictDetectionPreferences-BranchMatchingRulesExample4Details0": "abc",
    "ConflictDetectionPreferences-BranchMatchingRulesExample4Details1": "origin",
    "ConflictDetectionPreferences-IgnoredBranches": "分支es Excluded from Conflict Prevention",
    "ConflictDetectionPreferences-IgnoredBranchesHelp": "You will not receive potential conflict warnings with your teammates when one of the following branches is checked out.",
    "ToolPreferences-Label": "External Tools",
    "ToolPreferences-ExternalMergeToolSubHeader": "合并 Tool",
    "ToolPreferences-ExternalMergeTool": "External 合并 Tool",
    "ToolPreferences-ExternalDiffToolSubHeader": "Diff Tool",
    "ToolPreferences-ExternalDiffTool": "External Diff Tool",
    "ToolPreferences-ExternalEditor": "External 编辑器",
    "ToolPreferences-ExternalTerminal": "External 终端",
    "ToolPreferences-ShowArguments": "Show Arguments",
    "ToolPreferences-HideArguments": "Hide Arguments",
    "ToolPreferences-ExternalEditorSubHeader": "编辑器",
    "ToolPreferences-CustomExternalEditorPath": "编辑器 Executable",
    "ToolPreferences-CustomOpenFileCommand": "打开 文件 Command",
    "ToolPreferences-CustomOpenRepoCommand": "打开 Repo Command",
    "ToolPreferences-MacOSBundleWarning": "You've selected an Application Bundle. Some editors may not support the flags required for some commands. For best results, select the editors command-line executable. {0}",
    "ToolPreferences-MacOSBundleWarningLink": "Learn More",
    "ToolPreferences-ExternalTerminalSubHeader": "终端",
    "ToolPreferences-CustomExternalTerminalPath": "终端 Executable",
    "ToolPreferences-CustomExternalTerminalCommand": "终端 Arguments",
    "Preferences-DisabledByOrgLabel": "This feature has been disabled by your organization.",
    "Preferences-Preferences": "偏好设置",
    "Preferences-Repo": "Repo: {0}",
    "SyncWithSystem": "Sync with system",
    "RepoSpecificPreferences": "Repo-Specific 偏好设置",
    "GitConfig": "Git Config",
    "GitConfig-Email": "Author Email",
    "GitConfig-Name": "Author Name",
    "GitConfig-AutoCRLF": "AutoCRLF",
    "ConfigureGitForm-title": "确认 your Git Details",
    "ConfigureGitForm-desc": "确认 your Git author details with the name and email you sign your commits with.",
    "ConfigureGitForm-AuthorEmail": "Email",
    "ConfigureGitForm-AuthorEmail-Placeholder": "The email you commit with",
    "ConfigureGitForm-AuthorName": "Name",
    "ConfigureGitForm-AuthorName-Placeholder": "The name you commit with",
    "ConfigureGitForm-SaveGitAuthorDetails": "Use these for Git 提交s",
    "ConfigureGitForm-SampleCommit": "Sample commit",
    "ConfigureGitForm-SampleCommit-commitMessage": "Delivering tests straight to production.",
    "GitSurveyForm-title": "Just one question - how comfortable are you with Git?",
    "GitSurveyForm-desc": "Your answer will improve your experience",
    "GitSurveyForm-NotAtAll": "否t at all - I'm just getting started",
    "GitSurveyForm-Somewhat": "Somewhat - I know the basics",
    "GitSurveyForm-Very": "Very - I use it daily without panic",
    "GitSurveyForm-Extremely": "Extremely - I help others with Git",
    "GitSurveyForm-Skip": "Just take me to the app",
    "WelcomeForm-ConnectGitProvider-title": "Connect Git Provider",
    "WelcomeForm-ConnectGitProvider-desc": "Unlocks more features and starts your 14-day trial of GitKraken Advanced.",
    "WelcomeForm-iAgreeToThe": "By continuing, you agree to the GitKraken",
    "WelcomeForm-EULA": "EULA",
    "WelcomeForm-WantToJumpInWithoutConnectingAProvider": "Want to jump in without connecting a provider?",
    "WelcomeForm-SkipThisStep": "Skip this step",
    "WelcomeForm-YouAreAlreadyLoggedIn": "You're connected!",
    "WelcomeForm-Continue": "Continue",
    "OnboardingGetReadyPanel-Title": "Get ready for much more than a Git GUI 🚀",
    "OnboardingGetReadyPanel-GkdAllowsYouTo": "GitKraken Desktop allows you to:",
    "OnboardingGetReadyPanel-ReduceErrors": "Reduce errors - no Git commands needed.",
    "OnboardingGetReadyPanel-SimplifyYourWorkflow": "Speed up your workflows with GitKraken AI.",
    "OnboardingGetReadyPanel-InteractAndActionYourCodeHistory": "Visualize your repo with the 提交 Graph.",
    "OnboardingGetReadyPanel-PreventConflicts": "Avoid conflicts with Conflict Prevention.",
    "OnboardingGetReadyPanel-AndMuchMore": "And much more!",
    "OnboardingLoginForm-title": "Welcome to GitKraken Desktop",
    "OnboardingLoginForm-ConnectGitProvider-title": "Connect Git Provider",
    "OnboardingLearnBasicsOfGkdForm-Title": "Learn the basics of GitKraken Desktop in this 1 minute tutorial",
    "OnboardingLearnBasicsOfGkdForm-StartTutorial": "Start tutorial",
    "OnboardingLearnBasicsOfGkdForm-AlreadyKnowWhatYouAreDoing": "Already know what you are doing?",
    "OnboardingLearnBasicsOfGkdForm-OpenRepository": "打开 repository",
    "OnboardingLearnBasicsOfGkdForm-CloneRepository": "Clone repository",
    "OnboardingOpenRepoForm-title": "打开 a repository",
    "OnboardingOpenRepoForm-desc": "Browse local repos to start working on your projects.",
    "OnboardingOpenRepoForm-BrowseYourRepos": "Browse",
    "OnboardingOpenRepoForm-OpenTheRepo": "打开 the repo",
    "OnboardingOpenRepoForm-LocalPath": "Local path",
    "RepoPathSelector-ChooseYourRepoPath": "Choose your repo location",
    "RepoPathSelector-LocalPathIsRequiredError": "Local path is required",
    "RepoPathSelector-RepoIsEmptyError": "We could not find a repository at '{0}'. 打开 another directory",
    "RepoPathSelector-RepoPathError": "Cannot open the repo: {0}",
    "RepoPathSelector-RepoPathNotFound": "The path '{0}' was not found. Select a different path.",
    "RepoPathSelector-ScanningForRepositories": "Scanning for repositories",
    "RepoPathSelector-MultipleReposFound": "Multiple repositories found in selected path",
    "RepoPathSelector-SelectRepo": "Select repo",
    "OnboardingChooseRepoForm-title": "Choose a repository to get started",
    "OnboardingChooseRepoForm-desc": "We found multiple repositories in that location. 打开 one to get started.",
    "OnboardingChooseRepoForm-repoName": "仓库 Name",
    "OnboardingChooseRepoForm-repoPath": "Path",
    "OnboardingChooseRepoForm-watchVideo": "Watch a video",
    "OnboardingChooseRepoForm-viewDocs": "View documentation",
    "OnboardingCloneRepoForm-title": "Clone a repository",
    "OnboardingCloneRepoForm-RepoToCloneUrl": "URL of the remote repository",
    "OnboardingCloneRepoForm-CloneDestinationPath": "Choose the location you want to clone to",
    "OnboardingCloneRepoForm-CloneARepoWithUrl": "Clone a repo with a URL",
    "OnboardingCloneRepoForm-IntegrationConnected": "{0} connected!",
    "OnboardingCloneRepoForm-CloneWith": "Clone with {0}",
    "OnboardingCloneRepoForm-CloneFrom": "Clone from {0}",
    "OnboardingCloneRepoForm-Url": "URL",
    "Onboarding-NeedAnAccountToStartATrial": "An account is required to try this feature. You can create a new one or use your existing account to log in.",
    "Onboarding-NeedToPurchaseALicense": "Your trial period has expired. You must purchase a license to use this feature.",
    "OnboardingPromptForm-title": "添加itional Information Required",
    "OnboardingLoadingForm-desc": "Please wait...",
    "WizardForm-backBtn": "BACK",
    "OnboardingTutorial-close-button-tooltip": "关闭 tutorial",
    "OnboardingTutorial-close-repo-button-tooltip": "关闭 tutorial repo",
    "OnboardingTutorial-name-INTRO_TUTORIAL": "Intro Tutorial",
    "OnboardingTutorial-INTRO_TUTORIAL-welcome-step-title": "Welcome! We've opened a tutorial repo for you",
    "OnboardingTutorial-INTRO_TUTORIAL-welcome-step-desc": "Learn a few actions that will supercharge git—takes 1 minute!",
    "OnboardingTutorial-start-the-walkthrough": "Start the Walkthrough",
    "OnboardingTutorial-open-my-own-repo": "I'll open my own repo",
    "OnboardingTutorial-INTRO_TUTORIAL-open-repo-step-title": "打开 a repository to get started",
    "OnboardingTutorial-INTRO_TUTORIAL-open-repo-step-desc": "Browse for a repo on your computer or clone a repo from the internet",
    "OnboardingTutorial-open-repo-option-title": "打开 Repo",
    "OnboardingTutorial-open-repo-option-desc": "打开 a Repo on My Machine",
    "OnboardingTutorial-clone-repo-option-title": "Clone Repo",
    "OnboardingTutorial-clone-repo-option-desc": "Clone a Repo from the Internet",
    "OnboardingTutorial-you-can-always-come-back-later": "You can return to this tab to continue the tutorial later",
    "OnboardingTutorial-you-can-always-come-back-later-from-a-new-tab": "You can return to the tutorial at any time from a new tab.",
    "OnboardingTutorial-INTRO_TUTORIAL-completed-step-title": "Great branch, commit, and merge!",
    "OnboardingTutorial-INTRO_TUTORIAL-completed-step-desc": "You've scratched the surface! 否w open your own repo.",
    "OnboardingTutorial-INTRO_TUTORIAL-create-commit-step-title": "否w commit the changes on your branch 👉",
    "OnboardingTutorial-INTRO_TUTORIAL-create-commit-desc": "Review and commit with confidence - we’ve staged an example change for you.",
    "OnboardingTutorial-INTRO_TUTORIAL-create-branch-step-title": "创建 a branch from the top toolbar ☝️",
    "OnboardingTutorial-INTRO_TUTORIAL-create-branch-step-desc": "You can also right click on the 提交 Graph to access available commands.",
    "OnboardingTutorial-INTRO_TUTORIAL-merge-branch-step-title": "Nice! 否w merge into your main branch",
    "OnboardingTutorial-INTRO_TUTORIAL-merge-branch-step-desc": "Avoid mistakes - drag and drop to clearly see which branches are merging.",
    "OnboardingTutorial-back": "Back to previous step",
    "OnboardingTutorial-thank-you-for-trying-gitkraken-desktop": "Thanks for trying GitKraken Desktop!",
    "PurchaseReceipt-Updating": "updating",
    "PurchaseReceipt-Type-Suite": "GitKraken {0} Suite",
    "PurchaseReceipt-Type-Gitgui": "GitKraken Desktop {0}",
    "PurchaseReceipt-Type-Gitlens": "Gitlens {0}",
    "PurchaseReceipt-Type-Bundle": "Bundle {0}",
    "PurchaseReceipt-Type-GitKrakenV1": "GitKraken Pro/Teams/Enterprise {0}",
    "PurchaseReceipt-Suite": "GitKraken Suite",
    "PurchaseReceipt-Gitgui": "GitKraken Desktop",
    "PurchaseReceipt-Gitlens": "Gitlens",
    "PurchaseReceipt-Bundle": "Bundle",
    "PurchaseReceipt-GitKrakenV1": "GitKraken Pro/Teams/Enterprise",
    "PurchaseReceipt-CostEach": "{0} each",
    "PurchaseReceipt-ExistingLicensesSingular": "{0} existing license",
    "PurchaseReceipt-ExistingLicensesPlural": "{0} existing licenses",
    "PurchaseReceipt-CountAdditionalLicenseSingular": "+ {0} additional license",
    "PurchaseReceipt-CountAdditionalLicensePlural": "+ {0} additional licenses",
    "PurchaseReceipt-Subtotal": "Subtotal",
    "PurchaseReceipt-PromoCode": "Promo Code: {0}",
    "PurchaseReceipt-PromoCodeApplied": "Promo Code applied",
    "PurchaseReceipt-ProratedCharge": "Prorated charge today",
    "PurchaseReceipt-Tax": "Tax",
    "PurchaseReceipt-TaxAt": "(tax at {0})",
    "PurchaseReceipt-TaxAtRate": "Tax at {0}",
    "PurchaseReceipt-Total": "Total",
    "PurchaseReceipt-NewIntervalTotal": "New {0} Total",
    "PurchaseReceipt-NextChargeOn": "Next charge on {0}",
    "SSH": "SSH",
    "SSHKey": "SSH Key",
    "SSHConfig": "SSH Config",
    "SSHConfig-Disabled-Nodegit-Mode": "Disabled in nodegit mode",
    "SSHConfig-GenerateNewKey": "Generate new Private/Public key",
    "SSHConfig-GenerateNewKeyHelp": "This will create new keys and configure GitKraken Desktop to use them",
    "SSHConfig-useGitCredentialManager": "Use default Git Credential Manager",
    "SSHConfig-useGitCredentialManagerHelp": "Select this to have GitKraken use the credential manager in your Git config to access Git repositories",
    "SSHConfig-UseLocalSSHAgent": "Use local SSH agent",
    "SSHConfig-SSHPrivateKey": "SSH Private Key",
    "SSHConfig-SSHPublicKey": "SSH Public Key",
    "SSHConfig-SSHKeySaveLocation": "SSH Key save location",
    "Authentication-KeyTypePublic": "Public",
    "Authentication-KeyTypePrivate": "Private",
    "Authentication-ForgetAllCredentials": "Forget all Usernames and Passwords",
    "Authentication-ForgetAll": "Forget All",
    "Authentication-NoCredentialsToRemove": "GitKraken Desktop has no stored user/pass credentials to remove",
    "Ssh-VerificationInfoNoAllowedSignersFileConfig": "gitconfig: gpg.ssh.allowedSigners文件 needs to be configured and exist for ssh signature verification",
    "Ssh-VerificationInfoNoSignature": "否 signature",
    "Ssh-VerificationInfoBadSignature": "Bad signature",
    "Ssh-VerificationInfoUnkownFailure": "Verification failed for unknown reasons",
    "Ssh-VerificationInfoValidKnown": "Verification completed successfully",
    "Ssh-VerificationInfoValidUnknown": "Verification failed because the signature is valid but unknown",
    "Ssh-VerificationInfoUnverified": "Verification failed becase the signature could not be verified",
    "Ssh-VerificationKeyId": "Key ID:",
    "Ssh-VerificationKeyType": "Key Type:",
    "Ssh-VerificationPrincipalId": "Principal ID:",
    "Ssh-VerificationTitle": "SSH Signature Details",
    "Service": "Service",
    "Services": "Services",
    "Services-AddAndCopy": "添加 SSH key and copy to clipboard",
    "Services-AddedDate": "added {0}",
    "Services-AddExistingSSHKey": "添加 existing SSH key",
    "Services-AddToService": "添加 to {0}",
    "Services-BrowseForPublicSSHKey": "Browse for {0} SSH Key",
    "Services-BrowseForPrivateSSHKey": "Browse for {0} SSH Key",
    "Services-ClearSSHKey": "Stop Using",
    "Services-Connect": "Connect",
    "Services-Connected": "Connected",
    "Services-CopySSHPublicKeyToClipboard": "Copy public key to clipboard",
    "Services-CopySSHPublicKeyAndOpenWebsite": "Copy public key to clipboard and open {0}",
    "Services-DeleteSSHKey": "删除 Locally",
    "Services-Disconnect": "Disconnect",
    "Services-EditConfig": "Edit",
    "Services-GenerateTokenHere": "Generate a token here.",
    "Services-GenerateToken": "Generate a token.",
    "Services-OldGitLabVersion": "Server version older than 17.0? {0}",
    "Services-Reconnect": "Reconnect",
    "Services-RemoveConfig": "Remove",
    "Services-RemoveConfigTooltip": "Remove the connection to this server",
    "Services-RemoveSSHKey": "Remove Key",
    "Services-RemoveAndDeleteSSHKey": "Remove and 删除",
    "Services-GenerateSSHKey": "Generate SSH Key",
    "Services-GenerateAndAddSSHKey": "Generate SSH key and add to {0}",
    "Services-GenerateAndCopySSHKey": "Generate SSH key and copy to clipboard",
    "Services-HostDomain": "Host Domain",
    "Services-HostDomainHint": "e.g., {0}.mycompany.com",
    "Services-HostDomainHintAzureDevops": "e.g., dev.azure.com/mycompany",
    "Services-KeyPrivate": "Private: {0}",
    "Services-KeyPublic": "Public: {0}",
    "Services-LeaveBlank": "We recommend leaving this field blank.",
    "Services-ServiceNotConnected": "{0} is not connected",
    "Services-NotConnected": "否t Connected",
    "Services-AddKey": "添加 key to {0}",
    "Services-OAuthToken": "OAuth Token",
    "Services-AzureOrganization": "Azure Organization",
    "Services-PersonalAccessToken": "Personal Access Token",
    "Services-PersonalAccessTokenTooltip": "GitKraken Desktop can use a personal access token to connect to your enterprise server and streamline operations in-app. Click the <i class=\"zmdi zmdi-help-outline color-accent\"></i> to learn how.",
    "Services-GitKrakenNeedsATokenFrom": "GitKraken Desktop needs a token from {0}",
    "Services-GitKrakenNeedsATokenFromWithTheFollowingSettings": "GitKraken Desktop needs a token from {0} with the following settings:",
    "Services-GenerateATokenOn": "Generate a token on {0}",
    "Services-Repo": "{0} Repo",
    "Services-SaveToken": "保存 Token",
    "Services-ConfirmOrganization": "确认 Organization",
    "Services-ServiceConnectionSuccessful": "Connected to {0}",
    "Services-ServiceConnectionSuccessfulMessage": "GitKraken will help you find stuff on {0} when cloning or adding remotes. We'll also use your SSH Config to fetch and push; or you can set up a {0}-specific SSH key in the Integrations menu.",
    "Services-ServiceConnectionSuccessfulWithoutRemotesMessage": "GitKraken will help you find stuff on {0} when cloning. We'll also use your SSH Config to fetch and push; or you can set up a {0}-specific SSH key in the Integrations menu.",
    "Services-SSHKey": "SSH Key",
    "Services-SSHKeyAdviseAdd": "This key was not found on your {0} account. GitKraken can try to add the key to {0} (recommended).",
    "Services-SSHKeyAdviseInvalid": "This key was not found on your {0} account. You can configure SSH settings for GitHub below.",
    "Services-SSHKeyAdviseInvalidOrAdd": "This key was not found on your {0} account. GitKraken can try to add the key to {0}, or you can configure a different key below.",
    "Services-SSHKeyAdditionSuccessful": "SSH Key added to {0}!",
    "Services-SSHKeyRemovalSuccessful": "SSH key removed from {0}.",
    "Services-SSHKeyTitlePlaceholder": "(optional) Enter a title for your new SSH key",
    "Services-SSHKeyUnverifiable": "{0} does not allow external apps to check whether public keys are registered. If your key is not being accepted by {0}, use the button below and make sure the key has been added on {1}.",
    "Services-Token": "Token",
    "Services-UsingAgent": "Using your System SSH Local Agent",
    "Services-UsingDefaults": "Using your Default GitKraken Desktop SSH Key",
    "Services-UsingNone": "否 SSH settings detected. You can add an SSH Key to {0} below.",
    "Services-UsingQuestion": "Connect {0}",
    "Services-IntegrationUpgradeDescription": "Clone, create pull requests, and add remotes for your {0} repos without ever leaving GitKraken Desktop",
    "Services-GitHubEnterpriseServerUpgrade": "Upgrade to connect your GitHub Enterprise Server",
    "Services-GitHubEnterpriseServerTrial": "Start a free trial to connect your GitHub Enterprise Server",
    "Services-BitbucketServerUpgrade": "Upgrade to connect your Bitbucket Data Center",
    "Services-BitbucketServerTrial": "Start a free trial to connect your Bitbucket Data Center",
    "Services-GitLabSelfHostedUpgrade": "Upgrade to connect your GitLab self-managed instance",
    "Services-GitLabSelfHostedTrial": "Start a free trial to connect your GitLab self-managed instance",
    "Services-AzureDevopsUpgrade": "Upgrade to connect Azure DevOps",
    "Services-AzureDevopsTrial": "Start a free trial to connect Azure DevOps",
    "Services-ExpiresAt": "Expires at:",
    "Services-Scopes": "Scopes:",
    "Services-GitlabApiScope": "api",
    "Services-GitlabAccessYourApi": "Access your API",
    "Services-GitlabReadUserScope": "read_user",
    "Services-GitlabReadUserInformation": "Read user information",
    "Services-AzureCodeScope": "Code (Read, write & manage)",
    "Services-AzureIdentityScope": "Identity (Read)",
    "Services-AzureProjectAndTeamScope": "Project and Team (Read & write)",
    "Services-AzureWorkItemsScope": "Work Items (Read & write)",
    "Services-AzureGraphScope": "Graph (Read)",
    "Services-Permissions": "Permissions:",
    "Services-BitbucketServerProjectsScope": "Project (Admin)",
    "Services-BitbucketServerRepositoriesScope": "Repositories (Admin)",
    "Services-BitbucketServerPath": "After clicking the button below, navigate to the left panel. Then, click 'HTTP access tokens' and select '创建 token'.",
    "Services-BitbucketButtonNotWorking": "If the above button doesn't route you to the right place, try {0}.",
    "Services-BitbucketThisLink": "this link",
    "Services-Error-HostDomainUnreachable": "Could not reach the specified Host Domain",
    "Services-Error-TokenInvalid": "Invalid token specified",
    "Services-Error-SaveAuthDataFailed": "Connecting to integration failed",
    "Integrations": "Integrations",
    "Shop-ShopTitle": "Account Management",
    "Shop-OpenInBrowser": "打开 in browser",
    "Encoding-Label": "Encoding",
    "Encoding-Help": "Default encoding when reading or writing files in this repo.",
    "Encoding-Description": "Default encoding",
    "Experimental-Label": "Experimental",
    "ExperimentalPreferences-Disclaimer": "The features listed here are still under development and are provided to give you an early look at some of the new functionality we're working on at GitKraken. Experimental features may not work as intended and could be changed or removed in the future. These settings are entirely optional, so if you run into any issues, you can turn them off at any time.",
    "ExperimentalPreferences-Disclaimer2": "If you do experience issues, or have any other feedback, please reach out to our team at the link below to help us improve GitKraken Desktop.",
    "ExperimentalPreferences-SupportButton": "Provide Feedback on Experimental Features",
    "ExperimentalPreferences-GitBinarySubHeading": "Git Executable",
    "ExperimentalPreferences-GitBinaryDescription": "When this setting is enabled, GitKraken Desktop will utilize the Git executable instead of the 否deGit library for certain Git actions including fetching and committing. This may provide increased performance and compatibility with certain projects and development environments.",
    "ExperimentalPreferences-GitBinaryLabel": "Use Git Executable",
    "ExperimentalPreferences-GitBinaryHelp": "Enabling this will utilize the Git executable selected below for executing Git commands.",
    "ExperimentalPreferences-GitBinaryHelpSshSign": "Signing commits with SSH will also be allowed.",
    "ExperimentalPreferences-GitBinaryHelpWarning1": "Opting out of this is temporary!",
    "ExperimentalPreferences-GitBinaryHelpWarning2": "Please {0} with any issues you have, so that we can fix them before 否deGit functionality is permanently removed.",
    "ExperimentalPreferences-GitBinaryWarnSshSign": "Warning! GPG format has been changed to 'OPENPGP'. SSH signing is only supported with Git Executable.",
    "ExperimentalPreferences-GitSshNotDetected": "打开SSH not detected. Interacting with SSH remotes while not using an SSH agent might fail.",
    "ExperimentalPreferences-GitSshVersion": "Incompatible 打开SSH version detected: {0} < {1}. Interacting with SSH remotes while not using an SSH agent may fail.",
    "ExperimentalPreferences-GitVersionNotSupported": "Selected Git Executable version is lower than recommended: {0} < {1}. Using this version of Git may produce unexpected results.",
    "ExperimentalPreferences-PackagedGitDesc": "Bundled with GitKraken Desktop",
    "ExperimentalPreferences-SelectedGitInstance": "Git Executable",
    "ExperimentalPreferences-SelectedGitInstanceHelp": "The Git executable GitKraken Desktop will use to execute Git commands",
    "ExperimentalPreferences-SelectedGitInstanceHelpMinGit": "The Git executable GitKraken Desktop will use to execute Git commands.\nThis is a minimal Git install, notably it is missing a full unix bash environment. If a full environment is required (for example, for Git hooks), we recommend installing a full Git distributable from {0} and selecting that here.",
    "ExperimentalPreferences-SelectedGitInstanceHelpMinGitLinkText": "Git for Windows",
    "ExperimentalPreferences-SelectedGitInstanceHelpSshVersion": "The Git executable GitKraken Desktop will use to execute Git commands.\nDetected 打开SSH version: {0}",
    "ExperimentalPreferences-SSHVersionNotSupportedForVerifyCommitSigning": "Detected SSH version is lower than required in order to sign/verify commits: {0} < {1}",
    "ExperimentalPreferences-CloudPatchesSubHeading": "Cloud Patches",
    "ExperimentalPreferences-CloudPatchesDescription": "GitKraken can create a Cloud Patch for you to share with other developers. A Cloud Patch is a Git patch GitKraken securely stores for you so you can easily share changes with your team. The code is transferred directly from your machine into secure storage. {0}",
    "ExperimentalPreferences-CloudPatchesLinkText": "Visit our website to learn more about Cloud Patches.",
    "ExperimentalPreferences-CloudPatchesDescription2": "You can create Cloud Patches by navigating to the Cloud Patch tab {0} in the WIP commit panel or right clicking on any commit and selecting \"Share commit as Cloud Patch\". GitKraken will then provide a link for you to share with other developers. A new section in the left panel will list all of the Cloud Patches you have created or recently opened.",
    "ExperimentalPreferences-CloudPatchesWarningDescription": "The secure storage is managed by GitKraken.",
    "ExperimentalPreferences-CloudPatchesSelfHostedDescription": "Your organization has configured self-hosted storage for Cloud Patches.",
    "ExperimentalPreferences-ContactUsInline": "contact us",
    "CommitPreferences-CommitTemplate": "提交 Template",
    "CommitPreferences-CommitTemplateDocumentation": "Git commit template documentation",
    "CommitPreferences-DefaultPushAfterCommit": "推送 after each commit",
    "CommitPreferences-DefaultSkipGitHooks": "Skip git hooks by default when committing",
    "CommitPreferences-Description": "Description",
    "CommitPreferences-ErrorSaveTemplate": "错误 saving commit template",
    "CommitPreferences-Instructions": "创建 and apply a default initial message for commits to maintain consistency in commit summaries and descriptions. For more information see the ",
    "CommitPreferences-RemoveCommentsFromCommitMessages": "Remove comments from commit messages",
    "CommitPreferences-SaveCommitTemplate": "保存 提交 Template",
    "CommitPreferences-SuccessSaveTemplate": "提交 template saved successfully",
    "CommitPreferences-Summary": "Summary",
    "CommitPreferences-UseTemplateForCommitMessages": "Apply this template to commit messages",
    "GitFlow": "Gitflow",
    "GitFlow-Branches": "分支es",
    "GitFlow-Prefixes": "Prefixes",
    "GitFlow-Master": "Main/Master",
    "GitFlow-Develop": "Develop",
    "GitFlow-Feature": "Feature",
    "GitFlow-Release": "Release",
    "GitFlow-Hotfix": "Hotfix",
    "GitFlow-VersionTag": "版本 Tag",
    "GitFlow-Init": "Initialize Gitflow",
    "GitFlow-Init-Success": "Gitflow has been initialized",
    "GitFlow-Init-Failure": "Failed initializing Gitflow",
    "GitFlow-Update": "Update Gitflow Config",
    "GitFlow-UpdateWarning": "Changing these prefixes will cause any existing branches with different prefixes to be ignored by Gitflow.",
    "GitFlow-Start": "Start",
    "GitFlow-StartFeature": "Start Feature",
    "GitFlow-StartHotfix": "Start Hotfix",
    "GitFlow-StartRelease": "Start Release",
    "GitFlow-StartFeatureSuccess": "Started feature: '{0}'",
    "GitFlow-StartHotfixSuccess": "Started hotfix: '{0}'",
    "GitFlow-StartReleaseSuccess": "Started release: '{0}'",
    "GitFlow-Finish": "Finish",
    "GitFlow-Finish-Branch": "Finish {0}",
    "GitFlow-FinishFeature": "Finish Feature",
    "GitFlow-FinishFeatureSuccess": "Finished feature: '{0}'",
    "GitFlow-FinishHotfix": "Finish Hotfix",
    "GitFlow-FinishHotfixSuccess": "Finished hotfix: '{0}'",
    "GitFlow-FinishRelease": "Finish Release",
    "GitFlow-FinishReleaseSuccess": "Finished release: '{0}'",
    "GitFlow-LatestDevelop": "Latest {0}",
    "GitFlow-WorkingCopy": "Current branch",
    "GitFlow-DeleteBranch": "删除 branch",
    "GitFlow-RebaseOnDevelop": "Rebase on {0}",
    "GitFlow-TagMessage": "tag message",
    "GitFlow-CannotFinishFeatureMissingRef": "否 feature to finish",
    "GitFlow-CannotFinishFeatureMissingDevelop": "{0} branch is required to finish feature",
    "GitFlow-CannotFinishHotfixMissingRef": "否 hotfix to finish",
    "GitFlow-CannotFinishHotfixMissingBoth": "{0} and {1} branch required to finish hotfix",
    "GitFlow-CannotFinishHotfixMissingDevelop": "{0} branch is required to finish hotfix",
    "GitFlow-CannotFinishHotfixMissingMaster": "{0} branch is required to finish hotfix",
    "GitFlow-CannotFinishReleaseMissingRef": "否 release to finish",
    "GitFlow-CannotFinishReleaseMissingBoth": "{0} and {1} branch required to finish hotfix",
    "GitFlow-CannotFinishReleaseMissingDevelop": "{0} branch is required to finish release",
    "GitFlow-CannotFinishReleaseMissingMaster": "{0} branch is required to finish release",
    "GitFlow-CannotStartHotfixMissingMaster": "{0} branch is required to start hotfix",
    "GitHooks-BrowseForDirectory": "Select a directory to use",
    "GitHooks-Info": "The directory that Git hooks will use for this repository and its linked worktrees.",
    "GitHooks-Instructions": "Git hooks are shell scripts that execute after an event such as a commit or push. For more details, see the {0}.",
    "GitHooks-InvalidPath": "Invalid Git hooks directory.",
    "GitHooks-Link": "GitKraken Desktop Git hooks documentation",
    "GitHooks-Label": "Git Hooks",
    "GitHooks-Path": "Git Hooks directory",
    "GitHubActions-WorkflowFileExists": "{0} already exists",
    "GitHubActionsTemplates-DefaultCategory": "Basic templates",
    "GitHubActionTemplates-BlankTemplate": "Blank workflow",
    "GitHubActionsTemplates-AdditionalTemplatesCategory": "添加itional templates",
    "GitHubActionsTemplates-CCPPWithMake": "C/C++ with Make",
    "GitHubActionTemplates-GreetFirstTimeContributors": "Greet first-time contributors",
    "GitHubActionTemplates-LabelPRsBasedOnFilesChanged": "Label PRs based on files changed",
    "GitHubActionTemplates-CheckForStaleIssuesAndPRs": "Check for stale issues and PRs",
    "GKAIPreferences-GitKrakenAI-Label": "GitKraken AI",
    "GKAIPreferences-UpgradeButton": "Upgrade to get more requests",
    "GKAIPreferences-UpgradeButtonFreeUser": "Upgrade to use Gitkraken AI",
    "GKAIPreferences-GitKrakenAI-Enable": "Enable GitKraken AI",
    "GKAIPreferences-UseCustomAiProvider": "Use your own API Key to make AI requests",
    "GKAIPreferences-UseCustomAiProvider-DisabledOrgOverride": "Provider configuration set by your organization's admin.",
    "GKAIPreferences-UseCustomAiProviderHelp": "If enabled, GitKraken Desktop will make requests directly to the selected provider",
    "GKAIPreferences-AzureEndpointHelp-1": "The full URL of the Azure deployment to use.",
    "GKAIPreferences-AzureEndpointHelp-2": "Format: ",
    "GKAIPreferences-CustomAiProvider-Label": "Provider",
    "GKAIPreferences-CustomAiProviderAPIKey-Label": "Provider API Key",
    "GKAIPreferences-CustomAiProviderAPIKeyHelp": "Your API Key used to make the API call",
    "GKAIPreferences-CustomAiProviderAPIKeyTest-Label": "Test Connection",
    "GKAIPreferences-CustomAiProviderEndpointHelp": "The full URL of your provider's 打开AI API compatible endpoint",
    "GKAIPreferences-CustomAiProviderEndpoint-Label": "API Endpoint URL",
    "GKAIPreferences-CustomAiProviderAPIKeyTestSuccess": "API key is valid",
    "GKAIPreferences-ConfigurableAiProviderConfigurationIsValid": "Configuration successful",
    "GKAIPreferences-CommitMessageGeneration-Label": "提交 Message Generation",
    "GKAIPreferences-CommitMessageGenerationModel-Label": "The model GitKraken will use to generate commit messages.",
    "GKAIPreferences-CommitMessageGenerationCustomInstructions-Label": "Custom Instructions",
    "GKAIPreferences-CommitMessageGenerationCustomInstructionsHelp": "添加 custom instructions so GitKraken AI can create better commit messages for you",
    "GKAIPreferences-StashMessageGenerationModel-Label": "The model GitKraken will use to generate stash messages.",
    "GKAIPreferences-StashMessageGenerationCustomInstructionsHelp": "添加 custom instructions so GitKraken AI can create better stash messages for you",
    "GKAIPreferences-StashMessageGenerationCustomInstructions-Label": "Custom Instructions",
    "GKAIPreferences-StashMessageGeneration-Label": "Stash Message Generation",
    "GKAIPreferences-ExplainCommits-Label": "Explain 提交s",
    "GKAIPreferences-ExplainCommitsModel-Label": "The model GitKraken will use to explain commits.",
    "GKAIPreferences-ExplainCommitsCustomInstructions-Label": "Custom Instructions",
    "GKAIPreferences-ExplainCommitsCustomInstructionsHelp": "添加 custom instructions so GitKraken AI can explain commits better",
    "GKAIPreferences-PullRequest-Label": "拉取 Request",
    "GKAIPreferences-PullRequestModel-Label": "The model GitKraken will use to generate 拉取 Request title and description.",
    "GKAIPreferences-PullRequestCustomInstructions-Label": "Custom Instructions",
    "GKAIPreferences-PullRequestCustomInstructionsHelp": "添加 custom instructions so GitKraken AI can generate 拉取 Request title and description better",
    "GKAIPreferences-GenerateApiKeyForProvider": "Generate an API key for {0} here.",
    "GKAIPreferences-UpgradeToConnectPrivateProvider": "Upgrade to connect a private AI provider",
    "GKAIPreferences-ConflictResolution-Label": "Conflict Resolution",
    "GKAIPreferences-ConflictResolutionModel-Label": "The model GitKraken will use to auto-resolve conflicts.",
    "GKAIPreferences-ConflictResolutionCustomInstructions-Label": "Custom Instructions",
    "GKAIPreferences-ConflictResolutionCustomInstructionsHelp": "添加 custom instructions so GitKraken AI can auto-resolve conflicts better",
    "Lfs-TrackingPatternPlaceholder": "Enter a pattern (e.g., *.zip)",
    "Lfs-AddTrackingPattern": "添加 tracking pattern",
    "Lfs-ViewGitattributes": "View .gitattributes in editor",
    "Lfs-PreferencesHeader": "LFS",
    "Lfs-HasNotBeenInitialized": "LFS has not been initialized on {0}",
    "Lfs-InitializeLfs": "Initialize LFS",
    "Lfs-InitializeLfsOnThisRepo": "Initialize LFS on This Repo",
    "Lfs-TrackingPatterns": "Tracking Patterns",
    "Lfs-AllFilesWithSameExtension": "Track all files with the extension '{0}'",
    "Lfs-AllFilesInFolder": "Track all files in '{0}/'",
    "Lfs-TrackFile": "Track '{0}'",
    "Lfs-Commands": "LFS Commands",
    "Lfs-Push": "推送 all LFS files",
    "Lfs-Prune": "Prune local LFS repository",
    "Lfs-Pull": "拉取 all LFS files",
    "Lfs-Checkout": "Checkout all LFS files",
    "Lfs-Fetch": "Fetch all LFS files",
    "Lfs-PullLfsNow": "拉取 all LFS files now?",
    "Lfs-InitializeWithLfs": "Initialize with LFS",
    "Lfs-LfsNotInstalledMessage": "This repository requires LFS but you do not have LFS installed. Modifying files that are tracked by LFS could potentially harm your repository. Please visit our support site for info on installing LFS.",
    "Lfs-LfsNotProperVersionMessage": "GitKraken Desktop requires a later version of Git or LFS. Modifying files that are tracked by LFS could potentially harm your repository. Please visit our support site for info on installing LFS.",
    "Lfs-ContinueWithoutLfs": "Continue without LFS",
    "Lfs-VisitSupportDocs": "Visit Support Docs",
    "Lfs-NewPattern": "New Pattern",
    "Lfs-FetchHeader": "Fetch",
    "Lfs-PullHeader": "拉取",
    "Lfs-PushHeader": "推送",
    "Lfs-PruneHeader": "Prune",
    "Lfs-CheckoutHeader": "Checkout",
    "Lfs-ErrorInitializingLfs": "错误 initializing LFS",
    "Lfs-ErrorLfsHooksExists": "Some LFS hooks already exists.\nTo resolve this, either:\n1: run `git lfs update --manual` for instructions on how to merge hooks.\n2: run `git lfs update --force` to overwrite your hook.",
    "Lfs-ErrorOpenGitattributes": "错误 openning .gitattributes",
    "Lfs-ErrorPull": "错误 on LFS 拉取",
    "Lfs-ErrorFetch": "错误 on LFS Fetch",
    "Lfs-ErrorPush": "错误 on LFS 推送",
    "Lfs-ErrorPrune": "错误 on LFS Prune",
    "Lfs-ErrorCheckout": "错误 on LFS Checkout",
    "Lfs-SuccessPull": "LFS pulled successfully",
    "Lfs-SuccessFetch": "LFS fetched successfully",
    "Lfs-SuccessPush": "LFS pushed successfully",
    "Lfs-SuccessPrune": "LFS pruned successfully",
    "Lfs-SuccessCheckout": "LFS checkout successful",
    "Lfs-UpToDate": "LFS files are up to date",
    "submodule": "submodule",
    "Submodule": "Submodule",
    "Submodules-Label": "Submodules",
    "Submodules-AutoUpdateSubmodules": "Keep submodules up to date",
    "Submodules-AutoUpdateDefault": "Use global setting",
    "Submodules-AutoUpdateEnabled": "Enabled",
    "Submodules-AutoUpdateDisabled": "Disabled",
    "Submodules-EnabledForThisRepo": "Enabled for this repo",
    "Submodules-DisabledForThisRepo": "Disabled for this repo",
    "Submodule-CannotStageUncommittedSubmoduleChanges": "You have uncommitted changes on your submodule. 打开 the submodule to commit changes.",
    "Submodule-CheckingOut": "Checking out submodule {0}",
    "Submodule-CommitMessageDeleted": "Removed submodule {0}",
    "Submodule-CommitMessageNew": "添加ed submodule {0}",
    "Submodule-CommitMessageUpdated": "Updated submodule {0}",
    "Submodule-CommitWithAlreadyStagedPrompt": "You already have staged changes, would you like to commit these too?",
    "Submodule-CouldNotShowCurrent": "Cannot resolve merge conflicts in submodule {0} before the submodule is initialized",
    "Submodule-Create": "添加 Submodule",
    "Submodule-DeletePrompt": "This is a destructive operation, are you sure you want to delete \"{0}\"?",
    "Submodule-Edit": "Edit Submodule",
    "Submodule-Fetching": "Fetching submodule {0}",
    "Submodule-FetchingRecursively": "Fetching recursive submodule {0}",
    "Submodule-FormCommit": "提交 Changes",
    "Submodule-FormCurrentRevision": "Current Revision",
    "Submodule-FormName": "Name",
    "Submodule-FormNamePath": "Name/Path",
    "Submodule-FormOpen": "打开 this submodule",
    "Submodule-FormPath": "Path",
    "Submodule-FormPointerRevision": "Expected 提交",
    "Submodule-FormRemove": "删除 this submodule",
    "Submodule-FormReset": "Discard Submodule Changes",
    "Submodule-FormUrl": "Remote URL",
    "Submodule-FormWorkdirRevision": "Checked Out 提交",
    "Submodule-InitAllPrompt": "Would you like to initialize submodules for {0}?",
    "Submodule-Initialize": "Initialize",
    "Submodule-Menu": "Submodule actions",
    "Submodule-LocalModifications": "Current uncommitted submodule changes",
    "Submodule-OpenImplied": "打开 submodule",
    "Submodule-UseCurrent": "Use current",
    "Submodule-Open": "打开 submodule: {0}",
    "Submodule-PathExistsPrompt": "The path {0} already exists - would you like to delete it?",
    "Submodule-Status-AddedUninitialized": "Your submodule has been added but needs to be initialized.",
    "Submodule-Status-AddedInitialized": "Your submodule has been added and initialized but not committed.",
    "Submodule-Status-Deleted": "You have removed this submodule and need to commit the change.",
    "Submodule-Status-Dirty": "There are uncommitted changes in this submodule.",
    "Submodule-Status-DirtyAndOutOfSync": "This submodule has uncommitted changes and is out-of-sync with {0}.",
    "Submodule-Status-InSync": "This submodule is in-sync with your repository ({0}).",
    "Submodule-Status-OutOfSync": "This submodule is out-of-sync with {0}.",
    "Submodule-Status-Uninitialized": "Your submodule directory has not been initialized.",
    "Submodule-Update": "Update {0}",
    "Submodule-InitializeSpecific": "Initialize {0}",
    "Submodule-DirInIndex": "Path '{0}' already exists in the index as a directory.",
    "Submodule-PathConflict": "Submodule {0} cannot be initialized because a submodule is already initalized at {1}",
    "ModifySubmodule-Submit": "Edit this submodule",
    "UIPreferences": "UI Customization",
    "UIPreferences-Theme": "Theme",
    "UIPreferences-ThemeDir": "创建 custom themes by copying and modifying a dark or light theme template in your themes directory:",
    "UIPreferences-ShowCommitMessageInGraph": "Show commit message in graph",
    "UIPreferences-ShowCommitDescriptionInGraph": "Show commit description in graph",
    "UIPreferences-ShowCommitTreeInGraph": "Show commit tree in graph",
    "UIPreferences-ShowRefInGraph": "Show branches and tags in graph",
    "UIPreferences-ShowCommitAuthorInGraph": "Show commit author in graph",
    "UIPreferences-ShowCommitChangesInGraph": "Show commit changes in graph",
    "UIPreferences-ShowCommitDateTimeInGraph": "Show commit date/time in graph",
    "UIPreferences-ShowCommitShaInGraph": "Show commit sha in graph",
    "UIPreferences-ShowToolbarLabels": "Show toolbar icon labels",
    "UIPreferences-Spellcheck": "Enable spell checking",
    "UIPreferences-NotificationLocation": "否tification Location",
    "UIPreferences-Locale": "Date/Time Locale",
    "UIPreferences-DATE": "Date Format",
    "UIPreferences-DATE_TIME": "Date/Time Format",
    "UIPreferences-DATE_WORD": "Date word Format",
    "UIPreferences-DATE_VERBOSE": "Date verbose Format",
    "UIPreferences-DateTimeFormatTitle": "Date/Time",
    "UIPreferences-DateTimeFormatHelp": "See {0} for formatting options. Restart GitKraken Desktop for changes to take effect.",
    "UIPreferences-DateTimeFormatHelpLinkText": "here",
    "NotificationLocation-BottomLeft": "Bottom Left",
    "NotificationLocation-BottomRight": "Bottom Right",
    "NotificationLocation-TopLeft": "Top Left",
    "NotificationLocation-TopRight": "Top Right",
    "NotificationLocation-LocationUpdated": "否tification Location Updated",
    "UIPreferences-Language": "Language",
    "UIPreferences-UseAuthorInitialsForAvatars": "Display author initials and generic remote icons instead of avatars",
    "UIPreferences-ShowGhostRefsOnHover": "Show ghost branch/tag when hovering over or selecting a commit",
    "UIPreferences-HighlightRowsOnRefHover": "Highlight associated rows when hovering over a branch",
    "UIPreferences-CompactGraphColumnLayout": "Compact Graph Column",
    "UIPreferences-ResetGraphColumnsToDefaultLayout": "Reset columns to default layout",
    "UIPreferences-ResetGraphColumnsToCompactLayout": "Reset columns to compact layout",
    "UIPreferences-DefaultGroupColor": "Default color for default groups",
    "UIPreferences-DefaultWorkspaceColor": "Default Workspace Color",
    "ShowCommitDescInGraphOpt-Always": "Always",
    "ShowCommitDescInGraphOpt-OnHover": "On hover",
    "ShowCommitDescInGraphOpt-Never": "Never",
    "Gpg-Passphrase": "GPG Passphrase",
    "Gpg-ReloadGpgKeys": "Reload GPG keys",
    "Gpg-VerificationInfoBadsig": "Verification failed because the signature was invalid",
    "Gpg-VerificationInfoErrsigPubkey": "Verification failed because the public key used to sign the commit was not found",
    "Gpg-VerificationInfoExpired": "Verification failed because the key or signature was expired",
    "Gpg-VerificationInfoMismatchedEmail": "Verification failed because the committer email does not match any emails associated with the key",
    "Gpg-VerificationInfoRevoked": "Verification failed because the key was revoked",
    "Gpg-VerificationInfoUnknown": "Verification failed for unknown reason",
    "Gpg-VerificationInfoUntrusted": "Verification failed because the key was not trusted",
    "Gpg-VerificationInfoValid": "Verification completed successfully",
    "Gpg-VerificationKeyId": "Key ID:",
    "Gpg-VerificationPrimaryUserId": "Primary User ID:",
    "Gpg-VerificationTitle": "GPG Signature Details",
    "Gpg-VerificationTrust": "Trust:",
    "GPGPreferences": "提交 Signing",
    "GPGPreferences-CopyPublicKey": "Copy GPG Public Key",
    "GPGPreferences-ExpiredKeyLink": "How do I renew an expired key?",
    "GPGPreferences-CurrentKey": "Signing Key",
    "GPGPreferences-CurrentKeyLink": "How to select SSH signing key?",
    "GPGPreferences-CurrentKeyPathTitle": "Path to signing Key",
    "GPGPreferences-CurrentKeyGpgWarning": "A key is required for GPG signing.",
    "GPGPreferences-CurrentKeySshWarning": "A key is required for SSH signing.",
    "GPGPreferences-GpgBin": "GPG Program",
    "GPGPreferences-GpgBinHelp": "This is usually \"gpg\" or \"gpg2\" depending on the\n version you are using.\nYou can also browse for the path directly.",
    "GPGPreferences-GpgBinWarning": "Select a GPG program to sign with.",
    "GPGPreferences-GpgBinPathTitle": "Path to gpg",
    "GPGPreferences-GpgFormat": "GPG Format",
    "GPGPreferences-GpgFormat-Opengpg": "OPENPGP",
    "GPGPreferences-GpgFormat-Ssh": "SSH",
    "GPGPreferences-GpgGenerateKey": "Generate new GPG Key",
    "GPGPreferences-GpgGenerateKeyHelp": "This will create a 4096 bit key with the name and email\n in your current profile that expires in 2 years.\nThis will also be set as your active signing key.",
    "GPGPreferences-GpgPassphrasePlaceholder": "Passphrase (optional)",
    "GPGPreferences-GpgSignCommits": "Sign 提交s by Default",
    "GPGPreferences-GpgSignTags": "Sign Tags by Default",
    "GPGPreferences-GpgSshProgram": "GPG SSH Program",
    "GPGPreferences-GpgSshProgramLink": "Which program to select?",
    "GPGPreferences-GpgSshProgramPathTitle": "Path to GPG SSH program",
    "GPGPreferences-GpgSshProgramWarning": "Select a SSH program to sign with.",
    "GPGPreferences-PrivateKeyUsed": "The private key will be used for signing.",
    "GPGPreferences-SshAllowedSignersFile": "Allowed Signers 文件",
    "GPGPreferences-SshAllowedSignersFilePathTitle": "Path to allowed signers file",
    "GPGPreferences-SshAllowedSignersFileLink": "Allowed Signers 文件 帮助",
    "GPGPreferences-SshAllowedSignersFileUsedInfo": "文件 used for SSH signature verification. If empty, it will use the global git configuration value.",
    "GPGPreferences-SshAllowedSignersFileUsedWarningLocal": "A local 'gpg.ssh.allowedSigners文件' config value in the '{0}' repository is overriding this profile setting.\nLocal value: ",
    "GPGPreferences-SshAllowedSignersFileUsedWarningNoExists": "文件 could not be found or it's a directory.",
    "GPGPreferences-SshAgentUsed": "The SSH agent will be used for signing.",
    "GPGPreferences-SshAgentOrPrivateKeyUsed": "The SSH agent or the private key will be used for signing.",
    "GPGPreferences-SshKeyNotInAgentTitle": "SSH key might need to be added to the SSH Agent",
    "GPGPreferences-SshKeyPrefixFormatNotInAgent": "When specifying SSH key with prefix 'key::' the corresponding private SSH key needs to be added to an SSH Agent",
    "GPGPreferences-SshKeyPublicFormatNotInAgent": "When specifying a public SSH key file, the corresponding private SSH key needs to be added to an SSH Agent or make sure that the file exists",
    "EditorPreferences": "编辑器",
    "EditorPreferences-DefaultFont": "{0} (Default)",
    "EditorPreferences-EOLCharacter": "End of Line Character",
    "EditorPreferences-EOLCharacterLF": "LF",
    "EditorPreferences-EOLCharacterCRLF": "CRLF",
    "EditorPreferences-Font": "Font",
    "EditorPreferences-ShowOnlyMonospace": "Show Only Monospace Fonts",
    "EditorPreferences-FontSize": "Font Size",
    "EditorPreferences-NoFontsFound": "否 fonts found",
    "EditorPreferences-ShowLineNumbers": "Show Line Numbers",
    "EditorPreferences-SyntaxHighlighting": "Syntax Highlighting",
    "EditorPreferences-WordWrap": "Word Wrap",
    "EditorPreferences-TabSize": "Tab Size",
    "ToolbarLabels-Fetch": "Fetch",
    "TabsBar-NewTabTitle": "New Tab",
    "TabsBar-FocusViewIconTooltip": "Launchpad",
    "TabsBar-FocusViewTitle": "Launchpad",
    "TabsBar-NewTabDescription": "{0} + T",
    "TabsBar-ReleaseNotesTitle": "Release 否tes",
    "TabsBar-TabsList": "Tabs list ({0} + Shift + A)",
    "TabsBar-SearchTabs": "Search Tabs",
    "TabsBar-RepoManagementIconTooltip": "Repo Management",
    "TabsBar-Upgrade": "Upgrade",
    "TabsBar-StartAProTrial": "Start a Trial",
    "ReleaseNotesTab-LoadingReleaseNotes": "Loading Release 否tes",
    "PromptCreateFork": "Would you like to fork {0} on {1}?",
    "PromptDeletedFileConflict-KeepAncestor": "Keep Base 版本",
    "PromptDeletedFileConflict-KeepModified": "Keep Modified 版本",
    "PromptDeletedFileConflict-KeepNew": "Keep New 版本",
    "PromptDeletedFileConflict-Message": "{0} has been modified on {1}, but deleted on {2}.",
    "PromptDeletedFileConflict-NoBaseNoPairMessage": "GitKraken was unable to determine whether to keep {0}, would you like to keep it?",
    "PromptDeletedFileConflict-RemoveFile": "删除 The 文件",
    "PromptForCreds-EnterCredentialsForUrl": "Please enter your credentials for {0}: ",
    "PromptForCreds-InvalidCredentialsForUrl": "Invalid credentials for {0}. Please try again: ",
    "PromptForCreds-GpgPassphrase": "Enter your GPG passphrase",
    "PromptForCreds-EnterSSHPassphrase": "Enter passphrase for SSH key '{0}':",
    "PromptForCreds-EnterServiceSSHPassphrase": "Enter passphrase for {0} SSH key:",
    "PromptForCreds-EnterPasswordForUrlWithUsername": "Enter password for {0}:",
    "PromptForCreds-IncorrectSSHPassphrase": "Incorrect passphrase for SSH key '{0}'. Try again:",
    "PromptForCreds-IncorrectServiceSSHPassphrase": "Incorrect passphrase for {0} SSH key. Try again:",
    "PromptForCreds-UsernamePlaceholder": "Username",
    "PromptForCreds-PasswordPlaceholder": "Password",
    "PromptForCreds-PersonalAccessTokenPlaceholder": "Personal Access Token",
    "PromptForCreds-AppPasswordPlaceholder": "App Password",
    "PromptForCreds-UseUsernameAndPassword": "Use Username and Password",
    "PromptForCreds-UsePersonalAccessToken": "Use Personal Access Token",
    "PromptForCreds-UseAppPassword": "Use App Password",
    "PromptForCreds-LocksIcon": "Caps Lock Is Enabled",
    "PromptForCreds-PromptForCredsChoice": "To perform this action, please authenticate with {0}:",
    "PromptForCreds-InvalidLoginPromptForCredsChoice": "Authentication failed. To perform this action, please authenticate with {0}:",
    "PromptForCreds-PleaseLogInGeneric": "Please enter your credentials:",
    "PromptForCreds-InvalidLoginGeneric": "Authentication failed. Please enter your credentials:",
    "PromptForCreds-PleaseLogInToService": "Please enter your {0} credentials:",
    "PromptForCreds-InvalidLoginForService": "Authentication failed. Please enter your {0} credentials:",
    "PromptForCreds-ConnectIntegrationLink": "Connect the {0} integration",
    "PromptForCreds-EnterUsername": "What username should we use to connect you to {0}?",
    "PromptForCreds-EnterUsernameInvalid": "Username not accepted on {0}. Please try again:",
    "PromptForCreds-RememberMe": "Remember me",
    "PromptForCreds-TabDiedError": "The credentials prompt was forced to close.",
    "PromptForMerge-SaveAncestor": "You did not pick A or B. Would you like to save your ancestor?",
    "PromptForMerge-SaveMergeWithUnresolvedConflicts": "You have unresolved conflicts. How would you like to proceed?",
    "PromptForRebase-ConfirmDropXCommits": "Are you sure you want to drop {0} commits?",
    "PromptForRebase-ConfirmDropCommit": "Are you sure you want to drop 1 commit?",
    "PromptForPush-LocalIsBehindRemote": "'{0}' is behind '{1}'. Update your branch by doing a 拉取.",
    "PromptForPush-PushingReferenceRequiresForce": "推送ing this reference requires force, which is destructive and cannot be undone. Do you want to complete the push?",
    "PromptForPush-Warning": "WARNING!",
    "PromptForPush-RemoteChanged": "{0} '{1}' has changed on the remote since the last fetch.",
    "PromptForPush-ConfirmForcePush": "Force push is a destructive action and cannot be undone. Are you sure?",
    "PromptForPush-OAuthInvalid": "Your OAuth token for '{0}' is invalid. Would you like to refresh your OAuth credentials or try again without OAuth?",
    "PromptForRemoveWorktree-RemoveWorktreeRequiresForce": "Removing this worktree requires force, which is destructive and cannot be undone. Do you want to complete the removal?",
    "PromptForTagAnnotation-Message": "Message:",
    "PromptForTagAnnotation-Placeholder": "Annotation message",
    "PromptForDeleteRepo-Delete": "删除 repository",
    "PromptForDeleteRepo-Message": "Permanently delete repository {0}?",
    "PromptForLockWorktree-Message": "Message (optional):",
    "PromptForLockWorktree-Placeholder": "Lock message",
    "PromptIgnore-Message": "Ignore '{0}'?",
    "PromptIgnoreMultiple-Message": "Ignore {0} files?",
    "PromptIgnore-Ignore": "Ignore",
    "PromptIgnore-IgnoreAndUntrack": "Ignore and Stop Tracking",
    "PromptNewBranchAtRemote-BranchNamePlaceholder": "branch name",
    "PromptNewBranchAtRemote-CreateBranch": "创建 分支 Here",
    "PromptNewBranchAtRemote-OpenWorktree-CreateBranch": "打开 Worktree and create 分支 Here",
    "PromptNewBranchAtRemote-Message": "A local '{0}' already exists.",
    "PromptNewBranchAtRemote-OpenWorktree-Message": "A local '{0}' already exists in a worktree.",
    "PromptNewBranchAtRemote-ResetLocal": "Reset Local to Here",
    "PromptNewBranchAtRemote-OpenWorktree-ResetLocal": "打开 Worktree and reset Local to Here",
    "PromptForNewBranchName-InvalidBranchName": "The given branch name is not valid",
    "PromptForNewBranchName-Message": "Rename '{0}' to:",
    "PromptForNewBranchName-Placeholder": "new branch name",
    "PromptForAddKeyHost": "The authenticity of host '{0}' can't be established. Answering yes will permanently add '{0}' to the list of known hosts. Are you sure you want to continue?",
    "HostIdentificationChangedModal-warning": "WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!",
    "HostIdentificationChangedModal-fix": "Update known_hosts with new key",
    "HostIdentificationChangedModal-ExposureNote-line1": "NOTE: {0} rotated their RSA host key due to accidental exposure.",
    "HostIdentificationChangedModal-ExposureNote-line2": "See {0} for more info.",
    "HostIdentificationChangedModal-remote": "Remote: {0}",
    "CommitMessage-RemoteBranchCreated": "分支: created {0}",
    "GitHubActionForm-AddWorkflow": "创建 a Workflow",
    "GitHubActionForm-AddGitHubWorkflowButtonLabel": "创建 Workflow",
    "GitHubActionForm-SearchTemplates": "search templates",
    "GitHubActionForm-SelectTemplate": "Select a template",
    "GitHubActionForm-WorkflowFileName": "文件 name",
    "GitHubActionForm-WorkflowName": "Workflow name",
    "IssueTrackerForm-AddCardButtonLabel": "创建 Card",
    "IssueTrackerForm-AddIssueButtonLabel": "创建 Issue",
    "IssueTrackerForm-AddIssueButtonLabelDisabled": "You do not have permission to create issues for this project.",
    "IssueTrackerForm-AddIssueButtonLabelDisabledNoProject": "Please select a project to create issues.",
    "IssueTrackerForm-AddCardButtonLabelDisabled": "You do not have permission to create cards for this board.",
    "IssueTrackerForm-AddCardButtonLabelDisabledNoBoard": "Please select a board to create cards.",
    "IssueTrackerForm-AddIssueButtonLabelDisabledNoRepo": "Please select a repo to create issues.",
    "IssueTrackerForm-AddIssueButtonLabelDisabledForRepo": "You do not have permission to create issues for this repo.",
    "IssueTracker-RequiredFieldsNotice": "Required Field",
    "IssueTracker-MissingFieldToolTip": "Missing a required field",
    "TrelloForm-DelayWarning": "New cards may take up to a minute to display due to Trello API delays.",
    "RemoteForm-AddRemote": "添加 Remote",
    "RemoteForm-AddRemoteButtonLabel": "添加 Remote",
    "RemoteForm-AddUserRemote": "添加 remote: {0}",
    "RemoteForm-ConnectToService": "Connect to {0}",
    "RemoteForm-CreateRemoteAndPushLocalRefsButtonLabel": "创建 remote and push local refs",
    "RemoteForm-EditManually": "Edit remote",
    "RemoteForm-EditRemote": "Edit Remote",
    "RemoteForm-Fork": "Fork",
    "RemoteForm-ForkAndAddRemote": "Fork and 添加 Remote",
    "RemoteForm-ForkFound": "You have a fork of this repository on {0}.",
    "RemoteForm-ForkNotFound": "You have not yet forked {0} on {1}.",
    "RemoteForm-NoMatch": "否 Match",
    "RemoteForm-PrivateRepo": "Private Repo",
    "RemoteForm-PublicRepo": "Public Repo",
    "RemoteForm-PushURL": "推送 URL",
    "RemoteForm-PullURL": "拉取 URL",
    "RemoteForm-RefreshButtonTooltip": "Refresh",
    "RemoteForm-RemoteAccessTypeLabel": "Access",
    "RemoteForm-RemoteAccountLabel": "Account",
    "RemoteForm-RemoteDescriptionLabel": "Description",
    "RemoteForm-RemoteName": "Name",
    "RemoteForm-NewRemoteName": "Remote Name",
    "RemoteForm-NewRepoName": "仓库 Name",
    "RemoteForm-RemoteProjectLabel": "Project",
    "RemoteForm-SearchRemotes": "Search Remotes",
    "RemoteForm-TooManyServiceRemotesWarningNForks": "We are retrieving {0} forks associated with this repo. It may be faster to get the URL from {1}",
    "RemoteForm-TooManyServiceRemotesWarningManyForks": "We are retrieving a lot of forks associated with this repo. It may be faster to get the URL from {0}",
    "RemoteForm-Url": "URL",
    "RenameTabPrompt-MessageRepo": "仓库 alias",
    "RenameTabPrompt-MessageTab": "Tab alias",
    "RenameTabPrompt-SaveAliasBtn": "保存 alias",
    "RenameTabPrompt-ClearBtn": "Clear alias",
    "SetUpstreamPrompt-InvalidBranchName": "The given branch name is not valid",
    "SetUpstreamPrompt-SelectRemoteBranchMessage": "What remote/branch should \"{0}\" push to and pull from?",
    "ConfirmationMessage-AddRemoteAndCreateWorktree": "Do you want to add \"{0}\" as a remote and create a worktree for \"{1}\"?",
    "ConfirmationMessage-ClonePullRequestHead": "Do you want to add \"{0}\" as a remote and checkout \"{1}\"?",
    "ConfirmationMessage-ClonePullRequestHeadForFileChanges": "Do you want to add \"{0}\" as a remote to view file changes?",
    "ConfirmationMessage-DeleteAll": "删除 all",
    "ConfirmationMessage-DeleteFile": "This will delete the \"{0}\". Are you sure you want to continue?",
    "ConfirmationMessage-DeleteFiles": "This will delete the selected files. Are you sure you want to continue?",
    "ConfirmationMessage-DeleteGitFlowRef": "This branch is required for Gitflow, are you sure you want to delete \"{0}\"?",
    "ConfirmationMessage-DeleteRef": "This is a destructive operation, are you sure you want to delete \"{0}\"?",
    "ConfirmationMessage-Delete1LocalBranchInFolder": "This is a destructive operation, are you sure you want to delete 1 local branch in \"{0}\"?",
    "ConfirmationMessage-DeleteNLocalBranchesInFolder": "This is a destructive operation, are you sure you want to delete {0} local branches in \"{1}\"?",
    "ConfirmationMessage-DeleteNLocalBranches": "This is a destructive operation, are you sure you want to delete {0} local branches?",
    "ConfirmationMessage-DeleteNStashes": "This is a destructive operation, are you sure you want to delete {0} stashes?",
    "ConfirmationMessage-DeleteAllRefs": "This is a destructive operation, are you sure you want to delete \"{0}\" at this node, including remotes?",
    "ConfirmationMessage-DeleteStash": "This is a destructive operation, are you sure you want to delete stash with message \"{0}\"?",
    "ConfirmationMessage-DeleteTagFromRemote": "This is a destructive operation, are you sure you want to delete \"{0}\" from \"{1}\"?",
    "ConfirmationMessage-DeleteTagFromAllRemotes": "This is a destructive operation, are you sure you want to delete \"{0}\" from your remote repos?",
    "ConfirmationMessage-WouldYouLikeToDeleteTagFromAllRemotes": "The tag was deleted locally. Would you also like to delete tags named \"{0}\" from your remote repos?",
    "ConfirmationMessage-UnstageAndRemoveFile": "This will unstage and delete \"{0}\". Are you sure you want to continue?",
    "ConfirmationMessage-DiscardUnstagedChangesToFile": "This will permanently discard unstaged changes to \"{0}\". Are you sure you want to continue?",
    "ConfirmationMessage-DiscardUnstagedChangesToFiles": "This will permanently discard unstaged changes to the selected files. Are you sure you want to continue?",
    "ConfirmationMessage-ImmediatelyCommitCherryPick": "Do you want to immediately commit the cherry picked changes?",
    "ConfirmationMessage-ImmediatelyCommitPatch": "Do you want to immediately commit the patch?",
    "ConfirmationMessage-ImmediatelyCommitRevert": "Do you want to immediately commit the reverted changes?",
    "ConfirmationMessage-InitEmptyRepo": "仓库 '{0}' must have an initial commit to be opened. Do you want GitKraken Desktop to make a commit for you?",
    "ConfirmationMessage-MergeConflictStashAndCheckout": "合并 conflicts detected. To proceed with the merge, you must stash any changes and checkout branch {0}. Do you want to do this now?",
    "ConfirmationMessage-OpenWorktree": "Do you want to open Worktree \"{0}\" now?",
    "ConfirmationMessage-RebaseRequiresStashAndCheckout": "To start the rebase, you must stash any changes and checkout branch \"{0}\". Do you want to do this now?",
    "ConfirmationMessage-RebaseRequiresCheckout": "To start the rebase, you must checkout branch \"{0}\". Do you want to do this now?",
    "ConfirmationMessage-ResetAll": "This will discard all staged and unstaged changes, including new untracked files. Are you sure you want to discard all changes?",
    "ConfirmationMessage-ResetAllWithSubmodules": "There might be uncommitted changes in submodules that will be lost and will not be undoable. Do you want to continue?",
    "ConfirmationMessage-ResetFile": "This will discard all staged and unstaged changes to \"{0}\". Are you sure you want to discard all changes to the file?",
    "ConfirmationMessage-ResetFiles": "This will discard all staged and unstaged changes to the selected files. Are you sure you want to discard all selected changes?",
    "DateTime-UnknownDate": "unknown date",
    "DeepLink-AddRemote": "添加 Remote",
    "DeepLink-BranchLocationError": "Failed to find branch \"{0}\".",
    "DeepLink-ChooseRepo": "Choose another repo on disk",
    "DeepLink-CloneRepo": "Clone repo from URL",
    "DeepLink-CommitShouldBeInStateButIsNot": "Could not find commit in the graph",
    "DeepLink-ErrorTitle": "Could not open link",
    "DeepLink-DraftPatchApplyConfirm": "Apply Patch",
    "DeepLink-DraftPatchApplyPrompt": "Do you want to apply the linked patch?",
    "DeepLink-DraftPatchMissingBaseCommit": "Unable to find the commit the patch was based on ({0}). Ensure you have the latest copy of the branch \"{1}\". If still not found, it's possible history was rewritten and it no longer exists.",
    "DeepLink-Fetch": "Fetch",
    "DeepLink-FetchError": "Failed to fetch \"{0}\"",
    "DeepLink-FetchRecommendation": "Fetching is recommended to find the ref, would you like to fetch?",
    "DeepLink-FetchRecommendationX": "Fetching is recommended to find the ref, would you like to fetch {0}?",
    "DeepLink-InvalidURI": "URI was in an invalid format",
    "DeepLink-LocateNamedRepoLocally": "Locate {0}",
    "DeepLink-LocateRepoLocally": "Locate repository",
    "DeepLink-MultipleRepos": "GK tried to open the repo but found {0} duplicates. Choose which one you want to open.",
    "DeepLink-OpenRepo": "打开",
    "DeepLink-OpenExistingRepo": "打开 existing repo",
    "DeepLink-RemoteAddError": "Failed to add remote \"{0}\" to repository",
    "DeepLink-RemoteNotFound": "Couldn't find the remote from the URL, would you like to add it?",
    "DeepLink-RemoteXNotFound": "Couldn't find the remote {0}, would you like to add it?",
    "DeepLink-NamedRepoNotFound": "Couldn't find {0}. You can browse for or clone the repo.",
    "DeepLink-RepoNotFound": "Couldn't find a matching repository. You can browse for or clone the repo.",
    "DeepLink-RepoOpenedIncorrect": "Repo opened does not match the linked repository.",
    "DeepLink-ResolvedDeepLink": "External link to {0} resolved.",
    "DeepLink-ResolvingDeepLink": "Resolving external link to {0}",
    "DeepLink-SHALocationError": "Failed to find commit SHA",
    "DeepLink-TagLocationError": "Failed to find tag \"{0}\".",
    "DeepLink-Branch": "branch",
    "DeepLink-Commit": "commit",
    "DeepLink-Remote": "remote",
    "DeepLink-Tag": "tag",
    "DeepLink-Draft": "draft",
    "DeepLink-UnkownType": "link",
    "UndoRedo-InformationMissing": "Undo information is missing - it has likely been garbage collected.",
    "UndoRedo-RedoFailed": "Redo Failed",
    "UndoRedo-RedoSuccessful": "Redo 成功ful",
    "UndoRedo-UndoFailed": "Undo Failed",
    "UndoRedo-UndoSuccessful": "Undo 成功ful",
    "View-ActivityLog": "Activity Logs",
    "View-ActivityLog-HookTitle": "Hook: {0}",
    "View-AutoUpdate": "Choose Installer",
    "View-AutoUpdate-CheckingForUpdates": "Checking for updates",
    "View-AutoUpdate-Downloading": "Downloading update",
    "View-AutoUpdate-Downloaded": "Download completed",
    "View-AutoUpdate-SomethingWentWrong": "Something went wrong",
    "View-AutoUpdate-UpdateFailedToDownload": "Update failed to download",
    "View-KeyBindings": "Keyboard Shortcuts",
    "View-ToggleLeftPanel": "Toggle Left Panel",
    "View-ToggleDetailPanel": "Toggle 提交 Detail Panel",
    "View-ToggleTerminalPanel": "Toggle 终端 Panel",
    "View-ZoomDown": "Decrease Zoom",
    "View-ZoomReset": "Reset Zoom",
    "View-ZoomUp": "Increase Zoom",
    "GitKraken-Features": "GitKraken features",
    "NewTabView-RepositoriesSection": "Repositories",
    "NewTabView-RepositorySearch-Placeholder": "Search repositories",
    "NewTabView-ConnectIntegrations-Title": "Connect More Integrations",
    "NewTabView-ConnectIntegrations-Description": "Speed up your workflow and reduce context switching with powerful integrations for pull requests, issues, CI/CD, and more.",
    "NewTabView-ConnectIntegrations-Action": "Connect Integrations",
    "NewTabView-ReferFriend-Title": "Earn $20 for Every Referral",
    "NewTabView-ReferFriend-Description": "Know someone who'd love GitKraken? Share the productivity — and get $20 for each friend who signs up.",
    "NewTabView-ReferFriend-Action": "Refer a Friend",
    "NewTabView-AIFeatures-Title": "Boost Your Workflow with GitKraken AI",
    "NewTabView-AIFeatures-Description": "Let AI handle the busywork so you can stay focused on what matters. Use AI to explain commits, summarize pull requests, auto-generate commit messages, and resolve merge conflicts faster.",
    "NewTabView-AIFeatures-Action": "Explore AI Features",
    "NewTabView-ExploreDevTools-Title": "Using VS Code, Cursor, or the CLI?",
    "NewTabView-ExploreDevTools-Description": "Boost productivity with GitKraken's fully integrated tools across your dev environment.",
    "NewTabView-ExploreDevTools-Action": "Explore Dev Tools",
    "NewTabView-ExploreDevTools-Resources": "Resources",
    "NewTabView-ExploreDevTools-Resources-IntroTutorials": "Intro Tutorials",
    "NewTabView-ExploreDevTools-Resources-ReleaseNotes": "Release 否tes",
    "NewTabView-ExploreDevTools-Resources-Documentation": "Documentation",
    "KeyBindingFilter-Placeholder": "Filter shortcuts ({0} + F)",
    "KeyBindingHeader-RepoActions": "Repo Actions",
    "KeyBindingHeader-Navigation": "Navigation",
    "KeyBindingHeader-FuzzyFinder": "Command Palette",
    "KeyBindingHeader-UI": "UI",
    "KeyBinding-or": "or",
    "KeyBinding-CloseFileOrTab": "关闭 文件/Tab",
    "KeyBinding-CloseView": "关闭 View",
    "KeyBinding-Commit": "提交 (when in message input)",
    "KeyBinding-CommitWithStage": "Stage All + 提交 (when in message input)",
    "KeyBinding-FocusCommitMessage": "Focus commit message",
    "KeyBinding-CreateBranch": "创建 分支",
    "KeyBinding-SearchCommits": "Search commits",
    "KeyBinding-Fetch": "Fetch All",
    "KeyBinding-FullScreen": "Toggle Full Screen",
    "KeyBinding-OpenFileInExternalDiffOrMergeTool": "打开 Selected 文件 in External Diff/合并 Tool",
    "KeyBinding-FuzzyFinderHistory": "Search for a file to view its history / blame",
    "Keybinding-FuzzyFinderOpenRepo": "打开 Repo via Command Palette",
    "KeyBinding-SelectFirst": "Select First Item",
    "KeyBinding-SelectLast": "Select Last Item",
    "KeyBinding-SelectNext": "Select Next Item",
    "KeyBinding-SelectNextTopological": "Select Next Item in 分支",
    "KeyBinding-SelectPrev": "Select Previous Item",
    "KeyBinding-SelectPrevTopological": "Select Previous Item in 分支",
    "KeyBinding-SelectRight": "Select the Item to the Right",
    "KeyBinding-SelectLeft": "Select the Item to the Left",
    "KeyBinding-Stage": "Stage Current 文件",
    "KeyBinding-StageAll": "Stage All 文件s",
    "KeyBinding-ToggleFuzzyFinder": "Toggle Command Palette",
    "KeyBinding-OpenNewTab": "打开 a new tab",
    "KeyBinding-JumpToNextTab": "Jump to the next open tab",
    "KeyBinding-JumpToPreviousTab": "Jump to the previous open tab",
    "KeyBinding-JumpToSpecificTab": "Jump to a specific tab",
    "KeyBinding-Unstage": "Unstage Current 文件",
    "KeyBinding-UnstageAll": "Unstage All 文件s",
    "KeyBinding-OpenTabsList": "打开 tabs list",
    "Notification-AlreadyUpToDate": "Already Up-to-Date",
    "Notification-AppUpdateAvailable": "版本 {0} of GitKraken Desktop is now available.",
    "Notification-AnnotatedSuccessfully": "Annotated 成功fully",
    "Notification-AppleSiliconNativeAvailable-Desktop": "A new GitKraken Desktop is available with native Apple Silicon support!",
    "Notification-AppleSiliconNativeAvailable-Markdown": "A new GitKraken Desktop is available with native Apple Silicon support! Download the new Apple Silicon client here: https://www.gitkraken.com/download/mac-apple-silicon ",
    "Notification-BigSurSlowdownFinal-Desktop": "Performance issues with macOS Big Sur have been resolved!",
    "Notification-BigSurSlowdownFinal-Markdown": "Performance issues with macOS Big Sur have been resolved and no longer require running a terminal command to make GitKraken Desktop a partially-signed app!",
    "Notification-BranchToBranch": "{0} into {1}",
    "Notification-DesktopNotificationsEnabled": "Desktop notifications enabled",
    "Notification-RefToRemote": "{0} to {1}",
    "Notification-CloningToPath": "Cloning into {0}",
    "Notification-CheckoutSuccessful": "Checkout 成功ful",
    "Notification-CherrypickSuccessful": "Cherry pick 成功ful",
    "Notification-PatchApplySuccessful": "Patch Apply 成功ful",
    "Notification-CreatedSuccessfully": "创建d 成功fully",
    "Notification-DeletedBranch": "删除d: {0}",
    "Notification-DeletedNBranches": "删除d {0} branches",
    "Notification-GitExecutableReEnabled-Markdown": "We've re-enabled the **Git Executable** feature for GitKraken Desktop. We are soon going to remove the ability to opt out of this setting for many git functions, and instead use the Git executable directly. This will allow us to provide better compatibility and performance.\n\nPlease report any issues so we can fix them before removing the option. You can opt back out (temporarily) and report issues in *偏好设置 > Experimental*.",
    "Notification-GitExecutableReEnabled-Desktop": "We've re-enabled the Git Executable feature for GitKraken Desktop. We are soon going to remove the ability to opt out of this setting for many git functions...",
    "Notification-GitExecutableWindowsHooksFirstRun-Markdown": "We see you're using Git Hooks. Some advanced hooks may rely on features not included in GitKraken Desktop's bundled minimal Git install. You can select a full Git install for GitKraken Desktop to use from 偏好设置 > Experimental > Git Executable after downloading and installing Git from https://git-scm.com/download/win.",
    "Notification-GitExecutableWindowsHooksFirstRun-Desktop": "We see you're using Git Hooks. Some advanced hooks may rely on features not included in GitKraken Desktop's bundled minimal Git install...",
    "Notification-GitExecutableWindowsHooksFirstFailure-Markdown": "We see one of your hooks has failed. Some advanced hooks may rely on features not included in GitKraken Desktop's bundled minimal Git install. You can select a full Git install for GitKraken Desktop to use from 偏好设置 > Experimental > Git Executable after downloading and installing Git from https://git-scm.com/download/win.",
    "Notification-GitExecutableWindowsHooksFirstFailure-Desktop": "We see one of your hooks has failed. Some advanced hooks may rely on features not included in GitKraken Desktop's bundled minimal Git install...",
    "Notification-GpgCopyPublicKeySuccessfully": "Public GPG key copied successfully",
    "Notification-GpgKeyGenSuccess": "GPG Key 创建d 成功fully",
    "Notification-Macos1015Deprecation-Desktop": "GitKraken Desktop is dropping continued support for macOS 10.15",
    "Notification-Macos1015Deprecation-Markdown": "GitKraken Desktop is dropping continued support for macOS 10.15. GitKraken Desktop running on this version of macOS will no longer receive updates beyond 10.7.",
    "Notification-Merged": "合并d",
    "Notification-MergedSuccessfully": "合并d 成功fully",
    "Notification-PulledSuccessfully": "拉取ed 成功fully",
    "Notification-PushedSuccessfully": "推送ed 成功fully",
    "Notification-TeamWorkspaceCreated": "{0} created a new Team Workspace: ",
    "Notification-WorkspaceSharedWithTeam": "with team(s)",
    "Notification-RebaseSuccessful": "Rebase 成功ful",
    "Notification-RenameSuccessful": "Rename 成功ful",
    "Notification-RepoDeleteSuccessful": "仓库 Deletion 成功ful",
    "Notification-RevertSuccessful": "Revert 成功ful",
    "Notification-StashingUncommittedChanges": "Uncommitted Changes Stashed",
    "Notification-SubmoduleCreatedSuccessful": "Submodule 创建d",
    "Notification-SSHKeyBeingUsed": "Key 添加ed",
    "Notification-UpdateAvailable": "Update available: {0}",
    "Notification-ManageSSHKeysButton": "Manage SSH Keys for {0}",
    "NotificationMessage-AlreadyUpToDate": "否 merge necessary. 分支 {1} was not moved.",
    "NotificationMessage-RefToRef": "{0} to {1}",
    "NotificationMessage-RepoDeleteSuccessful": "仓库 {0} successfully deleted!",
    "NotificationMessage-RevertWasNoop": "However, the current branch already has all changes from the reverted commit.",
    "NotificationMessage-CherrypickWasNoop": "However, the current branch already has all changes from the cherry picked commit.",
    "NotificationMessage-PatchApplyWasNoop": "However, the current branch already has all changes from the patch.",
    "NotificationMessage-SSHKeyBeingUsed": "GitKraken Desktop will use this key to talk to {0}. The public key has been copied to your clipboard; please make sure it is registered on your {0} account.",
    "NotificationMessage-StashingUncommittedChanges": "There were uncommitted changes that have been stashed to prevent losing them.",
    "NotificationDesktop-XNewMessages": "You have {0} new notifications",
    "NotificationPreferences": "否tifications",
    "NotificationPreferences-Desktop": "Enable Desktop 否tifications",
    "NotificationPreferences-Desktop-Help": "Allow GitKraken to send desktop notifications.",
    "NotificationPreferences-Disconnected": "This setting cannot be modified while offline.",
    "NotificationPreferences-Error": "否tification settings received were not in a valid format",
    "NotificationPreferences-Marketing": "Receive Marketing 否tifications",
    "NotificationPreferences-Marketing-Help": "Receive marketing related notifications.",
    "NotificationPreferences-Marketing-Tooltip": "These notifications can be turned off with a paid subscription.",
    "NotificationMenu-CantSync": "Unable to sync notifications. Please check your internet connection or reload GitKraken Desktop.",
    "NotificationMenu-Notifications": "否tifications",
    "NotificationMenu-FiltersAll": "All",
    "NotificationMenu-FiltersRead": "Read",
    "NotificationMenu-FiltersUnread": "Unread",
    "NotificationMenu-SubMenu-MarkAsRead": "Mark all as read",
    "NotificationMenu-SubMenu-MarkAsUnread": "Mark all as unread",
    "NotificationMenu-SubMenu-Settings": "否tification 设置",
    "NotificationMenu-All-Empty": "You have no notifications",
    "NotificationMenu-Read-Empty": "You have no read notifications",
    "NotificationMenu-Unread-Empty": "You have no unread notifications",
    "NotificationMenu-WaitingForCloud": "It is taking longer than usual to receive notifications. Please try again later.",
    "NotificationUI-FeatureRequiresUpdate": "This feature requires an updated client.",
    "NotificationUI-DateAtTime": "{0} @ {1}",
    "NotificationUI-MarkAsRead": "Mark as read",
    "NotificationUI-MarkAsUnread": "Mark as unread",
    "NotificationUI-NotificationRequiresUpdate": "This notification requires an updated client.",
    "NotificationUI-RemoveNotification": "Remove notification",
    "NotificationUI-TimeToday": "Today",
    "NotificationUI-TimeYesterday": "是terday",
    "NotificationUI-UpdateNotAvailable": "This update is currently rolling out and will be available soon.",
    "NotificationUI-UpdateNow": "Update now",
    "OnboardingTip-toggle-with": "Toggle with {0}",
    "OnboardingTip-got-it": "Got it",
    "OrganizationMember-Admin": "Admin",
    "OrganizationMember-AlreadyMember": "{0} is already a member of this organization",
    "OrganizationMember-ApproveInvite": "Approve",
    "OrganizationMember-Approved": "Approved Invite for {0}",
    "OrganizationMember-DenyInvite": "Deny",
    "OrganizationMember-Denied": "Denied Invite for {0}",
    "OrganizationMember-Billing": "Billing Contact",
    "OrganizationMember-CannotAddSameEmailTwice": "Cannot add the same email twice",
    "OrganizationMember-AddCollaborators": "添加 collaborators from integrations or by email",
    "OrganizationMember-EmailsRequiredField": "User Emails is a required field",
    "OrganizationMember-EnterEmailAddresses": "Enter email addresses or select from suggested users",
    "OrganizationMember-Filter": "Search members by name, username, or email",
    "OrganizationMember-Invite": "Invite",
    "OrganizationMember-Invited": "Invited",
    "OrganizationMember-InviteSent": "Invite sent",
    "OrganizationMember-InviteMemberTitle": "Invite collaborators to your organization",
    "OrganizationMember-SharePatchTitle": "Share Cloud Patch",
    "OrganizationMember-ApproveOrDenyOnGKDotDev": "Approve or deny invitations on {0}",
    "OrganizationMember-InviteMember": "Invite Member",
    "OrganizationMember-InviteNMembers": "Invite {0} Members",
    "OrganizationMember-InvitationSuccessful": "User(s) invited",
    "OrganizationMember-LicenseNeeded": "You must purchase 1 additional license",
    "OrganizationMember-LicensesNeeded": "You must purchase {0} additional licenses",
    "OrganizationMember-MaxMembers": "You can only add up to {0} users at a time",
    "OrganizationMember-MaxMembersTrialPlural": "A trial organization allows a maximum of 50 members, you can only add up to {0} users",
    "OrganizationMember-MaxMembersTrialSingular": "A trial organization allows a maximum of 50 members, you can only add 1 user",
    "OrganizationMember-NotValidEmail": "{0} is not a valid email",
    "OrganizationMember-Role": "Role",
    "OrganizationMember-SuggestedMembers": "Suggested Members",
    "OrganizationMember-SuggestedMembersSubTitle": "Contributors to the {0} repository",
    "OrganizationMember-User": "User",
    "OrganizationMember-InvitingUsersWillAddXSeatsToYSubSingular": "Inviting these users will add 1 seat to your Gitkraken {0} subscription.",
    "OrganizationMember-InvitingUsersWillAddXSeatsToYSubPlural": "Inviting these users will add {0} seats to your Gitkraken {1} subscription.",
    "OrganizationMember-ApprovalRequiredForCloudPatchInvite": "Once approved by an admin, these users will get access to this cloud patch based on the rules in your organization.",
    "Organization-Members": "Members",
    "Organization-TeamMembers": "Team Members",
    "Organization-Teams": "Teams",
    "Organization-Settings": "设置",
    "Organization-SettingsSubtitle": "These settings are only applied for this organization",
    "Organization-SwitchOrganization": "Switch organization",
    "Organization-DeleteTeam": "删除 Team",
    "Organization-DeleteTeamWarningFinal": "This action cannot be undone",
    "Organization-DeleteTeamNamePlaceholder": "Name of the team",
    "Organization-DeleteTeamRequestAction": "Please type the name of your team {0} to confirm",
    "Organization-DeleteTeamWarningExplained": "THIS ACTION CANNOT BE UNDONE. This will permanently delete team {0}. Members may lose access to any Workspaces that are shared with this team.",
    "Organization-AddTeamTooltip": "创建 a new team",
    "Organization-CreateTeamModalButton": "创建 Team",
    "Organization-CreateTeamModalTitle": "Team Name",
    "Organization-CreateTeamModalPlaceholder": "Enter a team name",
    "Organization-UpgradeToAddTeamsTooltip": "Pro and trial accounts are limited to {0} team. Upgrade your subscription to add more teams",
    "Organization-TeamNameError": "Team Name may only contain alphanumeric characters, single hyphens or single spaces, and cannot begin or end with a hyphen",
    "Organization-GenericErrorTitle": "An 错误 Occurred",
    "Organization-PermissionErrorMessage": "You may have lost permission to perform this action.",
    "Organization-ConflictErrorMessage": "This action may have already been completed successfully and can't be done again.",
    "Organization-ServerErrorTitle": "An Unknown 错误 Occurred",
    "Organization-ServerErrorMessage": "Please try again later.",
    "Team-AreYouSureDelete": "Are you sure you want to DELETE this team?",
    "Team-DeleteTeam": "删除 Team",
    "TeamSettings-Label": "Team",
    "TeamSettings-DefaultTeamLabel": "Use this as the default for all repositories",
    "TeamSettings-SelectTeam": "Select a team for this repo",
    "TeamMember-Add": "添加 a Member",
    "TeamMember-AddMember": "添加 Member",
    "TeamMember-AddMembers": "添加 Members",
    "TeamMember-Members": "Members",
    "TeamMember-NoMembersAddedToTeam": "否 members have been added to this team",
    "TeamMember-NoMembersFound": "否 members found",
    "TeamMember-SelectToAdd": "Select a member to add",
    "TeamMember-OptedOut": "{0} has opted-out of sharing their WIP",
    "Trial-StartFreeGitKrakenTrial": "Start a Free GitKraken Trial",
    "Trial-TrialEndedModalHeader": "Select your plan to continue using GitKraken Desktop",
    "Trial-TrialEndedAdvancedFeature1": "Up to 500k AI tokens / week",
    "Trial-TrialEndedAdvancedFeature2": "Advanced AI features",
    "Trial-TrialEndedAdvancedFeature3": "Self-Hosted integrations",
    "Trial-TrialEndedAdvancedFeature4": "All features in Pro",
    "Trial-TrialEndedModalFooter": "See {0} to determine the best plan for you.",
    "Trial-TrialEndedProFeature1": "Up to 250k AI tokens / week",
    "Trial-TrialEndedProFeature2": "Full merge conflict resolution tool",
    "Trial-TrialEndedProFeature3": "Multiple profiles",
    "Trial-TrialEndedProFeature4": "Work on public & private repos",
    "Trial-TrialEndedCommunityFeature1": "Limited use on public repos only",
    "Trial-GitKrakenFeatures": "all of GitKraken's features",
    "Trial-GitKrakenSuite": "GitKraken's DevEx Platform",
    "Trial-TrialStartedModalContent1": "For the next {0} days, you will have access to all paid {1}! After your GitKraken trial expires, your account will default to the free plan.",
    "Trial-TrialStartedModalContent2": "添加 teammates for an extended trial!",
    "Trial-TrialStartedModalContent3": "Start a {0}-day multi-user trial when you create an organization and add your teammates. Everyone will have access to all of GitKraken's paid features until your multi-user trial ends.",
    "Trial-TrialStartedModalContent4": "Start a {0}-day multi-user trial for your organization when you invite your teammates. Everyone will have access to all of GitKraken's paid features until your multi-user trial ends.",
    "Trial-TrialStartedModalContent5": "You can also try out GitKraken's DevEx platform from our other tools:",
    "Trial-GitLens": "GitLens for VSCode",
    "Trial-GitKrakenCLI": "GitKraken CLI",
    "Trial-GitKrakenBrowserExtension": "GitKraken Browser Extension",
    "Trial-Feature1": "Work with privately-hosted and self-hosted remote repositories",
    "Trial-Feature2": "A powerful merge conflict editor",
    "Trial-Feature3": "Multiple profiles for work & personal use",
    "Trial-Feature4": "Integrations for self-hosted repos on GitHub Enterprise Server, GitLab Self-Managed, Bitbucket Data Center, and Azure DevOps",
    "Trial-Feature5": "创建 and edit issues on Jira, GitHub, GitLab, and Trello",
    "Trial-Feature6": "Share your {0} with your team",
    "Trial-SeeAllFeatures": "See all features on gitkraken.com",
    "Trial-TrialStartedCreateOrganization": "添加 teammates for an extended trial",
    "Trial-TrialStartedContinuePersonal": "Continue my {0} day trial",
    "Trial-TrialStartedModalTitle": "Your GitKraken Trial has been activated!",
    "Trial-AnyKindOfTrialEndedModalTitle": "Thank you for trying GitKraken Advanced",
    "Trial-UpgradeNow": "Upgrade 否w",
    "Trial-OrgTrialEndedDescriptionOwner": "Purchase a subscription to allow members of your organization to continue using these paid GitKraken features.",
    "Trial-OrgTrialEndedDescriptionUser": "Your multi-user trial has expired. Contact the organization owner to purchase a subscription and continue using these paid GitKraken features.",
    "Trial-NewTrialAvailable": "A new GitKraken trial is available",
    "Trial-TrialAvailableModalTitle": "A New GitKraken Trial is Available!",
    "Trial-TrialStartedModalTitle-YouHaveXDaysOfGKDPro": "You have {0} days of GitKraken Advanced 🙌",
    "Trial-TrialAvailableModalContent0": "Good news! You can get access to all paid {0} for another {1} days by starting a new trial!",
    "Trial-TrialAvailableModalContent1": "Your new trial also gives you access to all of our other products:",
    "Trial-TrialAvailableModalContent2": "If you choose not to start your new trial now, you will be able to start it from the status bar on the bottom of the application.",
    "Trial-TrialEndedModalTitle": "Sign up to access private repositories",
    "Trial-StartTrial": "Start Trial",
    "Trial-NotNow": "否t 否w",
    "Trial-NewTrialAvailableExtended": "A new GitKraken trial is available - Activate it now",
    "Trial-TrialStartedModal-WelcomeToAnEliteCrewOfDevelopers": "Welcome to an elite crew of developers that use GitKraken to simplify Git workflows, boost productivity, and build amazing things with their team.",
    "Trial-TrialStartedModal-InviteTeammateIfYouWantMoreDays": "Want {0} days? Get even more out of GitKraken when you {1}",
    "Trial-TrialStartedModal-InviteATeammate": "invite a teammate",
    "Error": "错误",
    "Error-AddExternalSSHKeyToServiceFailed": "添加 SSH Key failed",
    "Error-AmendFailed": "Amend failed",
    "Error-AnnotateTagFailed": "Annotate Tag Failed",
    "Error-AnotherOperationInProgress": "Another operation is already in progress.",
    "Error-ApplyingStashError": "错误 Applying Stash",
    "Error-CloneAnUnknownRepo": "Can't clone an unknown repo",
    "Error-CommitFailed": "提交 failed",
    "Error-CouldNotLoadAIModelsList": "Could not load the list of available AI models",
    "Error-SelectCommitFailed": "错误 Changing 提交 Selection",
    "Error-RetreiveFileContentsFailed": "错误 retrieving file contents",
    "Error-CreatingStashError": "错误 Creating Stash",
    "Error-BranchNameEmpty": "Must fill in branch name",
    "Error-BranchNameMayNotContainSpaces": "Spaces are not allowed in branch name",
    "Error-CheckoutFailed": "Checkout Failed",
    "Error-CheckoutFailed-Submodule": "Submodule {0} has changes that prevent checkout. 提交, stash, or discard your changes first",
    "Error-CheckoutFailed-Submodules": "{0} submodules have changes that prevent checkout. 提交, stash, or discard your changes first in:\n{1}",
    "Error-CherrypickFailed": "Cherry pick Failed",
    "Error-PatchApplyFailed": "Patch Apply Failed",
    "Error-AddSSHKeyToServiceFailed": "SSH key connection failed",
    "Error-TabChangeCancelled": "Tab change cancelled",
    "Error-CouldNotWriteToRepo": "Could not write the requested file(s) into the repo",
    "Error-CouldNotWriteReadmeAsRepoTabHasChanged": "Could not write the readme file because current repository tab has changed",
    "Error-CreateRefFailed": "Failed creating ref",
    "Error-CreateRemoteRepoAndCloneFailed": "Failed to create repository",
    "Error-CreateRemoteRepoFailed": "Failed to create repository",
    "Error-CreateWorktreeFailed": "Failed to create worktree",
    "Error-DefaultBranchNotFound": "Default branch not found",
    "Error-DeleteFileFailed": "删除 file at path failed: {0}.",
    "Error-DeleteFailedWithName": "删除 Failed: {0}",
    "Error-DeleteFailedWithNamesTagForRemote": "删除 Failed: {0} for {1}",
    "Error-DiscardSelectionFailed": "Discarding selection failed",
    "Error-DisconnectingServiceFailed": "Service disconnection failed",
    "Error-ExecutingRustSocketBridge": "Could not run rust-socket-bridge executable",
    "Error-ExecutingRustSocketBridgeDescription": "We failed to run rust-socket-bridge executable, which helps GitKraken work with Git and SSH. Check if your anti-virus software is blocking this application:\n{0}\n\nFalling back to old 否de Socket Bridge.",
    "Error-RemoveSSHKeyFromServiceFailed": "SSH key disconnection failed",
    "Error-SharedSettingsSaveFailure": "Failed to save shared settings",
    "Error-FailedToAddRemote": "Failed to add remote",
    "Error-FailedToRemoveRemote": "Failed to remove remote",
    "Error-FailedToUpdateRemote": "Failed to update remote",
    "Error-FailedToEditCloudPatch": "Failed to update Cloud Patch",
    "Error-FailedToResolveBlame": "Failed to resolve blame",
    "Error-FailedToOpenGkDotDev": "Failed to open GitKraken.dev",
    "Error-FailedToGenerateFileHistory": "Failed to generate file history",
    "Error-FetchFailedWithName": "Fetch failed for '{0}'",
    "Error-FetchAllPullRequestsFailed": "Fetching pull requests failed",
    "Error-GenerateSshKeyAndAddToServiceFailed": "SSH key creation failed",
    "Error-Generic": "An 错误 Occurred",
    "Error-GitConfigUpdate": "Unable to update git config",
    "Error-GitConfigSubmoduleUpdate": "Unable to update submodule git config",
    "Error-GitFlowFinishFeatureFailed": "Failed to finish feature '{0}'",
    "Error-GitFlowFinishHotfixFailed": "Failed to finish hotfix '{0}'",
    "Error-GitFlowFinishReleaseFailed": "Failed to finish release '{0}'",
    "Error-GitFlowStartFeatureFailed": "Failed to start feature '{0}'",
    "Error-GitFlowStartHotfixFailed": "Failed to start hotfix '{0}'",
    "Error-GitFlowStartReleaseFailed": "Failed to start release '{0}'",
    "Error-GitHubNoMorePrivateRepos": "否 private repositories available for this GitHub account",
    "Error-GitHubUsernamePasswordDeprecation": "GitKraken detected a GitHub password in one of your remotes or stored credentials. GitHub will remove username and password authentication for Git operations starting August 13th, 2021.",
    "Error-GitHubUsernamePasswordDeprecationLink": "View more information",
    "Error-GitHubUsernamePasswordDeprecationTitle": "Deprecation Warning",
    "Error-GitLabMergeRequestsDisabled": "合并 requests are disabled for this repository",
    "Error-GpgAnnotateFailedNotEnabled": "Cannot sign annotated tag because there is no GPG signing key configured",
    "Error-GpgBadPassphrase": "Bad passphrase",
    "Error-GpgCopyPublicKeyFailed": "Failed to copy public GPG key",
    "Error-GpgKeyGenFailed": "GPG Key Generation Failed",
    "Error-GpgKeyGenMissingNameOrEmail": "Unable to generate GPG key: Profile name and email required",
    "Error-GpgNoKeyConfigured": "否 GPG key configured",
    "Error-GpgNoPassphrase": "否 GPG passphrase given",
    "Error-GpgNoSmartCard": "否 GPG smartcard found",
    "Error-GpgNotFound": "GPG program not found",
    "Error-GpgNotSet": "GPG program not set",
    "Error-GpgSigningAborted": "否 passphrase given",
    "Error-GpgUnparseableSignature": "PGP Signature could not be parsed",
    "Error-GpgUnusableSecretKey": "The active GPG key was unusable and may have expired",
    "Error-HomePathNotFound": "Home path not found. Cannot add host keys.",
    "Error-HostIdentificationChanged": "Warning: remote host identification has changed!",
    "Error-InotifyLimitReached": "Inotify Limit 错误",
    "Error-InvalidPAT": "Your Personal Access Token for {0} was rejected. The token may have been revoked, or it may not have enough scopes.",
    "Error-InvalidSSLCert": "Invalid SSL Certificate",
    "Error-KeyAlreadyExistsOnAccount": "Key already exists on this account",
    "Error-LoadingIntegrationFailed": "{0} integration failed to initialize",
    "Error-LoadingActivityLogFailed": "An error occurred while trying to load this log.",
    "Error-LockWorktreeFailed": "Failed to lock worktree",
    "Error-LoginRedirect": "Encountered a redirect when attempting to retrieve user data - please add {0} to your network's whitelist",
    "Error-MaxRetryReached": "Maximum retry limit reached",
    "Error-MergeAbortFailed": "Abort 合并 Failed",
    "Error-MergeFailed": "合并 Failed",
    "Error-NoKeysFoundForHost": "否 keys found for host {0}",
    "Error-NeedUpgradedPermissions": "More {0} permissions required",
    "Error-OpenDiffToolFailed": "Failed to open diff tool",
    "Error-OpenRepoInExternalEditorFailed": "Failed to open repo in external editor",
    "Error-OpenRepoInExternalEditorNoRepo": "You must have a repository open to open it an external editor",
    "Error-OpenRepoInTerminalFailed": "Failed to open repo in terminal",
    "Error-PlinkNotFound": "Plink executable not found",
    "Error-PullFailed": "拉取 Failed",
    "Error-PushFailed": "推送 Failed",
    "Error-PushFailedNoRemote": "There are no remotes to push to, would you like to add one?",
    "Error-PullFailedNoRemote": "There are no remotes to pull from, would you like to add one?",
    "Error-FetchFailedNoRemote": "There are no remotes to fetch from, would you like to add one?",
    "Error-PushFailedWithName": "推送 Failed: {0}",
    "Error-PushUpdateReferenceFailed": "推送 failed on {0}: {1}",
    "Error-Marking-Read-State": "We were unable to update the read state of this notification. Please check your internet connection and try again",
    "Error-Marking-Read-State-Multiple": "We were unable to update the read state of one or more notifications. Please check your internet connection and try again",
    "Error-MissingAzureDevopsContributePermission": "Missing 'Contribute' permission for this remote",
    "Error-MissingAzureDevopsCreateBranchPermission": "Missing '创建分支' permission for this remote",
    "Error-MissingAzureDevopsForcePushPermission": "Missing 'Force推送' permission for this branch",
    "Error-AzureDevops404GetRepository": "Unable to find repository {0}/{1}",
    "Error-AzureDevops404GetProjects": "Unable to find projects",
    "Error-BitbucketServerUnauthorized": "Bitbucket Data Center: {0} did not accept the Personal Access Token",
    "Error-BitbucketServerForbidden": "Bitbucket Data Center: A request was rejected because you or your token has insufficient permissions",
    "Error-BitbucketServerUnknownErrorForResource": "Bitbucket Data Center: Received a {1} error for {0}. Response from server: {2}",
    "Error-BitbucketServerGeneric": "Bitbucket Data Center: {0}",
    "Error-RemoteRefusedToDelete": "推送 failed on {0}: remote branch cannot be deleted",
    "Error-PruneWorktreesFailed": "Failed to prune worktrees",
    "Error-PullRequestFailed": "Failed to create pull request",
    "Error-PullRequestHeadNotFound": "Private/删除d repository (access denied)",
    "Error-RebaseFailed": "Rebase Failed",
    "Error-RebaseAutoUnstashFailed": "Popping Auto Stashed Changes Failed",
    "Error-RebaseFailedFromFileLock": "Cannot modify one or more files. May be due to file permissions or the file(s) being used by another process. Unlock the file(s), abort rebase, then try again.",
    "Error-RebaseAbortFailed": "Abort Rebase Failed",
    "Error-RebaseSkipContinueFailed": "Rebase Skip/Continue Failed",
    "Error-RebaseContinueFailedFromUnstagedChanges": "You need to resolve conflicts and stage changes to continue with the rebase",
    "Error-RebaseAbortFailedFromFileLock": "Cannot abort rebase. May be due to file permissions or the file(s) being used by another process.",
    "Error-RebaseStoppedDueToEmptyCommitMessage": "提交 aborted during rebase due to empty commit message.",
    "Error-RebaseFailedDueToCherryPickBecameEmpty": "This patch has already been applied",
    "Error-RenameFailed": "Rename Failed",
    "Error-RenameNeedsLocalBranch": "A local branch must be checked out!",
    "Error-RemoveFailed": "Failed to remove files",
    "Error-RemoveWorktreeFailed": "Failed to remove worktree",
    "Error-ResetFailed": "Reset Failed",
    "Error-RepoAlreadyExists": "仓库 already exists",
    "Error-RepoAlreadyExistsOnAccount": "Repo already exists on this account",
    "Error-RepoDeleteFailed": "仓库 Deletion Failed",
    "Error-RevertFailed": "Revert Failed",
    "Error-SshNotFound": "SSH program not found",
    "Error-StageFilemodeFailed": "Stage filemode failed",
    "Error-StagePathsFailed": "Staging paths failed",
    "Error-StageSelectionFailed": "Staging selection failed",
    "Error-StashAmendFailed": "Amend stash failed",
    "Error-StashConflictingFiles": "Cannot stash conflicted files.",
    "Error-StashNoValidFiles": "Did not find valid files to stash.",
    "Error-Submodules-Create": "创建 Submodule Failed",
    "Error-Submodules-Delete": "删除 Submodule Failed",
    "Error-Submodules-Initialize": "Initialize Submodule Failed",
    "Error-Submodules-InitializeAll": "Initialize All Submodules Failed",
    "Error-Submodules-Reset": "Reset Submodule Failed",
    "Error-SyncingPreferences": "We were unable to sync this preference. Please check your internet connection and try again",
    "Error-UnlockWorktreeFailed": "Failed to unlock worktree",
    "Error-UnstageFilemodeFailed": "Unstaging filemode changes failed",
    "Error-UnstagePathsFailed": "Unstaging paths failed",
    "Error-UnstageSelectionFailed": "Unstaging selection failed",
    "Error-UpdateContentFailed": "Updating file contents failed",
    "Error-UpdateDiffFailed": "Updating diffs failed",
    "Error-UpdateInteractiveRebaseStepsFailed": "Updating rebase steps failed",
    "Error-UpdateLocalReposFailed": "Updating local repos failed",
    "Error-FailedToCreatePatch": "Failed to create patch",
    "Error-FailedToApplyPatch": "Failed to apply patch",
    "Error-PatchFileMalformed": "Patch file may be malformed",
    "Error-WorkdirHasNoChanges": "Working directory has no changes",
    "Error-ConflictingWorkDirChangesMessage": "Working directory contains opposing file creation and deletion. Please stage all changes and try again.",
    "Error-FailedToArchiveCodeSuggestionAccepted": "Failed to accept Code Suggestion",
    "Error-FailedToArchiveCodeSuggestionRejected": "Failed to reject Code Suggestion",
    "Error-FailedToFetchCloudPatches": "Failed to fetch Cloud Patches",
    "Error-FailedToFetchCodeSuggestions": "Failed to fetch Cloud Patches",
    "Error-FailedToRetrieveCloudPatch": "Failed to retrieve Cloud Patch",
    "Error-FailedToSetCloudPatchVisibility": "Failed to set Cloud Patch visibility",
    "Error-FailedToAddUserToCloudPatch": "Failed to add user to Cloud Patch",
    "Error-FailedToAddUsersToCloudPatch": "Failed to add users to Cloud Patch",
    "Error-FailedToRemoveUserFromCloudPatch": "Failed to remove user from Cloud Patch",
    "ErrorFallback-Message": "GitKraken Desktop encountered a fatal error. If you enabled bug reporting, this issue has been reported. If not, please consider sending a report.",
    "ErrorFallback-ReportError": "Contact Support",
    "ErrorFallback-RestartLabel": "Restart",
    "ErrorFallback-QuitLabel": "Quit",
    "ErrorMessage-BranchNameConflictsWithDirectory": "Could not create ref \"{0}\" because its name conflicts with an existing ref",
    "ErrorMessage-CannotApplyStashWhenFilesAreStaged": "Cannot apply stash while anything is staged. Stash, commit, or unstage first.",
    "ErrorMessage-CannotDeleteCheckedOutBranch": "Cannot delete currently checked out branch. Switch branches first.",
    "ErrorMessage-CommitAbortedDueToEmptyMessage": "提交 aborted due to empty commit message",
    "ErrorMessage-ExternalEditorFailedKnown": "Failed to open {0}: {1}",
    "ErrorMessage-ExternalEditorFailedUnknown": "Failed to open {0}: unknown error",
    "ErrorMessage-ExternalEditorDoesNotExist": "Failed to open {0}: file does not exist",
    "ErrorMessage-ExternalEditorNotExecutable": "Failed to open {0}: file is not executable",
    "ErrorMessage-ExternalEditorPermissionDenied": "Failed to open {0}: permission denied",
    "ErrorMessage-1ConflictPreventsCheckout": "1 conflict prevents checkout.\n提交, stash, or discard your changes first.",
    "ErrorMessage-NConflictsPreventCheckout": "{0} conflicts prevent checkout.\n提交, stash, or discard your changes first.",
    "ErrorMessage-1ConflictPreventsStashApplication": "1 conflict prevents stash application.",
    "ErrorMessage-NConflictsPreventStashApplication": "{0} conflicts prevent stash application.",
    "ErrorMessage-DiscardSelectionFailedWithReason": "Could not discard selection for {0} for the following reason: {1}",
    "ErrorMessage-InotifyLimitReached": "文件 watching is disabled for this repository. Please increase your inotify limit and reopen this repository.",
    "ErrorMessage-FileWatcherFailedToStart": "文件 watching failed to start for this repository.",
    "ErrorMessage-IncompatibleIndex": "Corrupt index or incompatible .gitconfig settings detected. Git 2.40.0+ includes some configuration options that GitKraken Desktop doesn't support (index.skipHash and feature.many文件s). Disable these options and either re-clone or run (NOTE: this will unstage your staged files) \"git reset --mixed\"",
    "ErrorMessage-InvalidSSLCert": "Could not complete the request due to potentially invalid SSL certification for {0}.",
    "ErrorMessage-InvalidSSLCopyToClipboard": "Copy error message to clipboard",
    "ErrorMessage-InvalidCommonNameSSLCert": "Received an CERT_COMMON_NAME_INVALID error for {0}. Your SSL certificate may be missing the proper Server Alternate Name (SAN).",
    "ErrorMessage-InvalidSshKey": "Configured SSH key is invalid. Please confirm that it is properly associated with your Git provider.",
    "ErrorMessage-SshKeyNotFound": "SSH Key not found. Please configure one first in 偏好设置",
    "ErrorMessage-SshKeyNotSupported": "Configured SSH key is in an invalid format. Please ensure that your key is valid and is an RSA-type key.",
    "ErrorMessage-SshKeyBadPermissions": "Permissions for \"{0}\" are too open, it is required that keys are NOT accessible by others. For example: \"chmod 0600 '{0}'\". This private key will be ignored.",
    "ErrorMessage-MergeConflicts": "There are merge conflicts that need to be resolved",
    "ErrorMessage-CannotOpenFileCompareToolForMultiSelectedFiles": "Multiple files are currently selected in the 提交 Panel",
    "ErrorMessage-CannotOpenFileCompareToolWithoutActiveFile": "否 file is selected in the 提交 Panel or open in the merge resolution panel",
    "ErrorMessage-CannotOpenFileCompareToolForMergedDiffs": "More than two commits are currently selected in the graph",
    "ErrorMessage-CannotOpenRepo": "Could not find a compatible repository at '{0}'.",
    "ErrorMessage-CannotOpenShallowRepo": "'{0}' cannot be opened because it is a shallow repo.",
    "ErrorMessage-DiffToolNotFound": "The configured diff tool was not found",
    "ErrorMessage-ExternalEditorNotFound": "The configured external editor was not found",
    "ErrorMessage-MergeToolNotFound": "The configured merge tool was not found",
    "ErrorMessage-FailedToLaunchDiffTool": "Could not find default diff tool \"{0}\" specified in git config.",
    "ErrorMessage-FailedToLaunchMergeTool": "Could not find default merge tool \"{0}\" specified in git config.",
    "ErrorMessage-GitHubEnterpriseTooOld": "Your instance of GitHub Enterprise Server is no longer supported by GitKraken. Please ask your network administrator to update your GitHub Enterprise Server.",
    "ErrorMessage-GitLabEnterpriseTooOldIssues": "Your instance of GitLab Self-Managed is no longer supported by GitKraken for issue tracking. Please ask your network administrator to update your GitLab self-hosted server.",
    "ErrorMessage-GitLabBadGateway": "Bad GitLab Issues Integration Gateway",
    "ErrorMessage-GitLabUnknown": "Unknown GitLab Issues Integration 错误",
    "ErrorMessage-InvalidScopes": "{0} has updated their scope requirements. Please refresh the integration to re-authenticate.",
    "ErrorMessage-InvalidRefreshToken": "Your {0} refresh token has expired, or is invalid. Please refresh the integration to re-authenticate.",
    "ErrorMessage-refreshIntegrationButton": "Refresh {0} integration",
    "ErrorMessage-reconnectIntegrationButton": "Reconnect {0} Integration",
    "ErrorMessage-NeedUpgradedPermissions": "GitKraken has even better integration with {0} and needs more permissions to continue.",
    "ErrorMessage-NeedUpgradedPermissionsButton": "Upgrade Permissions",
    "ErrorMessage-NoDiffToolSet": "There is no diff tool configured in your settings",
    "ErrorMessage-NoExternalEditorSet": "There is no external editor configured in your settings",
    "ErrorMessage-NoMergeToolSet": "There is no merge tool configured in your settings",
    "ErrorMessage-ErrorNotificationDeleteFailed": "Failed to delete the notification. Please check your internet connection and try again",
    "ErrorMessage-PullRequestRemoteNotFoundWithNameAndHostingService": "Could not get pull requests for '{0}' on {1}. Double-check your remote urls and make sure you have permission to access that repository.",
    "ErrorMessage-RateLimitExceededFor": "Rate limit exceeded for {0}",
    "ErrorMessage-RebaseConflicts": "There are rebase conflicts that need to be resolved",
    "ErrorMessage-RemoteAccessDenied": "Access denied. Make sure you have access to do that action on that remote and try again.",
    "ErrorMessage-ObjectNotFound": "Object not found while fetching {0}: this might indicate a local repository corruption.",
    "ErrorMessage-ChunkHeaderFailure": "Failed to write chunk header for {0}: this might indicate a file is too large.",
    "ErrorMessage-InvalidReferenceName": "Invalid reference name {0}",
    "ErrorMessage-SecureTransportError": "Secure Transport 错误 for {0}: this might indicate you're attempting to push too many files at once.",
    "ErrorMessage-RemoteAccessDeniedOrgWarning": "If {0} is an organization on {1}, you may need to request (or grant) GitKraken access to the organization.",
    "ErrorMessage-RemoteAccessDeniedOrgWarning2": "If this is a fork of another organization’s repository, that organization may also need to grant access.",
    "ErrorMessage-RemoteAccessDeniedButton": "Go to {0}",
    "ErrorMessage-RemoteRefDoesNotExistOnHostingServiceForPR": "The source and/or target of the pull request does not exist on the remote. Please fetch your remotes to update them, then push the missing branch.",
    "ErrorMessage-RemoteNotFoundWithName": "Could not connect to '{0}'. Double-check your remote url, then make sure you have access to do that action on that remote and try again.",
    "ErrorMessage-RemoteRefBehindRemote": "Your remote branch is out of date. Please fetch {0} before pushing.",
    "ErrorMessage-RenameRefToRefFailed": "Could not rename {0} to '{1}'",
    "ErrorMessage-RenameTargetAlreadyExists": "'{0}' already exists!",
    "ErrorMessage-RepoDeleteFailed": "仓库 {0} could not be deleted!",
    "ErrorMessage-RefreshFailed": "Refresh Failed",
    "ErrorMessage-ResetFailedWithReason": "Could not reset for the following reason: {0}",
    "ErrorMessage-WindowsShPathNotFound": "This repo has Git hooks. Using Git hooks on Windows requires sh.exe, but GitKraken Desktop couldn't find it.",
    "ErrorMessage-SomethingWentWrongAndRestartGK": "Something went wrong. Please try restarting GitKraken.",
    "ErrorMessage-StageFilemodeFailedWithReason": "Could not stage filemode for {0} for the following reason: {1}",
    "ErrorMessage-StagePathsFailedWithReason": "Could not stage paths for the following reason: {0}",
    "ErrorMessage-StageSelectionFailedWithReason": "Could not stage selection for {0} for the following reason: {1}",
    "ErrorMessage-TerminalCommandNotConfigured": "There is no external terminal configured in your settings. Would you like to configure your external terminal now?",
    "ErrorMessage-UnrecognizedAllowedTypes": "Unrecognized Allowed Types: {0}",
    "ErrorMessage-UnstageFilemodeFailedWithReason": "Could not unstage filemode for {0} for the following reason: {1}",
    "ErrorMessage-UnstagePathsFailedWithReason": "Could not unstage paths for the following reason: {0}",
    "ErrorMessage-UnstageSelectionFailedWithReason": "Could not unstage selection for {0} for the following reason: {1}",
    "ErrorMessage-UpdateDiffFailedWithReason": "Could not update diffs for the following reason: {0}",
    "ErrorMessage-UpstreamNotInFetchData": "{0} does not exist on {1}",
    "ErrorMessage-CouldNotSaveToken": "错误: Could not save token",
    "ErrorMessage-PleaseVerifyToken": "Please verify the token is correct and try again",
    "ErrorMessage-ReconnectPromptCanceled": "Reconnect service prompt canceled",
    "ErrorMessage-CouldNotGenerateDiffForShas": "Could not generate diff for patch",
    "ErrorMessage-FailedToCheckoutBranch": "Failed to checkout branch",
    "ErrorMessage-NoCommonAncestor": "否 common ancestor was found between the source ref and the target ref.",
    "ErrorMessage-FailedToGetCredentials": "错误 loading credentials",
    "ErrorMessage-PleaseCheckRemoteUrl": "Please make sure that the remote url matches the integration url",
    "ErrorMessage-FailedToSaveCloudPatch": "Failed to save Cloud Patch",
    "ErrorMessage-FailedToCreateCloudPatch": "Failed to create Cloud Patch",
    "ErrorMessage-CouldNotLocatePatch": "Could not locate patch",
    "ErrorMessage-GitExperimentalFeatureRequired": "The Git Experimental feature must be enabled to use this feature.",
    "ErrorMessage-MustBeSignedInToOpenCloudPatch": "You must be signed in to open a Cloud Patch",
    "ErrorMessage-FailedToOpenWorkspace": "Failed to open Workspace",
    "ErrorMessage-InvalidLink": "Invalid link",
    "ErrorMessage-InvalidCommitProvided": "Invalid commit provided",
    "ErrorMessage-NoParentsFoundForCommit": "否 parents found for commit '{0}'",
    "ErrorMessage-CloudPatchCommitsAreNonContiguous": "提交s are not adjacent",
    "ErrorMessage-IntegrationConnectFailed": "Failed to connect with integration",
    "ErrorMessage-MissingAzureOrgs": "Could not find any Azure DevOps organizations",
    "ErrorMessage-FailedToConnectX": "Failed to Connect {0}",
    "ErrorMessage-GitKrakenDoesNotHavePermissionToOrg": "GitKraken does not have permission to access your {0} organization. Update your organization settings and reconnect",
    "ErrorMessage-FailedCreateWorktreeFromLaunchpad": "Failed to create worktree from Launchpad",
    "ErrorMessage-FailedCreateWorktreeFromPullRequest": "Failed to create worktree from 拉取 Request",
    "ErrorMessage-XRefreshTokenExpired": "Your {0} refresh token has expired",
    "ErrorMessage-AI-NoAvailableProvider": "否 AI provider available.",
    "ErrorMessage-FailedToAcquireLock": "Failed to acquire shared settings lock.",
    "ErrorMessage-LockfileRemoved": "Shared settings lockfile removed while in use.",
    "ErrorMessage-UnknownFailure": "Unknown failure.",
    "FileSavePrompt-Detail": "Any unsaved changes will be discarded.",
    "FileSavePrompt-Message": "Do you want to save the changes you made to {0}?",
    "StartUpPromoModal-AccessWorkspacesFromAnywhere": "Access Workspaces from anywhere",
    "StartUpPromoModal-AllYourReposInOnePlace": "All your repos in one place",
    "StartUpPromoModal-CodeSuggestionsOnPRs": "Code Suggest for PRs",
    "StartUpPromoModal-DontShowAgain": "Don't show again",
    "StartUpPromoModal-ExecuteMultiRepoActions": "Execute multi-repo actions",
    "StartUpPromoModal-FilterByWorkspaceRepos": "Filter by Workspace repos",
    "StartUpPromoModal-FocusView": "Focus View is now Launchpad",
    "StartUpPromoModal-FullEditorControlInGitLens": "Full editor control in GitLens",
    "StartUpPromoModal-GroupReposWithWorkspaces": "Group repos with Workspaces",
    "StartUpPromoModal-LocalSyncedWorkspaces": "Local Synced Workspaces",
    "StartUpPromoModal-MakeSuggestionsInAnEditor": "Make suggestions in an editor",
    "StartUpPromoModal-ManageAllYourReposInOnePlace": "仓库 Management tab",
    "StartUpPromoModal-Page1Content1": "Use the new 仓库 Management tab to manage and navigate all of your repos.",
    "StartUpPromoModal-Page1Content2": "Quickly see which repo tabs you have open, and favorite local repositories that you use most.",
    "StartUpPromoModal-Page1Content3": "Use Workspaces to group your local and remote repositories for easy access and sharing.",
    "StartUpPromoModal-Page1Content4": "Local Synced Workspaces have replaced Project Directories, allowing Workspaces to be kept in sync with a local directory.",
    "StartUpPromoModal-Page2Content1": "See all Workspaces at once for better access and easier actions.",
    "StartUpPromoModal-Page2Content2": "Local Workspaces can also be accessed in GitLens or the GitKraken CLI. Cloud Workspaces are accessible in the new {0}.",
    "StartUpPromoModal-Page2Content3": "Run operations like clone, fetch, and pull across multiple repos at the same time.",
    "StartUpPromoModal-Page2Content4": "Cloud Workspaces can be shared with teammates for easy onboarding and to keep everyone in sync.",
    "StartUpPromoModal-Page3Content1": "拉取 Requests are now the default view to help you focus on merging work faster.",
    "StartUpPromoModal-Page3Content2": "Easily see PRs by status, and take action at any stage in the review process.",
    "StartUpPromoModal-Page3Content3": "Filter your Launchpad by Cloud Workspace to focus on different groups of repos.",
    "StartUpPromoModal-Page3Content4": "Start with the PRs and issues most important to you, and zoom out to see everything your team is working on.",
    "StartUpPromoModal-Page4Content1": "From 拉取 Requests in the Left Panel or the detailed 拉取 Request View, enter review mode to review the diff for each file in a PR.",
    "StartUpPromoModal-Page4Content2": "Edit files in GitKraken Desktop, or switch to GitLens in VS Code, for a more flexible and powerful way to suggest changes to a PR, instead of comment boxes in GitHub.",
    "StartUpPromoModal-Page5Content1": "While reviewing a GitHub PR in GitKraken Desktop, edit files to suggest changes and send them to the PR to be reviewed and applied.",
    "StartUpPromoModal-Page5Content2": "Edit files in GitLens in VS Code to get the full editor experience when suggesting changes.",
    "StartUpPromoModal-Page5Content3": "PRs with Code Suggestions will be displayed in the Changes Requested section of Launchpad.",
    "StartUpPromoModal-Page5Content4": "Code Suggestions can also be reviewed and applied from {0} - perfect for teammates who don't use GitKraken Desktop.",
    "StartUpPromoModal-PrioritizingCodeReview": "Prioritizing code review",
    "StartUpPromoModal-ReviewMode": "Review Mode",
    "StartUpPromoModal-ReviewPRsDirectlyInGitKrakenDesktop": "Review PRs directly in GitKraken Desktop",
    "StartUpPromoModal-ReviewSuggestionsInGitKrakenDev": "Review suggestions in {0}",
    "StartUpPromoModal-ShareCloudWorkspaces": "Share Cloud Workspaces",
    "StartUpPromoModal-SuggestChangesToPRs": "Code Suggest",
    "StartUpPromoModal-TakeActionOnTheMostCriticalPRs": "Take action on the most critical PRs",
    "StartUpPromoModal-TeamMode": "Team mode",
    "StartUpPromoModal-TrackSuggestedChangesInFocus": "Track suggestions in Launchpad",
    "StartUpPromoModal-UpdatesToWorkspaces": "Updates to Workspaces",
    "StartUpPromoModal-ViewAndNavigateOpenReposAndFavorites": "View open repos and save favorites",
    "StartUpPromoModal-WelcomeToGitKraken10": "Welcome to GitKraken Desktop 10",
    "StartUpPromoModal-WorkspacesAreNowPartOfRepoManagement": "Workspaces are now part of 仓库 Management",
    "CheckoutError-CloseDetailPanel": "To checkout, please save your changes and try again.",
    "MergeError-CloseDetailPanel": "To merge, please save your changes and try again.",
    "PullError-CloseDetailPanel": "To pull, please save your changes and try again.",
    "RebaseError-CloseDetailPanel": "To rebase, please save your changes and try again.",
    "RebaseAbortError-CloseDetailPanel": "To abort the rebase, please save your changes and try again.",
    "RebaseContinueError-CloseDetailPanel": "To continue the rebase, please save your changes and try again.",
    "CloseRepoError-CloseDetailPanel": "To close the repo, please save your changes and try again.",
    "DropStashError-CloseDetailPanel": "To drop a stash, please save your changes and try again.",
    "CreateStashError-CloseDetailPanel": "To stash, please save your changes and try again.",
    "ApplyStashError-CloseDetailPanel": "To apply a stash, please save your changes and try again.",
    "TryUndoError-CloseDetailPanel": "To try to undo, please save your changes and try again.",
    "TryRedoError-CloseDetailPanel": "To try to redo, please save your changes and try again.",
    "Error-CloseDetailPanel": "Please save your changes and try again.",
    "Editor-OverwriteContentsOnDiskQuestion": "The file has been modified outside of GitKraken. Do you want to overwrite the file?",
    "Editor-OverwriteContentsOnDiskOrDiscardQuestion": "The file has been modified outside of GitKraken. Do you want to discard your changes, or overwrite the file?",
    "Editor-OverwriteContentsOnDisk": "保存 and overwrite",
    "Editor-DiscardChanges": "Discard these changes",
    "ExternalEditor-WarnExcessiveRepositoriesToOpen": "GitKraken Desktop will open {0} repositories in your external editor. Are you sure you want to continue?",
    "ExternalEditor-OpenRepositories": "打开 Repositories",
    "ExternalEditor-BrowseForEditorPath": "Select an editor executable to use",
    "SaveAndStageEditorChanges-Message": "Do you want to save your changes before staging, or only stage what's already saved to the disk?",
    "SaveAndStageEditorChanges-SaveAndStage": "保存 and stage",
    "SaveAndStageEditorChanges-StageSavedChangesOnly": "Stage saved changes only",
    "CreateFork-ForkSuccessfullyCreated": "Fork successfully created on {0}",
    "CreateTrialAndInviteUsersError-Title": "Failed to create trial org",
    "CreateTrialOrgAndInviteUsers-Successful": "The trial org and user(s) invitation was successful",
    "CreateTrialOrgAndInviteUsers-Error": "Failed to create organization and invite user to it",
    "CreateTrialOrgAndInviteUsers-AddOneUserStartTrial": "Invite 1 user and start our trial",
    "CreateTrialOrgAndInviteUsers-AddNUsersStartTrial": "Invite {0} users and start our trial",
    "TeamVisibility-LoadingTeamsPlaceholder": "Fetching teams...",
    "TeamVisibility-NoMatch": "否 Match",
    "TeamVisibility-NoTeamsMessage": "Teams in GitKraken allow you to collaborate more effectively with team members and identify merge conflicts before they happen. {0}.",
    "TeamVisibility-NoTeamsLinkText": "创建 a team",
    "TeamVisibility-OtherFilePotentialConflicts": "Potential conflicts: you also have changes on this file",
    "TeamVisibility-SelectPlaceholder": "Select a team",
    "TeamVisibility-SetActivityStatus": "Set my status",
    "TeamVisibility-Status": "Status: {0}",
    "TeamVisibility-StatusActive": "Active",
    "TeamVisibility-StatusInactive": "Away",
    "TeamVisibility-FreeUnavailableMessage": "Teams in GitKraken allow you to collaborate more effectively with team members and identify merge conflicts before they happen. Upgrade to a Pro subscription, or join an organization already using GitKraken Teams to get started.",
    "TeamVisibility-FreeUnavailableButtonLabel": "View upgrade options",
    "TeamVisibility-UnregisteredUnavailableMessage": "Teams in GitKraken allow you to collaborate more effectively with team members and identify merge conflicts before they happen. Start a free trial to get started.",
    "TeamVisibility-YourFileOnePotentialConflict": "Potential conflicts: {0} also has changes on this file",
    "TeamVisibility-YourFileMultiplePotentialConflicts": "Potential conflicts: multiple members also have changes on this file",
    "IntegrationView-AddCommentSubmitLabel": "添加 Comment",
    "IntegrationView-AddCommentPlaceholder": "添加 a comment",
    "IntegrationView-AddDescriptionPlaceholder": "添加 a description",
    "IntegrationView-AddRemote": "是, 添加 Remote",
    "IntegrationView-AddRemotePrompt": "Do you want to add \"{0}\" as a remote?",
    "IntegrationView-Assignee": "Assignee",
    "IntegrationView-Assignees": "Assignees",
    "IntegrationView-ClearAssignee": "Clear assignee",
    "IntegrationView-ClearAssignees": "Clear assignees",
    "IntegrationView-ClearLabels": "Clear labels",
    "IntegrationView-ClearMilestone": "Clear milestone",
    "IntegrationView-Description": "Description",
    "IntegrationView-EditDetail": "Edit",
    "IntegrationView-Labels": "Labels",
    "IntegrationView-Milestone": "Milestone",
    "IntegrationView-MilestoneDueDate": "Due {0}",
    "IntegrationView-Milestones": "Milestones",
    "IntegrationView-NoMatch": "否 Match",
    "IntegrationView-Refresh": "Refresh",
    "IntegrationView-SelectPlaceholder": "Select ...",
    "IntegrationView-UnknownUser": "unknown user",
    "IntegrationView-BranchLabelTooltipWithRemote": "Click to view. Double-click to checkout.",
    "IntegrationView-BranchLabelTooltipWithoutRemote": "Double-click to checkout.",
    "IntegrationView-CouldNotFindRepo": "Could not locate repository",
    "IntegrationViewCommentMenu-QuoteReply": "Quote reply",
    "IntegrationViewError-AssigneesEditFailed": "Failed to edit assignees",
    "IntegrationViewError-DescriptionEditFailed": "Failed to update description",
    "IntegrationViewError-LabelsEditFailed": "Failed to edit labels",
    "IntegrationViewError-MilestonesEditFailed": "Failed to edit milestones",
    "IntegrationViewError-ReviewersEditFailed": "Failed to edit reviewers",
    "IntegrationViewError-TitleEditFailed": "Failed to update title",
    "IntegrationView-GitHubTriagePermissionMessage": "GitHub's API doesn't allow triage users to edit.",
    "PullRequestView-AddCommitSummary": "添加 a commit summary",
    "PullRequestView-AddCommitDescription": "添加 a commit description",
    "PullRequestView-And": "and",
    "PullRequestView-Approve": "Approve",
    "PullRequestView-Approved": "approved",
    "PullRequestView-ApproveSubText": "Submit feedback and approve merging these changes.",
    "PullRequestView-BuildStatus": "Build Status",
    "PullRequestView-ClearReviewer": "Clear reviewer",
    "PullRequestView-ClearReviewers": "Clear reviewers",
    "PullRequestView-Closed": "关闭d with unmerged commits",
    "PullRequestView-CodeCommentHide": "Hide",
    "PullRequestView-CodeCommentHideResolved": "Hide Resolved",
    "PullRequestView-CodeCommentOutdated": "Outdated",
    "PullRequestView-CodeCommentShow": "Show",
    "PullRequestView-CodeCommentShowResolved": "Show Resolved",
    "PullRequestView-CodeSuggestions": "Code Suggestions",
    "PullRequestView-Comment": "Comment",
    "PullRequestView-Commented": "commented",
    "PullRequestView-CommentPending": "Pending",
    "PullRequestView-CommentSubText": "Submit general feedback without explicit approval.",
    "PullRequestView-ConfirmX": "确认 {0}",
    "PullRequestView-ContinuousIntegrationAllFailed": "All checks have failed",
    "PullRequestView-ContinuousIntegrationAllPassed": "All checks have passed",
    "PullRequestView-ContinuousIntegrationCheck": "{0} check",
    "PullRequestView-ContinuousIntegrationChecks": "{0} checks",
    "PullRequestView-ContinuousIntegrationSomeFailed": "Some checks were not successful",
    "PullRequestView-ContinuousIntegrationSomePending": "Some checks haven't completed yet",
    "PullRequestView-ContinuousIntegrationXFailed": "{0} failed",
    "PullRequestView-ContinuousIntegrationXSuccessful": "{0} successful",
    "PullRequestView-ContinuousIntegrationXPending": "{0} pending",
    "PullRequestView-CopyPullRequestLink": "Copy pull request link to clipboard.",
    "PullRequestView-DeleteBranch": "删除 branch",
    "PullRequestView-DeleteLocalRefs": "删除 local branch",
    "PullRequestView-FileChanged": "1 file changed",
    "PullRequestView-FilesChangedX": "{0} files changed",
    "PullRequestView-FilesChangedNotFound": "文件s changed not found",
    "PullRequestView-FinishReview": "Finish Review",
    "PullRequestView-FinishYourReview": "Finish your review",
    "PullRequestView-GitHub": "GitHub",
    "PullRequestView-Merge": "合并 拉取 Request",
    "PullRequestView-MergeSuccessfulSubtextThe": "The",
    "PullRequestView-MergeSuccessfulSubtext": "branch can be safely deleted.",
    "PullRequestView-MergeSuccessful": "拉取 request successfully merged and closed",
    "PullRequestView-OpenPullRequestInBrowser": "打开 pull request in browser",
    "PullRequestView-Participants": "Participants",
    "PullRequestView-PendingReviewComment": "1 pending comment",
    "PullRequestView-PullRequest": "拉取 Request",
    "PullRequestView-Pending": "started a review",
    "PullRequestView-Reply": "Reply",
    "PullRequestView-ReplyDisabledDueToPendingReview": "Finish pending review to reply to this comment",
    "PullRequestView-RepoOutOfSync-BaseNotFound": "拉取 request base branch is not found locally. Local repo is most likely out of sync with remote (try fetching).",
    "PullRequestView-RepoOutOfSync-HeadNotFound": "拉取 request head branch is not found locally. Local repo is most likely out of sync with remote (try fetching).",
    "PullRequestView-RepoOutOfSync-BaseDifferent": "拉取 request base branch is different from remote. Local repo is most likely out of sync with remote (try fetching).",
    "PullRequestView-RepoOutOfSync-HeadDifferent": "拉取 request head branch is different from remote. Local repo is most likely out of sync with remote (try fetching).",
    "PullRequestView-ReRequestReviewTip": "Re-request review",
    "PullRequestView-RequestedChanges": "requested changes",
    "PullRequestView-RequestChanges": "Request Changes",
    "PullRequestView-ReviewApprovedChanges": "Changes Approved",
    "PullRequestView-ReviewApproving": "{0} approving",
    "PullRequestView-ReviewChangesRequested": "Changes Requested",
    "PullRequestView-ReviewDismissed": "Dismissed",
    "PullRequestView-ReviewPending": "{0} pending",
    "PullRequestView-ReviewPendingReview": "Review Requested",
    "PullRequestView-ReviewRequestedChanges": "{0} requested changes",
    "PullRequestView-ReviewReview": "{0} review",
    "PullRequestView-ReviewReviews": "{0} reviews",
    "PullRequestView-RequestChangesSubText": "Submit feedback that must be addressed before merging.",
    "PullRequestView-SubmitAReview": "Submit a Review",
    "PullRequestView-Reviewed": "reviewed",
    "PullRequestView-Reviewers": "Reviewers",
    "PullRequestView-SubmitReview": "Submit Review",
    "PullRequestView-ReviewCodeSuggestChanges": "Review Code and Suggest Changes",
    "PullRequestView-ReviewCodeSuggestChangesContextMenu": "Review code && suggest changes",
    "PullRequestView-ViewOnlyPermissionMessage": "You do not have permission to edit this pull request.",
    "PullRequestView-WaitingForAReviewFromX": "Waiting for review from {0}",
    "PullRequestView-WikiRepoMessage": "拉取 requests are not supported for wiki repositories.",
    "PullRequestView-XApproved": "{0} approved",
    "PullRequestView-XCommented": "{0} left comments",
    "PullRequestView-XPendingReviewComments": "{0} pending comments",
    "PullRequestView-XRequestedChanges": "{0} requested changes",
    "PullRequestViewFilesError-CouldNotFindAncestorCommit": "Failed to find shared ancestor commit for this pull request.",
    "PullRequestViewFilesError-CouldNotFindBaseCommit": "Failed to find base commit for this pull request.",
    "PullRequestViewFilesError-CouldNotFindHeadCommit": "Failed to find head commit for this pull request. Ensure this remote is not hidden, or try increasing the number of commits visible in the graph in 偏好设置 > General.",
    "PullRequestViewFilesError-MissingShaToViewFileChanges": "Failed to find shas for this pull request.",
    "PullRequestViewFilesError-NoAncestorCommit": "Failed to find a shared commit between the head and base of this pull request.",
    "PullRequestViewMergeabilitySection-Blocked": "Merging is blocked",
    "PullRequestViewMergeabilitySection-Conflicts": "This branch has conflicts that must be resolved",
    "PullRequestViewMergeabilitySection-NoConflicts": "This branch has no conflicts with the base branch",
    "PullRequestViewMergeabilitySection-NoPermission": "Only those with write access can merge pull requests.",
    "PullRequestViewMergeabilitySection-Draft": "This pull request is still a work in progress",
    "PullRequestViewMergeabilitySection-DraftSubText": "Draft pull requests cannot be merged.",
    "PullRequestViewMergeForm-ChooseEmail": "Choose which email to associate with this merge",
    "PullRequestViewMergeForm-Merge": "合并",
    "PullRequestViewMergeForm-MergeDetails": "All commits from this branch will be added to the base branch via a merge commit.",
    "PullRequestViewMergeForm-MergeHeader": "创建 a merge commit",
    "PullRequestViewMergeForm-NotEnabled": "否t enabled for this repository",
    "PullRequestViewMergeForm-RebaseDetails": "The commits from this branch will be rebased and added to the base branch.",
    "PullRequestViewMergeForm-RebaseHeader": "Rebase and merge",
    "PullRequestViewMergeForm-SquashDetails": "The commits from this branch will be added to the base branch.",
    "PullRequestViewMergeForm-SquashHeader": "Squash and merge",
    "PullRequestViewMergeForm-UseDefaultEmail": "Use default email",
    "PullRequestViewMergeForm-UseDefaultGithubEmail": "Use default GitHub email",
    "PullRequestViewError-DeletingBranch": "Failed to delete branch.",
    "PullRequestViewError-FailedToFindPullRequest": "Failed to find pull request on {0}.",
    "PullRequestViewError-FailedToFindRepository": "Failed to find repository on {0}.",
    "PullRequestViewError-FetchingCommentsAndReviewsFailed": "Failed to fetch comments and reviews.",
    "PullRequestViewError-FetchingRemoteMetadataFailed": "Failed to fetch remote metadata.",
    "PullRequestViewError-PollingDataFailed": "Failed to fetch pull request data.",
    "PullRequestViewError-MergingPullRequestFailed": "Failed to merge pull request.",
    "PullRequestViewError-NoCommentParentIdFound": "Failed to find original comment to reply to.",
    "PullRequestViewError-NoCommentReturned": "否 comment returned from provider.",
    "PullRequestViewError-NoNodeId": "拉取 request does not have a node id.",
    "PullRequestViewError-NoReviewId": "拉取 request review does not have a node id.",
    "PullRequestViewError-NoRefsFound": "Failed to find branches associated with this pull request.",
    "PullRequestViewError-PostingComment": "Failed to post comment.",
    "PullRequestViewError-RenderingDiff": "Failed to render diff.",
    "PullRequestViewError-ReplyingToComment": "Failed to reply to comment.",
    "PullRequestViewError-AddReviewWithPendingReview": "Pending review in progress. Please review pending comments before trying again.",
    "PullRequestViewError-AddReplyWithPendingReview": "Pending review in progress. Please finish review before adding replies.",
    "PullRequestViewError-SubmittingReview": "Failed to submit review.",
    "PullRequestViewError-ViewingFileChanges": "Failed to view file changes.",
    "PullRequestViewError-MergingPullRequestUnverifiedEmail": "The email {0} is not verified on {1}. Use a {1} verified email in your GitKraken profile or add this email to your {1} account.",
    "PullRequestViewError-TryUsingDefaultEmail": "You may be using a private email. Try using your default email.",
    "PullRequestViewDisabled-AuthorCantApprove": "拉取 request authors can't approve their own pull request.",
    "PullRequestViewDisabled-AuthorCantRequestChanges": "拉取 request authors can't request changes on their own pull request.",
    "Issues": "Issues",
    "IssueTracker": "Issue Tracker",
    "IssueTracker-Card": "Card",
    "IssueTracker-Issue": "Issue",
    "IssueTracker-CancelLabel": "取消",
    "IssueTracker-ConfirmDefaultIssueTrackerType": "Do you want to set {0} as the default issue tracker type? (this can be changed in 偏好设置)",
    "IssueTracker-Connected": "connected",
    "IssueTracker-Connect": "connect",
    "IssueTracker-CreateAFilter": "创建 a Filter",
    "IssueTracker-CreateBranchForCard": "创建 a 分支 for This Card",
    "IssueTracker-CreateBranchForIssue": "创建 a 分支 for This Issue",
    "IssueTracker-DefaultIssueTrackerTypeLabel": "Use this as the default for all repositories",
    "IssueTracker-GitHub": "GitHub",
    "IssueTracker-GitHubEnterprise": "GitHub Enterprise Server",
    "IssueTracker-GitHubNoValidRemotes": "To use GitHub issues, add a remote repo with issues enabled.",
    "IssueTracker-GitLab": "GitLab",
    "IssueTracker-GitLabSelfManaged": "GitLab Self-Managed",
    "IssueTracker-IssueTracker": "Issue tracker",
    "IssueTracker-Jira": "Jira",
    "IssueTracker-JiraCloud": "Jira Cloud",
    "IssueTracker-JiraServer": "Jira Data Center",
    "IssueTracker-LoadingBoardsPlaceholder": "Fetching boards...",
    "IssueTracker-LoadingProjectsPlaceholder": "Fetching projects...",
    "IssueTracker-LoadingRemotesPlaceholder": "Fetching repos...",
    "IssueTracker-Trello": "Trello",
    "IssueTracker-MaximumIssues": "Filter maximum is {0} issues",
    "IssueTracker-MaximumIssuesWithoutSpecificLimit": "Filter matches too many issues to list them all",
    "IssueTracker-MaximumCards": "Filter maximum is {0} cards",
    "IssueTracker-NoLabel": "否",
    "IssueTracker-None": "否ne",
    "IssueTracker-RefreshCards": "Refresh Cards",
    "IssueTracker-RefreshIssues": "Refresh Issues",
    "IssueTracker-RemoveFilterLabel": "Remove",
    "IssueTracker-RemoveFilterPrompt": "Do you want to remove the \"{0}\" filter?",
    "IssueTracker-SelectATracker": "Select an issue tracker for this repo:",
    "IssueTracker-SelectBoardToCreateFilter": "Select a board to create a filter",
    "IssueTracker-SelectProjectToCreateFilter": "Select a project to create a filter",
    "IssueTracker-SelectRepoToCreateFilter": "Select a repository to create a filter",
    "IssueTracker-YesLabel": "是",
    "IssueTrackerSearch-FilteredCards": "Search filtered cards",
    "IssueTrackerSearch-FilteredIssues": "Search filtered issues",
    "IssueTrackerCreateForm-BaseBranch": "Base 分支",
    "IssueTrackerCreateForm-ListLabel": "List",
    "IssueTrackerCreateForm-StatusLabel": "Status",
    "IssueTrackerCreateForm-StateLabel": "State",
    "IssueTrackerCreateForm-ListPlaceholder": "search lists",
    "IssueTrackerCreateForm-StatusPlaceholder": "search statuses",
    "IssueTrackerCreateForm-StatePlaceholder": "search states",
    "IssueTrackerCreateForm-CreateNewCard": "创建 New Card",
    "IssueTrackerCreateForm-CreateNewIssue": "创建 New Issue",
    "IssueTrackerCreateForm-AssigneesPlaceholder": "search assignees",
    "IssueTrackerCreateForm-MembersPlaceholder": "search members",
    "IssueTrackerCreateForm-DescriptionLabel": "Description",
    "IssueTrackerCreateForm-DescriptionPlaceholder": "Enter a description",
    "IssueTrackerCreateForm-EpicLinkLabel": "Epic Link",
    "IssueTrackerCreateForm-EpicLinkPlaceholder": "search epics",
    "IssueTrackerCreateForm-IssueTypeLabel": "Issue Type",
    "IssueTrackerCreateForm-IssueTypePlaceholder": "Select issue type",
    "IssueTrackerCreateForm-LabelsLabel": "Labels",
    "IssueTrackerCreateForm-LabelsPlaceholder": "search labels",
    "IssueTrackerCreateForm-NameLabel": "Name",
    "IssueTrackerCreateForm-SummaryLabel": "Summary",
    "IssueTrackerCreateForm-TitleLabel": "Title",
    "IssueTrackerCreateForm-NamePlaceholder": "Enter a name",
    "IssueTrackerCreateForm-SummaryPlaceholder": "Enter a summary",
    "IssueTrackerCreateForm-TitlePlaceholder": "Enter a title",
    "IssueTrackerCreateForm-NoMatch": "否 match",
    "IssueTrackerCreateForm-SubmitLabelCard": "创建 card",
    "IssueTrackerCreateForm-SubmitLabelIssue": "创建 issue",
    "IssueTrackerCreateForm-SuccessfullyCreatedCardOnGitLab": "成功fully created issue on GitLab",
    "IssueTrackerCreateForm-SuccessfullyCreatedCardOnTrello": "成功fully created card on Trello",
    "IssueTrackerCreateForm-SuccessfullyCreatedIssue": "成功fully created issue",
    "IssueTrackerCreateForm-SuccessfullyCreatedIssueOnJira": "成功fully created issue on Jira",
    "IssueTrackerCreateForm-OpenJiraIssueCreateLink": "创建 this issue in Jira",
    "IssueFilterError-GitHubField": "Filter field name is not valid: {0}",
    "IssueFilterError-GitHubAssignee": "Assignee must be a username, \"none\", or \"*\"",
    "IssueFilterError-GitHubCreator": "Creator must be a username",
    "IssueFilterError-GitHubLabels": "Labels must be a comma-separated list of labels",
    "IssueFilterError-GitHubMentioned": "Mentioned must be a username",
    "IssueFilterError-GitHubMilestone": "Milestone must be either a number or \"*\"",
    "IssueFilterError-GitHubSince": "Since must be an ISO-8601 date/time value such as YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS-07",
    "IssueFilterError-GitHubSort": "Sorting must be \"created\", \"updated\", or \"comments\"",
    "IssueFilterError-GitHubSortDirection": "Sorting direction must be \"asc\" or \"desc\"",
    "IssueFilterError-GitHubState": "State must be \"open\", \"closed\", or \"all\"",
    "IssueTrackerFilterForm-CreateGitLabFilter": "创建 GitLab Filter",
    "IssueTrackerFilterForm-CreateIssueTrackerFilter": "创建 Issue Tracker Filter",
    "IssueTrackerFilterForm-CreateJiraFilter": "创建 Jira Filter",
    "IssueTrackerFilterForm-CreateTrelloFilter": "创建 Trello Filter",
    "IssueTrackerFilterForm-CreateGitHubFilter": "创建 GitHub Filter",
    "IssueTrackerFilterForm-CreateGitLabFilterFailed": "Failed to create GitLab filter",
    "IssueTrackerFilterForm-CreateIssueTrackerFilterFailed": "Failed to create issue tracker filter",
    "IssueTrackerFilterForm-CreateJiraFilterFailed": "Failed to create Jira filter",
    "IssueTrackerFilterForm-CreateTrelloFilterFailed": "Failed to create Trello filter",
    "IssueTrackerFilterForm-CreateGitHubFilterFailed": "Failed to create GitHub filter",
    "IssueTrackerFilterForm-EditGitLabFilter": "Edit GitLab Filter",
    "IssueTrackerFilterForm-EditIssueTrackerFilter": "Edit Issue Tracker Filter",
    "IssueTrackerFilterForm-EditJiraFilter": "Edit Jira Filter",
    "IssueTrackerFilterForm-EditTrelloFilter": "Edit Trello Filter",
    "IssueTrackerFilterForm-EditGitHubFilter": "Edit GitHub Filter",
    "IssueTrackerFilterForm-EditGitLabFilterFailed": "Failed to edit GitLab filter",
    "IssueTrackerFilterForm-EditIssueTrackerFilterFailed": "Failed to edit issue tracker filter",
    "IssueTrackerFilterForm-EditJiraFilterFailed": "Failed to edit Jira filter",
    "IssueTrackerFilterForm-EditTrelloFilterFailed": "Failed to edit Trello filter",
    "IssueTrackerFilterForm-EditGitHubFilterFailed": "Failed to edit GitHub filter",
    "IssueTrackerFilterForm-EditLabel": "Edit Filter",
    "IssueTrackerFilterForm-FetchIssueTrackerFilterFailed": "Filter '{0}' is invalid",
    "IssueTrackerFilterForm-FilterCardsInBoardTextLabel": "Filter Cards in Board",
    "IssueTrackerFilterForm-FilterIssuesInProjectTextLabel": "Filter Issues in Project",
    "IssueTrackerFilterForm-FilterCardsInXTextLabel": "Filter Cards in {0}",
    "IssueTrackerFilterForm-FilterIssuesInXTextLabel": "Filter Issues in {0}",
    "IssueTrackerFilterForm-FilterCardsTextPlaceholder": "Enter a query to filter cards. A blank query will return all cards on the board.",
    "IssueTrackerFilterForm-FilterIssuesTextPlaceholder": "Enter a query to filter issues. A blank query will return all issues.",
    "IssueTrackerFilterForm-FilterOpenIssuesTextPlaceholder": "Enter a query to filter issues. A blank query will return all open issues.",
    "IssueTrackerFilterForm-GitlabSyntaxReferenceSubTitle": "Read more about filtering Gitlab on their {0}.",
    "IssueTrackerFilterForm-IssueTrackerSyntaxReferenceSubTitle": "Read more about filtering issue trackers on the {0}.",
    "IssueTrackerFilterForm-TrelloSyntaxReferenceSubTitle": "Read more about filtering Trello on their {0}.",
    "IssueTrackerFilterForm-SyntaxReferenceSubTitleLinkText": "support site",
    "IssueTrackerFilterForm-GitLabSyntaxReferenceTitle": "GitLab Filter Syntax",
    "IssueTrackerFilterForm-TrelloSyntaxReferenceTitle": "Trello Filter Syntax",
    "IssueTrackerFilterForm-GitHubSyntaxReferenceTitle": "GitHub Filter Syntax",
    "IssueTrackerFilterForm-NamePlaceholder": "Enter a name for this filter",
    "IssueTrackerFilterForm-SubmitLabel": "创建 Filter",
    "IssueTrackerFilterForm-AssigneeAnyLabel": "Assignee (any):",
    "IssueTrackerFilterForm-AssigneeLabel": "Assignee:",
    "IssueTrackerFilterForm-ChecklistLabel": "Checklist:",
    "IssueTrackerFilterForm-CommentLabel": "Comment:",
    "IssueTrackerFilterForm-OperatorsLabel": "Common operators:",
    "IssueTrackerFilterForm-CreatedDateLabel": "创建d date:",
    "IssueTrackerFilterForm-CreatorLabel": "Creator:",
    "IssueTrackerFilterForm-CustomCreatedDateLabel": "创建d in past number_of_days days:",
    "IssueTrackerFilterForm-CustomDueDateLabel": "Due in next number_of_days days:",
    "IssueTrackerFilterForm-CustomEditedDateLabel": "Edited in past number_of_days days:",
    "IssueTrackerFilterForm-DescriptionLabel": "Description:",
    "IssueTrackerFilterForm-DueDateLabel": "Due date:",
    "IssueTrackerFilterForm-EditedDateLabel": "Edited date:",
    "IssueTrackerFilterForm-FilterByLabel": "Filter by:",
    "IssueTrackerFilterForm-GitLabDoubleQuotes": "For names with spaces in them, use double quotes.",
    "IssueTrackerFilterForm-IsCompleteLabel": "Is complete:",
    "IssueTrackerFilterForm-LabelLabel": "Label:",
    "IssueTrackerFilterForm-LabelsLabel": "Labels:",
    "IssueTrackerFilterForm-ListLabel": "List:",
    "IssueTrackerFilterForm-MemberLabel": "Member:",
    "IssueTrackerFilterForm-MentionedLabel": "Mentioned:",
    "IssueTrackerFilterForm-MilestoneAnyLabel": "Milestone (any):",
    "IssueTrackerFilterForm-MilestoneLabel": "Milestone:",
    "IssueTrackerFilterForm-NameLabel": "Name:",
    "IssueTrackerFilterForm-OpenStatusLabel": "打开 status:",
    "IssueTrackerFilterForm-SinceLabel": "Since:",
    "IssueTrackerFilterForm-SortingLabel": "Sorting:",
    "IssueTrackerFilterForm-DirectionLabel": "Sorting Direction:",
    "IssueTrackerFilterForm-StateLabel": "State:",
    "IssueTrackerFilterForm-All": "all",
    "IssueTrackerFilterForm-Ascending": "asc",
    "IssueTrackerFilterForm-Asterisk": "*",
    "IssueTrackerFilterForm-Assignee": "assignee",
    "IssueTrackerFilterForm-Checklist": "checklist",
    "IssueTrackerFilterForm-Comments": "comments",
    "IssueTrackerFilterForm-Closed": "closed",
    "IssueTrackerFilterForm-Comment": "comment",
    "IssueTrackerFilterForm-Created": "created",
    "IssueTrackerFilterForm-Creator": "creator",
    "IssueTrackerFilterForm-CustomDays": "number_of_days",
    "IssueTrackerFilterForm-Description": "description",
    "IssueTrackerFilterForm-Descending": "desc",
    "IssueTrackerFilterForm-Direction": "direction",
    "IssueTrackerFilterForm-Due": "due",
    "IssueTrackerFilterForm-DueDate": "due_date",
    "IssueTrackerFilterForm-Edited": "edited",
    "IssueTrackerFilterForm-InputText": "input_text",
    "IssueTrackerFilterForm-Is": "is",
    "IssueTrackerFilterForm-Label": "label",
    "IssueTrackerFilterForm-Labels": "labels",
    "IssueTrackerFilterForm-LabelName": "label_name",
    "IssueTrackerFilterForm-LabelSpaceName": "label name",
    "IssueTrackerFilterForm-ListName": "list_name",
    "IssueTrackerFilterForm-Me": "me",
    "IssueTrackerFilterForm-Member": "member",
    "IssueTrackerFilterForm-Mentioned": "mentioned",
    "IssueTrackerFilterForm-Milestone": "milestone",
    "IssueTrackerFilterForm-MilestoneName": "milestone_name",
    "IssueTrackerFilterForm-MilestoneNumber": "milestone_number",
    "IssueTrackerFilterForm-Name": "name",
    "IssueTrackerFilterForm-None": "none",
    "IssueTrackerFilterForm-Open": "open",
    "IssueTrackerFilterForm-Since": "since",
    "IssueTrackerFilterForm-SinceFormat": "{ISO-8601 date string}",
    "IssueTrackerFilterForm-Sort": "sort",
    "IssueTrackerFilterForm-State": "state",
    "IssueTrackerFilterForm-StateName": "state_name",
    "IssueTrackerFilterForm-Updated": "updated",
    "IssueTrackerFilterForm-UserName": "user_name",
    "IssueTrackerFilterForm-FilterError": "Filter 错误",
    "TrelloFilterForm-QueryWarning": "Warning",
    "TrelloFilterForm-BoardWarningMessage": "Results are already filtered by the selected board, a \"board:\" argument is unnecessary.",
    "IssueTrackerDefaultFilter-AllCards": "All Cards",
    "IssueTrackerDefaultFilter-AllIssues": "All Issues",
    "IssueTrackerDefaultFilter-AllOpenIssues": "All 打开 Issues",
    "IssueTrackerDefaultFilter-MyCards": "My Cards",
    "IssueTrackerDefaultFilter-MyIssues": "My Issues",
    "IssueTrackerDefaultFilter-MyOpenIssues": "My 打开 Issues",
    "IssueTrackerDefaultFilter-UnassignedCards": "Unassigned Cards",
    "IssueTrackerDefaultFilter-UnassignedIssues": "Unassigned Issues",
    "IssueTrackerError-BadRequest": "Bad request syntax",
    "IssueTrackerError-CapchaBlockingLogin": "A captcha is blocking authentication. Please log in to your account to continue.",
    "IssueTrackerError-CommentEditFailed": "Failed to update comment",
    "IssueTrackerError-CreateCardFailed": "Failed to create card",
    "IssueTrackerError-CreateCommentFailed": "Failed to create comment",
    "IssueTrackerError-CreateIssueFailed": "Failed to create issue",
    "IssueTrackerError-CreateReplyFailed": "Failed to create reply",
    "IssueTrackerError-FetchingCardsFailed": "Fetching cards failed",
    "IssueTrackerError-FetchingIssuesFailed": "Fetching issues failed",
    "IssueTrackerError-FetchingPublicProjectsFailed": "Failed to fetch one or more public projects",
    "IssueTrackerError-FourOhFour": "The specified resource was not found",
    "IssueTrackerError-IncorrectVersionGitLab": "Issue tracking is not supported for GitLab Self-Managed versions below 13.1.",
    "IssueTrackerError-IncorrectVersion": "Issue tracker version not supported",
    "IssueTrackerError-InitializeFailed": "Failed to initialize issues for {0}",
    "IssueTrackerError-InvalidCredentials": "Invalid credentials",
    "IssueTrackerError-InvalidUsernameOrPassword": "Invalid username or password",
    "IssueTrackerError-JiraPeoplePermissionError": "You do not have permission to browse users and groups on Jira",
    "IssueTrackerError-MembersEditFailed": "Failed to update members",
    "IssueTrackerError-GitLabMissingProject": "Missing project {0}. Make sure the project exists and you have permission to access it.",
    "IssueTrackerError-GitLabMissingIssueProject": "Missing issue {0} for project {1}. Make sure the project and issue exist and you have permission to access them.",
    "IssueTrackerError-GitLabMissingDiscussionsIssueProject": "Missing discussions for issue {0} for project {1}. Make sure the project and issue exist and you have permission to access them.",
    "IssueTrackerError-GitLabMissingBoardProject": "Missing board {0} for project {1}. Make sure the project and board exist and you have permission to access them.",
    "IssueTrackerError-NameEditFailed": "Failed to update name",
    "IssueTrackerError-NotUseGitHub": "Repo must be hosted on GitHub.",
    "IssueTrackerError-NotUseGitHubEnterprise": "Repo must be hosted on GitHub Enterprise Server.",
    "IssueTrackerError-SaveCredentialsFailed": "Failed to save credentials",
    "IssueTrackerError-SetActiveIssueTrackerFailed": "Failed to set issue tracker",
    "IssueTrackerError-StatusEditFailed": "Failed to update status",
    "IssueTrackerError-SummaryEditFailed": "Failed to update summary",
    "IssueTrackerError-TaskItemEditFailed": "Failed to update task item value",
    "IssueTrackerError-TrelloTokenExpired": "Trello token expired",
    "IssueTrackerError-TrelloRateLimit": "Exceeded Trello API rate limit",
    "IssueTrackerPreferences-ChangePreferencesHint": "To set an issue tracker for this repository, go to 偏好设置 > Issues",
    "IssueTrackerPreferences-OpenPreferences": "打开 偏好设置",
    "IssueTracker-Member": "Member",
    "IssueTracker-Members": "Members",
    "IssueTracker-UpgradeToCreateACardMessage": "Upgrade GitKraken to create cards.",
    "IssueTracker-UpgradeToCreateAnIssueMessage": "Upgrade GitKraken to create issues.",
    "IssueTracker-UpgradeToEditACardMessage": "Upgrade GitKraken to edit cards.",
    "IssueTracker-UpgradeToEditAnIssueMessage": "Upgrade GitKraken to edit issues.",
    "IssueTracker-ViewOnlyPermissionMessageCard": "You do not have permission to edit this card.",
    "IssueTracker-ViewOnlyPermissionMessageIssue": "You do not have permission to edit this issue.",
    "IssueTracker-ViewOnlyPermissionCommentMessageCard": "You do not have permission to comment on this card.",
    "IssueTracker-ViewOnlyPermissionCommentMessageIssue": "You do not have permission to comment on this issue.",
    "IssueTracker-UnsupportedJiraFieldMessage": "Issues of this type cannot be created because Jira requires the following fields that are not currently supported by GitKraken:",
    "Cli-PtyStartError": "Failed to start shell process",
    "CLIPreferences": "In-App 终端",
    "CLIPreferences-AutocompleteOptions": "Autocomplete options",
    "CLIPreferences-AutocompleteSuggestions": "Enable Autocomplete Suggestions",
    "CLIPreferences-FontSizeSetting": "Font Size",
    "CLIPreferences-FontFamily": "Font",
    "CLIPreferences-FontFamilyNotFound": "否 fonts found",
    "CLIPreferences-LineHeightSetting": "Line Height",
    "CLIPreferences-HelpText-WillApplyOnNewTabs": "Changes to this setting will only apply to new tabs or after restarting GitKraken Desktop",
    "CLIPreferences-TabBehavior": "Tab Behavior",
    "CLIPreferences-TabBehavior-NAVIGATION": "Navigation",
    "CLIPreferences-TabBehavior-ENTER": "Enter",
    "CLIPreferences-TabBehavior-DEFAULT": "Ignore",
    "CLIPreferences-CursorStyle": "Cursor Style",
    "CLIPreferences-CursorStyle-BLOCK": "Block",
    "CLIPreferences-CursorStyle-UNDERLINE": "Underline",
    "CLIPreferences-CursorStyle-BAR": "Bar",
    "CLIPreferences-DefaultTerminal": "Default In-App 终端",
    "AddRepositoriesToWorkspace-Error": "错误 添加ing Repositories",
    "AddRepositoriesToWorkspace-SuccessSingular": "成功fully added {0} repository to {1}",
    "AddRepositoriesToWorkspace-SuccessPlural": "成功fully added {0} repositories to {1}",
    "AddRepositoryToWorkspace-ErrorNoRemoteForLocal": "否 remote for local repo at: {0}",
    "AddRepositoryToWorkspace-Error": "错误 adding repository to workspaces",
    "AddRepositoriesToWorkspaceModal-Adding": "添加ing...",
    "AddRepositoriesToWorkspaceModal-Title": "添加 Repositories",
    "ShareWorkspaceModal-ShareWorkspace": "Share Workspace",
    "ShareWorkspaceModal-ShareThisWorkspaceWithYourTeam": "Share this Workspace with your team",
    "ShareWorkspaceModal-UnpopulatedOrgDescription1": "Invite your team members to your organization so you can collaborate on your shared Cloud Workspaces.",
    "ShareWorkspaceModal-UnpopulatedOrgDescription2": "Anyone you invite will have access to your Workspace {0} as soon as they create their GitKraken account.",
    "ShareWorkspaceModal-AddUsers": "添加 Users",
    "ShareWorkspaceModal-OrganizationName": "Organization Name",
    "ShareWorkspaceModal-OrganizationNameExample": "Ex. Sirius Cybernetics",
    "TerminalContextMenu-Copy": "Copy",
    "TerminalContextMenu-Paste": "Paste",
    "TerminalContextMenu-SelectAll": "Select All",
    "TerminalContextMenu-DeleteLine": "删除 Line",
    "TerminalContextMenu-Clear": "Clear",
    "TerminalContextMenu-CloseTerminal": "关闭 终端",
    "Workspace": "Workspace",
    "Workspaces": "Workspaces",
    "LocalWorkspace": "Local Workspace",
    "LocalWorkspaces": "Local Workspaces",
    "CloudWorkspace": "Cloud Workspace",
    "CloudWorkspaces": "Cloud Workspaces",
    "Workspace-AddProjectForAnyTeams": "You do not have permission to add a project for a team your not a member of",
    "Workspace-SelectAProvider": "Select a provider",
    "Workspace-AddIcon": "Icon",
    "Workspace-ClearRepositories": "Clear current selection",
    "Workspace-CloneRepoButtonLabel": "Clone",
    "Workspace-CloneAllButtonLabel": "Clone all",
    "Workspace-CloneXReposButtonLabel": "Clone {0} repositories",
    "Workspace-Cloning": "Cloning... {0}%",
    "Workspace-CreateReadMe": "创建 README.md",
    "Workspace-FetchError": "GitKraken could not fetch {0} repositories",
    "Workspace-PullError": "GitKraken could not pull {0} repositories",
    "Workspace-FetchSuccess": "GitKraken successfully fetched {0} repositories",
    "Workspace-PullSuccess": "GitKraken successfully pulled {0} repositories",
    "Workspace-IntegrationNotConnected": "Integration not connected",
    "Workspace-LocateInFilesystem": "Locate in filesystem",
    "Workspace-RelocateRepoInFilesystem": "Relocate in filesystem",
    "Workspace-MultiplePathsDetected": "Multiple paths detected for this repository. Click to select a specific path for this repo",
    "Workspace-LocateAllInFilesystem": "Locate all in filesystem",
    "Workspace-RelocateAllInFilesystem": "Relocate all in filesystem",
    "Workspace-LocateXInFilesystem": "Locate {0} in filesystem",
    "Workspace-RelocateXInFilesystem": "Relocate {0} in filesystem",
    "Workspace-LocationChangeWarning": "Your current provider is {0}. If you want to add repositories from {1}, you will have to clear your current selected repositories.",
    "Workspace-Name": "Workspace Name",
    "Workspace-Table-Open": "打开",
    "Workspace-Table-ReposNumber": "{0} repos",
    "Workspace-Type": "Workspace type",
    "Workspace-TypeLocal": "Local",
    "Workspace-TypeLocalSynced": "Local - synced",
    "Workspace-TypeCloud": "Cloud",
    "Workspace-SelectAzureProject": "Select Azure project",
    "Workspace-SelectLocation": "Select provider",
    "Workspace-SelectProject": "Select project",
    "Workspace-SelectAProviderToCreateCloudWorkspace": "Select the service that hosts repos in this workspace",
    "Workspace-SuccessfullyMappedRepo": "成功fully located repo in {0}",
    "Workspace-SuccessfullyMappedRepos": "成功fully located {0} repos in {1}",
    "Workspace-UnsuccessfullyMappedRepos": "Could not locate {0} repos in {1}",
    "Workspace-IncorrectVersion": "${0} versions below {1} are not supported",
    "Workspace-IconErrorTitle": "Failed to Upload Icon",
    "Workspace-FailedToSetIcon": "Failed to Set Icon",
    "Workspace-FailedToFetchMetrics": "Failed to fetch metrics",
    "Workspace-SelectIcon": "Select Workspace Icon",
    "Workspace-ImageFileType": "Image 文件",
    "Workspace-NoViewPermissions": "You do not have permission to view this workspace",
    "Workspace-NoEditPermissions": "You do not have permission to edit this workspace",
    "Workspace-NoDeletePermissions": "You do not have permission to delete this workspace",
    "Workspace-NoAddRemoveMembersPermissions": "You do not have permission to add or remove members from this workspace",
    "Workspace-NoTransferOwnershipPermissions": "You do not have permission to transfer ownership of this workspace",
    "Workspace-NoRemoveSelfPermissions": "You do not have permission to remove yourself from this workspace",
    "Workspace-NoAddRepoPermissions": "You do not have permission to add repositories to this workspace",
    "Workspace-NoRemoveRepoPermissions": "You do not have permission to remove repositories from this workspace",
    "Workspace-ErrorGettingWorkspaceRepositories": "Unable to display repos for this workspace",
    "Workspace-TryAgainLater": "You may have lost permission to view them, or are disconnected from the Internet. Please check your connections and try again.",
    "Workspace-UnableToLoadOrUpdate": "Unable to load or update projects",
    "Workspace-PleaseTryAgainLater": "Please try again later.",
    "Workspace-Project": "Select Project...",
    "Workspace-BrowseRepositories": "Browse Repositories",
    "Workspace-BrowseRepositories-description": "Browse your machine for repos to add to this Workspace",
    "Workspace-BrowseForSyncDirectory": "Browse for Directory",
    "Workspace-BrowseForSyncDirectorySystemBrowseTitle": "Browse for a directory to become a synced local Workspace",
    "Workspace-SyncWithLocalDirectory": "Sync with local directory",
    "Workspace-SyncWithLocalDirectory-checkbox-hint": "Select a directory that contains repos to create a local synced Workspace",
    "Workspace-ImportFromVSCode": "Import VS Code Workspace",
    "Workspace-SelectReposDescription": "Select individual repos, a directory of repos, or an existing VS Code Workspace (.code-workspace)",
    "Workspace-LocalSyncedWorkspaceReposDescription": "Any repos you add to the selected directory will automatically be added to the workspace",
    "Workspace-SelectTimePeriod": "Select time period",
    "Workspace-CreateCloudWorkspace": "创建 Cloud Workspace",
    "Workspace-PreviousXDays": "Previous {0} days",
    "Workspace-CreateLocalWorkspace": "创建 Local Workspace",
    "Workspace-UnregisteredCloudHeader": "Streamline your workflow with a Cloud Workspace",
    "Workspace-UnregisteredCloudParagraph1": "Cloud Workspaces require a free account so you can access them from any machine.",
    "Workspace-FeaturesBullet1": "Get pull request and issue data for all of your repos",
    "Workspace-FeaturesBullet2": "Perform Git actions on all repos",
    "Workspace-FeaturesBullet3": "Increase velocity with GitKraken Insights",
    "Workspace-FeaturesBullet4": "Access from any machine",
    "Workspace-FeaturesBullet5": "Share with your team",
    "Workspace-AddMemberSectionLabel": "Organization Members",
    "Workspace-AddTeamSectionLabel": "Organization Teams",
    "Workspace-ReposNotLoadedYet": "This Workspace is still loading. Please wait...",
    "Cli-GeneratorFileStatusAddedFile": "添加ed file",
    "Cli-GeneratorFileStatusDeletedFile": "删除d file",
    "Cli-GeneratorFileStatusModifiedFile": "Modified file",
    "Cli-GeneratorFileStatusUntrackedFile": "Untracked file",
    "Cli-GeneratorFileStatusAllChangesInFolder": "All changes in this folder",
    "CLI-Generators-FoundInRemote": "Found in remote '{0}'",
    "Cli-CdDescription": "Change directory",
    "Cli-ParentDirectory": "Parent directory",
    "Cli-LoadingMessage": "Loading terminal",
    "Cli-NpmDescription": "否de package manager",
    "Cli-NpmWorkspaceDescription": "Enable running a command in the context of the configured workspaces of the current project",
    "Cli-NpmWorkspacesDescription": "Enable running a command in the context of all the configured workspaces",
    "Cli-NpmSaveDescription": "Package will be removed from your dependencies",
    "Cli-NpmSaveDevDescription": "Package will appear in your `devDependencies`",
    "Cli-NpmSaveOptionalDescription": "Package will appear in your `optionalDependencies`",
    "Cli-NpmNoSaveDescription": "Prevents saving to `dependencies`",
    "Cli-NpmGOptionDescription": "Uninstall global package",
    "Cli-NpmAllDescription": "Show all outdated or installed packages",
    "Cli-NpmJsonDescription": "Show output in json format",
    "Cli-NpmLongDescription": "Show extended information",
    "Cli-NpmParseableDescription": "Output parseable results from commands that write to standard output",
    "Cli-NpmDepthDescription": "The depth to go when recursing packages",
    "Cli-NpmLinkOptionDescription": "Limits output to only those packages that are linked",
    "Cli-NpmPackageLockOnlyDescription": "Current operation will only use the package-lock.json, ignoring node_modules",
    "Cli-NpmNoUnicodeDescription": "Uses unicode characters in the tree output",
    "Cli-NpmGlobalDescription": "Operates in 'global' mode, so that packages are installed into the prefix folder instead of the current working directory",
    "Cli-NpmOmitDescription": "Dependency types to omit from the installation tree on disk",
    "Cli-NpmInstallDescription": "Install a package and its dependencies",
    "Cli-NpmInstallSaveProdDescription": "Package will appear in your `dependencies`. This is the default unless `-D` or `-O` are present",
    "Cli-NpmInstallSaveDevDescription": "Package will appear in your `devDependencies`",
    "Cli-NpmInstallSaveOptionalDescription": "Package will appear in your `optionalDependencies`",
    "Cli-NpmInstallNoSaveDescription": "Prevents saving to `dependencies`",
    "Cli-NpmInstallSaveExactDescription": "保存d dependencies will be configured with an exact version rather than using npm's default semver range operator",
    "Cli-NpmInstallSaveBundleDescription": "保存d dependencies will also be added to your bundleDependencies list",
    "Cli-NpmInstallGlobalDescription": "Operates in 'global' mode, so that packages are installed into the prefix folder instead of the current working directory",
    "Cli-NpmInstallGlobalStyleDescription": "Causes npm to install the package into your local node_modules folder with the same layout it uses with the global node_modules folder",
    "Cli-NpmInstallLegacyBundlingDescription": "Causes npm to install the package such that versions of npm prior to 1.4, such as the one included with node 0.8, can install the package",
    "Cli-NpmInstallStrictPeerDeepsDescription": "If set to true, and --legacy-peer-deps is not set, then any conflicting peerDependencies will be treated as an install failure",
    "Cli-NpmInstallNoPackageLocksDescription": "Ignores package-lock.json files when installing",
    "Cli-NpmInstallOmitDescription": "Dependency types to omit from the installation tree on disk",
    "Cli-NpmInstallIgnoreScriptsDescription": "If true, npm does not run scripts specified in package.json files",
    "Cli-NpmInstallNoAuditDescription": "Submit audit reports alongside the current npm command to the default registry and all registries configured for scopes",
    "Cli-NpmInstallNoBinLinksDescription": "Tells npm to not create symlinks (or .cmd shims on Windows) for package executables",
    "Cli-NpmInstallNoFundDescription": "Hides the message at the end of each npm install acknowledging the number of dependencies looking for funding",
    "Cli-NpmInstallDryRunDescription": "Indicates that you don't want npm to make any changes and that it should only report what it would have done",
    "Cli-NpmRunDescription": "Run arbitrary package scripts",
    "Cli-NpmRunIfPresentDescription": "Npm will not exit with an error code when run-script is invoked for a script that isn't defined in the scripts section of package.json",
    "Cli-NpmRunSilentDescription": "npm will not exit with an error code when run-script is invoked for a script that isn't defined in the scripts section of package.json",
    "Cli-NpmRunIgnoreScriptsDescription": "npm does not run scripts specified in package.json files.",
    "Cli-NpmRunScriptShellDescription": "The shell to use for scripts run with the npm exec, npm run and npm init <pkg> command",
    "Cli-NpmInitDescription": "Trigger the initialization",
    "Cli-NpmInitYesDescription": "Automatically answer 'yes' to any prompts that npm might print on the command line",
    "Cli-NpmInitWOptionDescription": "创建 the folders and boilerplate expected while also adding a reference to your project workspaces property",
    "Cli-NpmAccessDescription": "Set access controls on private packages",
    "Cli-NpmAddUserDescription": "添加 a registry user account",
    "Cli-NpmAuditDescription": "Run a security audit",
    "Cli-NpmAuditLevelDescription": "The minimum level of vulnerability for npm audit to exit with a non-zero exit code",
    "Cli-NpmAuditPackageLockOnlyDescription": "Current operation will only use the package-lock.json, ignoring node_modules",
    "Cli-NpmAuditJsonDescription": "Shows settings in json format",
    "Cli-NpmAuditOmitDescription": "Dependency types to omit from the installation tree on disk",
    "Cli-NpmBinDescription": "Display npm bin folder",
    "Cli-NpmBinGOptionDescription": "Print the global folder where npm will install executables",
    "Cli-NpmBugsDescription": "Show the bugs that might exist for a package",
    "Cli-NpmCDescription": "Manage the npm configuration files",
    "Cli-NpmCacheDescription": "Manipulates packages cache",
    "Cli-NpmCacheAddDescription": "添加 the specified packages to the local cache",
    "Cli-NpmCacheOptionDescription": "The location of npm's cache directory",
    "Cli-NpmCleanInstallDescription": "Install a project with a clean slate",
    "Cli-NpmCleanInstallTestDescription": "Install a project with a clean slate and run tests",
    "Cli-NpmCompletionDescription": "Tab completion for npm",
    "Cli-NpmConfigDescription": "Manage the npm configuration files",
    "Cli-NpmConfigSetDescription": "Sets the config key to the value",
    "Cli-NpmConfigGetDescription": "Echo the config value to stdout",
    "Cli-NpmConfigListDescription": "Show all the config settings",
    "Cli-NpmConfigListGlobalDescription": "Lists globally installed packages",
    "Cli-NpmConfigListLOptionDescription": "Also shows defaults",
    "Cli-NpmConfigListJsonDescription": "Shows settings in json format",
    "Cli-NpmConfigDeleteDescription": "删除s the key from all configuration files",
    "Cli-NpmConfigEditDescription": "打开s the config file in an editor",
    "Cli-NpmConfigEditGlobalDescription": "Edits the global config",
    "Cli-NpmCreateDescription": "创建 a package.json file",
    "Cli-NpmDedupeDescription": "Reduce duplication",
    "Cli-NpmDeprecateDescription": "Deprecate a version of a package",
    "Cli-NpmDeprecateRegistryDescription": "The base URL of the npm registry",
    "Cli-NpmDistTagDescription": "Modify package distribution tags",
    "Cli-NpmDocsDescription": "Docs for a package in a web browser maybe",
    "Cli-NpmDoctorDescription": "Check your environments",
    "Cli-NpmEditDescription": "Edit an installed package",
    "Cli-NpmExploreDescription": "Browse an installed package",
    "Cli-NpmFundDescription": "Retrieve funding information",
    "Cli-NpmGetDescription": "Echo the config value to stdout",
    "Cli-NpmHelpDescription": "Search npm help documentation",
    "Cli-NpmHelpSearchDescription": "Get help on npm",
    "Cli-NpmHookDescription": "Manage registry hooks",
    "Cli-NpmInstallCiTestDescription": "Install a project with a clean slate and run tests",
    "Cli-NpmInstallTestDescription": "Install package(s) and run tests",
    "Cli-NpmLinkDescription": "Symlink a package folder",
    "Cli-NpmListDescription": "List installed packages",
    "Cli-NpmLnDescription": "Symlink a package folder",
    "Cli-NpmLoginDescription": "Log in of the registry",
    "Cli-NpmLogoutDescription": "Log out of the registry",
    "Cli-NpmOrgDescription": "Manage orgs",
    "Cli-NpmOutdateDescription": "Check for outdated packages",
    "Cli-NpmOutdatedAllDescription": "Show all outdated or installed packages",
    "Cli-NpmOutdatedJsonDescription": "Show output in json format",
    "Cli-NpmOutdatedLongDescription": "Show extended information",
    "Cli-NpmOutdatedParseableDescription": "Output parseable results from commands that write to standard output",
    "Cli-NpmOutdatedGlobalDescription": "Checks globally",
    "Cli-NpmOwnerDescription": "Manage package owners",
    "Cli-NpmPackDescription": "创建 a tarball from a package",
    "Cli-NpmPingDescription": "Ping npm registry",
    "Cli-NpmPrefixDescription": "Display prefix",
    "Cli-NpmPrefixGlobalDescription": "Print the global prefix to standard out",
    "Cli-NpmProfileDescription": "Change settings on your registry profile",
    "Cli-NpmPruneDescription": "Remove extraneous packages",
    "Cli-NpmPruneDryRunDescription": "Indicates that you don't want npm to make any changes and that it should only report what it would have done",
    "Cli-NpmPruneJsonDescription": "Show output in json format",
    "Cli-NpmPruneProductionDescription": "Remove the packages specified in your devDependencies",
    "Cli-NpmPublishDescription": "Publish a package",
    "Cli-NpmPublishTagDescription": "Sets scoped package to be publicly viewable if set to 'public'",
    "Cli-NpmPublishAccessDescription": "Indicates that you don't want npm to make any changes and that it should only report what it would have done",
    "Cli-NpmPublishDryRunDescription": "One-time password from a two-factor authenticator",
    "Cli-NpmPublishOptDescription": "Rebuild a package",
    "Cli-NpmRebuildDescription": "打开 package repository page in the browser",
    "Cli-NpmRepoDescription": "Restart a package",
    "Cli-NpmRestartDescription": "Display npm root",
    "Cli-NpmRootDescription": "Print the effective global node_modules folder to standard out",
    "Cli-NpmRootGlobalDescription": "Run arbitrary package scripts",
    "Cli-NpmSearchDescription": "Search for packages",
    "Cli-NpmSetDescription": "Sets the config key to the value",
    "Cli-NpmShrinkWrapDescription": "Lock down dependency versions for publication",
    "Cli-NpmStarDescription": "Mark your favorite packages",
    "Cli-NpmStarsDescription": "View packages marked as favorites",
    "Cli-NpmStartDescription": "Start a package",
    "Cli-NpmStartIgnoreScriptsDescription": "If true, npm does not run scripts specified in package.json files",
    "Cli-NpmStopDescription": "Stop a package",
    "Cli-NpmTestDescription": "Test a package",
    "Cli-NpmTestIgnoreScriptsDescription": "If true, npm does not run scripts specified in package.json files",
    "Cli-NpmTeamDescription": "Manage organization teams and team memberships",
    "Cli-NpmTokenDescription": "Manage your authentication tokens",
    "Cli-NpmUninstallDescription": "Uninstall a package, completely removing everything npm installed on its behalf",
    "Cli-NpmUnpublishDescription": "Remove a package from the registry",
    "Cli-NpmUnstarDescription": "Unmark your package",
    "Cli-NpmUpDescription": "Check the latest version of dependencies",
    "Cli-NpmUpdateDescription": "Update a package",
    "Cli-NpmUpdateGlobalDescription": "Update global package",
    "Cli-NpmUpdateGlobalStyleDescription": "Causes npm to install the package into your local node_modules folder with the same layout it uses with the global node_modules folder",
    "Cli-NpmUpdateLegacyBundlingDescription": "Causes npm to install the package such that versions of npm prior to 1.4, such as the one included with node 0.8, can install the package",
    "Cli-NpmUpdateStrictPeerDescription": "If set to true, and --legacy-peer-deps is not set, then any conflicting peerDependencies will be treated as an install failure",
    "Cli-NpmUpdateNoPackageLockDescription": "Ignores package-lock.json files when installing",
    "Cli-NpmUpdateOmitDescription": "Dependency types to omit from the installation tree on disk",
    "Cli-NpmUpdateIgnoreScriptsDescription": "npm does not run scripts specified in package.json files",
    "Cli-NpmUpdateNoAuditDescription": "Submit audit reports alongside the current npm command to the default registry and all registries configured for scopes",
    "Cli-NpmUpdateNoBinLinksDescription": "Tells npm to not create symlinks (or .cmd shims on Windows) for package executables",
    "Cli-NpmUpdateNoFundDescription": "Indicates that you don't want npm to make any changes and that it should only report what it would have done",
    "Cli-NpmUpdateDryRunDescription": "Hides the message at the end of each npm install acknowledging the number of dependencies looking for funding",
    "Cli-NpmVDescription": "Check that you have node and npm installed",
    "Cli-NpmVersionDescription": "Bump a package version",
    "Cli-NpmVersionJsonDescription": "Show output in json format",
    "Cli-NpmViewDescription": "View registry info",
    "Cli-NpmViewJsonDescription": "Show output in json format",
    "Cli-NpmWhoamiDescription": "Display npm username",
    "Cli-CurrentDirectorySuggestion": "Current Directory",
    "Cli-GitAmendDescription": "Replace the tip of the current branch by creating a new commit",
    "Cli-GitAmendNoEditDescription": "Use the selected commit message without launching an editor",
    "Cli-GitDescription": "The content tracker",
    "Cli-GitVersionDescription": "Output version",
    "Cli-GitHelpDescription": "Output help",
    "Cli-GitHelpAllDescription": "Print all available commands",
    "Cli-GitHelpGuidesDescription": "Print list of useful guides",
    "Cli-GitHelpConfigDescription": "Print all configuration variable names",
    "Cli-GitHelpManDescription": "Show man page",
    "Cli-GitHelpWebDescription": "Show manual in web browser",
    "Cli-GitHelpInfoDescription": "Show info page",
    "Cli-GitHelpVerboseDescription": "Print command description",
    "Cli-GitShowHelpFor": "Show help for '{0}' command",
    "Cli-GitCDescription": "Run as if git was started in <path> instead of the current working directory",
    "Cli-GitCNameDescription": "Record changes to the repository",
    "Cli-GitExecPathDescription": "Get or set GIT_EXEC_PATH for core Git programs",
    "Cli-GitHtmlPathDescription": "Print Git's HTML documentation path",
    "Cli-GitManDescription": "Print the manpath for this version of Git",
    "Cli-GitInfoDescription": "Print the info path documenting this version of Git",
    "Cli-GitPageDescription": "Pipe output into `less` or custom $PAGER",
    "Cli-GitNoPagerDescription": "Do not pipe Git output into a pager",
    "Cli-GitNoReplaceDescription": "Do not use replacement refs to replace Git objects",
    "Cli-GitBareDescription": "Treat the repository as a bare repository",
    "Cli-GitDirPathDescription": "Set the path to the repository dir (`.git`)",
    "Cli-GitWorkTreeDescription": "Set working tree path",
    "Cli-GitNamespaceDescription": "Set the Git namespace",
    "Cli-GitCommitMessageDescription": "Use the given message as the commit message",
    "Cli-GitCommitAllDescription": "Stage all modified and deleted paths",
    "Cli-GitCommitAllMessageDescription": "Stage all and use given text as commit message",
    "Cli-GitCommitVerboseDescription": "Show unified diff of all file changes",
    "Cli-GitConfigDescription": "Get and set repository or global options",
    "Cli-GitConfigLocalDescription": "Default: write to the repository .git/config file",
    "Cli-GitConfigLocalUserNameDescription": "Set config for username",
    "Cli-GitConfigLocalUserEmailDescription": "Set config for email",
    "Cli-GitConfigGlobalDescription": "For writing options: write to global ~/.gitconfig file rather than the repository .git/config",
    "Cli-GitConfigGlobalUserNameDescription": "Set config for username",
    "Cli-GitRebaseDescription": "Reapply commits on top of another base tip",
    "Cli-GitRebaseOntoDescription": "Starting point at which to create the new commits. If not specified, the starting point is <upstream>",
    "Cli-GitRebaseKeepBaseDescription": "Set the starting point at which to create the new commits to the merge base of <upstream> <branch>.",
    "Cli-GitRebaseContinueDescription": "Continue the rebasing after conflict resolution",
    "Cli-GitRebaseAbortDescription": "Abort the rebase operation and reset HEAD to the original branch",
    "Cli-GitRebaseQuitDescription": "Abort the rebase operation but HEAD is not reset back to the original branch",
    "Cli-GitRebaseApplyDescription": "Use applying strategies to rebas",
    "Cli-GitRebaseEmptyDescription": "How to handle commits that are not empty to start, but become empty after rebasing",
    "Cli-GitRebaseEmptyDropDescription": "commits that become empty are dropped",
    "Cli-GitRebaseEmptyKeepDescription": "commits that become empty are kept",
    "Cli-GitRebaseEmptyAskDescription": "Allows you to choose whether to drop empty commits, edit files more, or just commit the empty changes.",
    "Cli-GitRebaseReapplyCherryDescription": "Reapply all clean cherry-picks of any upstream commit instead of preemptively dropping them.",
    "Cli-GitRebaseNoReapplyCherryDescription": "(Default) all clean cherry-picks commits will be automatically dropped.",
    "Cli-GitRebaseAllowEmptyMessageDescription": "Allow commits with empty messages to be rebased",
    "Cli-GitRebaseSkipDescription": "Skips a commit",
    "Cli-GitRebaseEditDescription": "Edit the todo list during an interactive rebase.",
    "Cli-GitRebaseShowCurrentPatchDescription": "Show the current patch in an interactive rebase or when rebase is stopped because of conflicts",
    "Cli-GitRebaseMergeDescription": "(Default) Allows rebase to be aware of renames on the upstream side. This is the default.",
    "Cli-GitRebaseStrategyDescription": "Use the given merge strategy",
    "Cli-GitRebaseXStrategyDescription": "Pass the <strategy-option> through to the merge strategy.",
    "Cli-GitRebaseGpgSignDescription": "GPG-sign commits",
    "Cli-GitRebaseNoGpgSignDescription": "Don't GPGP-sign commits",
    "Cli-GitRebaseQuietDescription": "Be quiet. Implies --no-stat.",
    "Cli-GitRebaseStatDescription": "Show a diffstat of what changed upstream since the last rebase",
    "Cli-GitRebaseNoStatDescription": "Do not show a diffstat as part of the rebase process.",
    "Cli-GitRebaseNoVerifyDescription": "This option bypasses the pre-rebase hook",
    "Cli-GitRebaseVerifyDescription": "(Default) Allows the pre-rebase hook to run",
    "Cli-GitRebaseCOptionDescription": "Ensure at least <n> lines of surrounding context match before and after each change. ",
    "Cli-GitRebaseNoForceDescription": "Do not replay rebased commits",
    "Cli-GitRebaseForceDescription": "Individually replay all rebased commits instead of fast-forwarding over the unchanged ones",
    "Cli-GitRebaseForkPointDescription": "When is active, fork_point will be used instead of <upstream> to calculate the set of commits to rebase",
    "Cli-GitRebaseNoForkPointRebaseDescription": "If <upstream> is given on the command line, then the default is --no-fork-point",
    "Cli-GitRebaseIgnoreWhitespaceDescription": "Ignore whitespace differences when trying to reconcile differences",
    "Cli-GitRebaseWhitespaceDescription": "This flag is passed to the git apply program",
    "Cli-GitRebaseCommitterDateDescription": "Use the author date of the commit being rebased as the committer date",
    "Cli-GitRebaseIgnoreDateDescription": "Use the current time as the author date of the rebased commit",
    "Cli-GitRebaseSignoffDescription": "添加 a Signed-off-by trailer to all the rebased commits.",
    "Cli-GitRebaseInteractiveDescription": "Make a list of the commits which are about to be rebased and let the user edit that list",
    "Cli-GitRebaseMergesDescription": "Rebase will try to preserve the branching structure within the commits that are to be rebased, by recreating the merge commits.",
    "Cli-GitRebasePreserveMergesDescription": "Recreate merge commits instead of flattening the history by replaying commits a merge commit introduces",
    "Cli-GitRebaseExecDescription": "Will execute a command after each commit in your interactive rebase.",
    "Cli-GitRebaseRootDescription": "Rebase all commits reachable from <branch>, instead of limiting them with an <upstream>",
    "Cli-GitRebaseAutoSquashDescription": "modify the todo list of rebase -i, so that the commit marked for squashing comes right after the commit to be modified and change its action",
    "Cli-GitRebaseNoAutoSquashDescription": "Do not look for commit messages in the to do list of rebase -i",
    "Cli-GitRebaseAutoStashDescription": "创建 a temporary stash entry before the operation begins, and apply it after the operation ends",
    "Cli-GitRebaseNoAutoStashDescription": "Do not create a temporary stash entry",
    "Cli-GitRebaseRescheduledDescription": "Automatically reschedule exec commands that failed",
    "Cli-GitRebaseNoRescheduledDescription": "Disable Reschedule",
    "Cli-GitAddDescription": "添加 file contents to the index",
    "Cli-GitAddAllDescription": "添加, modify, and remove index entries to match the working tree",
    "Cli-GitAddIgnoredDescription": "Allow adding otherwise ignored files",
    "Cli-GitAddInteractiveDescription": "添加 modified contents in the working tree interactively to the index",
    "Cli-GitAddDryRunDescription": "Don't actually add the files(s), just show if they exist and/or will be ignored",
    "Cli-GitAddPatchDescription": "Interactively choose hunks of patch between the index and the work tree and add them to the index",
    "Cli-GitStatusDescription": "Show the working tree status",
    "Cli-GitStatusVerboseDescription": "Be verbose",
    "Cli-GitStatusBranchDescription": "Show branch information",
    "Cli-GitStatusStashDescription": "Show stash information",
    "Cli-GitStatusAheadDescription": "Compute full ahead/behind values",
    "Cli-GitStatusLongDescription": "Show status in long format (default)",
    "Cli-GitStatusNullDescription": "Terminate entries with NUL",
    "Cli-GitStatusUntrackedDescription": "Show untracked files",
    "Cli-GitStatusUntrackedAllDescription": "(Default)",
    "Cli-GitStatusignoredDescription": "Show ignored files",
    "Cli-GitStatusignoredTraditionalDescription": "(Default)",
    "Cli-GitStatusNoRenamesDescription": "Do not detect renames",
    "Cli-GitPushDescription": "Update remote refs",
    "Cli-GitPushTagsDescription": "push tags (can't be used with --all or --mirror)",
    "Cli-GitPushAllDescription": "推送 all branches (i.e. refs under refs/heads/); cannot be used with other <refspec>.",
    "Cli-GitPushPruneDescription": "Remove remote branches that don't have a local counterpart. For example a remote branch tmp will be removed if a local branch with the same name doesn't exist any more. This also respects refspecs, e.g. git push --prune remote refs/heads/*:refs/tmp/* would make sure that remote refs/tmp/foo will be removed if refs/heads/foo doesn't exist.",
    "Cli-GitPushMirrorDescription": "Instead of naming each ref to push, specifies that all refs under refs/ (which includes but is not limited to refs/heads/, refs/remotes/, and refs/tags/) be mirrored to the remote repository. Newly created local refs will be pushed to the remote end, locally updated refs will be force updated on the remote end, and deleted refs will be removed from the remote end. This is the default if the configuration option remote.<remote>.mirror is set.",
    "Cli-GitPushNDescription": "Do everything except actually send the updates.",
    "Cli-GitPushDryRunDescription": "Do everything except actually send the updates.",
    "Cli-GitPushPorcelainDescription": "Produce machine-readable output. The output status line for each ref will be tab-separated and sent to stdout instead of stderr. The full symbolic s of the refs will be given.",
    "Cli-GitPushDeleteDescription": "All listed refs are deleted from the remote repository. This is the same as prefixing all refs with a colon.",
    "Cli-GitPushFollowTagsDescription": "推送 all the refs that would be pushed without this option, and also push annotated tags in refs/tags that are missing from the remote but are pointing at commit-ish that are reachable from the refs being pushed. This can also be specified with configuration variable push.followTags. For more information, see push.followTags in git-config[1].",
    "Cli-GitPushSignedDescription": "GPG-sign the push request to update refs on the receiving side, to allow it to be checked by the hooks and/or be logged. The push will fail if the server does not support signed pushes. If set to if-asked, sign if and only if the server supports signed pushes. The push will also fail if the actual call to gpg --sign fails.",
    "Cli-GitPushSignedTrueDescription": "GPG-sign the push request to update refs on the receiving side, to allow it to be checked by the hooks and/or be logged. The push will fail if the server does not support signed pushes. The push will also fail if the actual call to gpg --sign fails.",
    "Cli-GitPushSignedFalseDescription": "否 GPG-sign the push request to update refs on the receiving side.",
    "Cli-GitPushSignedIfAskedDescription": "Sign if and only if the server supports signed pushes.",
    "Cli-GitPushNotSignedDescription": "否 GPG-sign the push request to update refs on the receiving side.",
    "Cli-GitPushAtomicDescription": "Use an atomic transaction on the remote side if available. Either all refs are updated, or on error, no refs are updated. If the server does not support atomic pushes the push will fail.",
    "Cli-GitPushNotAtomicDescription": "Use an atomic transaction on the remote side if available. Either all refs are updated, or on error, no refs are updated. If the server does not support atomic pushes the push will fail.",
    "Cli-GitPushOptionDescription": "Transmit the given option to the server, which passes them to the pre-receive as well as the post-receive hook. The given string must not contain a NUL or LF character.",
    "Cli-GitPushOptionToSendDescription": "<option> to transmit to the server.",
    "Cli-GitPushOption2Description": "Transmit the given <option> to the server, which passes them to the pre-receive as well as the post-receive hook. The given string must not contain a NUL or LF character. When multiple --push-option=<option> are given, they are all sent to the other side in the order listed on the command line. When no --push-option=<option> is given from the command line, the values of configuration variable push.pushOption are used instead.",
    "Cli-GitPushReceivePackDescription": "Path to the git-receive-pack program on the remote end. Sometimes useful when pushing to a remote repository over ssh, and you do not have the program in a directory on the default $PATH.",
    "Cli-GitPushExecDescription": "Path to the git-receive-pack program on the remote end. Sometimes useful when pushing to a remote repository over ssh, and you do not have the program in a directory on the default $PATH.",
    "Cli-GitPushForceLeaseDescription": "Overrides restriction to update a remote ref that is not an ancestor of the local ref",
    "Cli-GitPushNotForceLeaseDescription": "否t overrides restriction to update a remote ref that is not an ancestor of the local ref",
    "Cli-GitPushForceDescription": "Force operations without checking restrictions",
    "Cli-GitPushForceIfIncludesDescription": "Force an update only if the tip of the remote-tracking ref has been integrated locally.",
    "Cli-GitPushRepoDescription": "This option is equivalent to the <repository> argument. If both are specified, the command-line argument takes precedence.",
    "Cli-GitPushSetUpstreamDescription": "For every branch that is up to date or successfully pushed, add upstream (tracking) reference, used by argument-less git-pull[1] and other commands. For more information, see branch.<name>.merge in git-config[1].",
    "Cli-GitPushThinDescription": "This options is passed to git-send-pack. A thin transfer significantly reduces the amount of sent data when the sender and receiver share many of the same objects in common. This is the default",
    "Cli-GitPushNotThinDescription": "This options is passed to git-send-pack. A thin transfer significantly reduces the amount of sent data when the sender and receiver share many of the same objects in common.",
    "Cli-GitPushQuietDescription": "Suppress all output, including the listing of updated refs, unless an error occurs. Progress is not reported to the standard error stream.",
    "Cli-GitPushVerboseDescription": "Run verbosely.",
    "Cli-GitPushProgressDescription": "Progress status is reported on the standard error stream by default when it is attached to a terminal, unless -q is specified. This flag forces progress status even if the standard error stream is not directed to a terminal.",
    "Cli-GitPushSubmodulesDescription": "May be used to make sure all submodule commits used by the revisions to be pushed are available on a remote-tracking branch.",
    "Cli-GitPushSubmodulesCheckDescription": "Git will verify that all submodule commits that changed in the revisions to be pushed are available on at least one remote of the submodule.",
    "Cli-GitPushSubmodulesDemandDescription": "All submodules that changed in the revisions to be pushed will be pushed. If it's not able to push all necessary revisions it will also be aborted and exit with non-zero status.",
    "Cli-GitPushSubmodulesOnlyDescription": "All submodules will be recursively pushed while the superproject is left unpushed.",
    "Cli-GitPushSubmodulesNoDescription": "Like using --no-recurse-submodules can be used to override the push.recurseSubmodules configuration variable when no submodule recursion is required.",
    "Cli-GitPushNotSubmodulesDescription": "May be used to make sure all submodule commits used by the revisions to be pushed are available on a remote-tracking branch. If check is used Git will verify that all submodule commits that changed in the revisions to be pushed are available on at least one remote of the submodule. If any commits are missing the push will be aborted and exit with non-zero status. If on-demand is used all submodules that changed in the revisions to be pushed will be pushed. If on-demand was not able to push all necessary revisions it will also be aborted and exit with non-zero status. If only is used all submodules will be recursively pushed while the superproject is left unpushed. A value of no or using --no-recurse-submodules can be used to override the push.recurseSubmodules configuration variable when no submodule recursion is required.",
    "Cli-GitPushVerifyDescription": "This options gives to the pre-push hook a chance to prevent the push. This is the default.",
    "Cli-GitPushNotVerifyDescription": "The pre-push hook is bypassed completely.",
    "Cli-GitPullDescription": "Fetch from and integrate with another repository or a local branch",
    "Cli-GitPullRebaseDescription": "Fetch the remote's copy of current branch and rebases it into the local copy",
    "Cli-GitPullNoRebaseDescription": "Override earlier --rebase",
    "Cli-GitPullCommitDescription": "Perform the merge and commit the result. This option can be used to override --no-commit",
    "Cli-GitPullNoCommitDescription": "Perform the merge and stop just before creating a merge commit, to give the user a chance to inspect and further tweak the merge result before committing",
    "Cli-GitPullEditDescription": "Invoke an editor before committing successful mechanical merge to further edit the auto-generated merge message, so that the user can explain and justify the merge",
    "Cli-GitPullNoEditDescription": "The --no-edit option can be used to accept the auto-generated message (this is generally discouraged). The --edit (or -e) option is still useful if you are giving a draft message with the -m option from the command line and want to edit it in the editor",
    "Cli-GitPullCleanupDescription": "This option determines how the merge message will be cleaned up before committing. See git-commit[1] for more details. In addition, if the <mode> is given a value of scissors, scissors will be appended to MERGE_MSG before being passed on to the commit machinery in the case of a merge conflict",
    "Cli-GitPullFfDescription": "When possible resolve the merge as a fast-forward (only update the branch pointer to match the merged branch; do not create a merge commit). When not possible (when the merged-in history is not a descendant of the current history), create a merge commit",
    "Cli-GitPullNoFfDescription": "创建 a merge commit in all cases, even when the merge could instead be resolved as a fast-forward",
    "Cli-GitPullFfOnlyDescription": "Resolve the merge as a fast-forward when possible. When not possible, refuse to merge and exit with a non-zero status",
    "Cli-GitPullGPGSignDescription": "GPG-sign the resulting merge commit. The keyid argument is optional and defaults to the committer identity; if specified, it must be stuck to the option without a space",
    "Cli-GitPullNoGPGSignDescription": "Is useful to countermand both commit.gpgSign configuration variable, and earlier --gpg-sign",
    "Cli-GitPullLogDescription": "In addition to branch names, populate the log message with one-line descriptions from at most <n> actual commits that are being merged",
    "Cli-GitPullNoLogDescription": "Do not list one-line descriptions from the actual commits being merged",
    "Cli-GitPullSignOffDescription": "添加 a Signed-off-by trailer by the committer at the end of the commit log message. The meaning of a signoff depends on the project to which you're committing. For example, it may certify that the committer has the rights to submit the work under the project's license or agrees to some contributor representation, such as a Developer Certificate of Origin. (See http://developercertificate.org for the one used by the Linux kernel and Git projects.) Consult the documentation or leadership of the project to which you're contributing to understand how the signoffs are used in that project",
    "Cli-GitPullNoSignOffDescription": "Can be used to countermand an earlier --signoff option on the command line",
    "Cli-GitPullStatDescription": "Show a diffstat at the end of the merge. The diffstat is also controlled by the configuration option merge.stat",
    "Cli-GitPullNoStatDescription": "Do not show a diffstat at the end of the merge",
    "Cli-GitPullSquashDescription": "With --squash, --commit is not allowed, and will fail. Produce the working tree and index state as if a real merge happened (except for the merge information), but do not actually make a commit, move the HEAD, or record $GIT_DIR/MERGE_HEAD (to cause the next git commit command to create a merge commit). This allows you to create a single commit on top of the current branch whose effect is the same as merging another branch (or more in case of an octopus)",
    "Cli-GitPullNoSquashDescription": "perform the merge and commit the result. This option can be used to override --squash",
    "Cli-GitPullNoVerifyDescription": "This option bypasses the pre-merge and commit-msg hooks",
    "Cli-GitPullStrategyDescription": "Use the given merge strategy; can be supplied more than once to specify them in the order they should be tried. If there is no -s option, a built-in list of strategies is used instead (git merge-recursive when merging a single head, git merge-octopus otherwise)",
    "Cli-GitPullStrategyOptionDescription": "Pass merge strategy specific option through to the merge strategy",
    "Cli-GitPullVerifySignaturesDescription": "Verify that the tip commit of the side branch being merged is signed with a valid key, i.e. a key that has a valid uid: in the default trust model, this means the signing key has been signed by a trusted key. If the tip commit of the side branch is not signed with a valid key, the merge is aborted",
    "Cli-GitPullNoVerifySignaturesDescription": "Do not verify that the tip commit of the side branch being merged is signed with a valid key",
    "Cli-GitPullSummaryDescription": "Synonym to --stat ; this is deprecated and will be removed in the future",
    "Cli-GitPullNoSummaryDescription": "Synonym to --no-stat ; this is deprecated and will be removed in the future",
    "Cli-GitPullQuietDescription": "Operate quietly. Implies --no-progress",
    "Cli-GitPullVerboseDescription": "Be verbose",
    "Cli-GitPullAutostashDescription": "Automatically create a temporary stash entry before the operation begins, and apply it after the operation ends. This means that you can run the operation on a dirty worktree. However, use with care: the final stash application after a successful merge might result in non-trivial conflicts",
    "Cli-GitPullNoAutostashDescription": "Do not automatically create a temporary stash entry before the operation begins, and apply it after the operation ends",
    "Cli-GitPullAllowUnrelatedHistoriesDescription": "By default, git merge command refuses to merge histories that do not share a common ancestor. This option can be used to override this safety when merging histories of two projects that started their lives independently. As that is a very rare occasion, no configuration variable to enable this by default exists and will not be added",
    "Cli-GitPullAllDescription": "Fetch all remotes",
    "Cli-GitPullAppendDescription": "Append ref names and object names of fetched refs to the existing contents of .git/FETCH_HEAD",
    "Cli-GitPullAtomicDescription": "Use an atomic transaction to update local refs. Either all refs are updated, or on error, no refs are updated",
    "Cli-GitPullDepthDescription": "Limit fetching to the specified number of commits from the tip of each remote branch history",
    "Cli-GitPullDeepenDescription": "Similar to --depth, except it specifies the number of commits from the current shallow boundary instead of from the tip of each remote branch history",
    "Cli-GitPullShallowSinceDescription": "Deepen or shorten the history of a shallow repository to include all reachable commits after <date>",
    "Cli-GitPullShallowExcludeDescription": "Deepen or shorten the history of a shallow repository to exclude commits reachable from a specified remote branch or tag. This option can be specified multiple times",
    "Cli-GitPullUnshallowDescription": "If the source repository is shallow, fetch as much as possible so that the current repository has the same history as the source repository",
    "Cli-GitPullUpdateShallowDescription": "By default when fetching from a shallow repository, git fetch refuses refs that require updating .git/shallow",
    "Cli-GitPullNegotiationTipDescription": "By default, Git will report, to the server, commits reachable from all local refs to find common commits in an attempt to reduce the size of the to-be-received packfile",
    "Cli-GitPullDryRunDescription": "Show what would be done, without making any changes",
    "Cli-GitPullForceDescription": "This option overrides that check",
    "Cli-GitPullKeepDescription": "Keep downloaded pack",
    "Cli-GitPullPruneDescription": "Before fetching, remove any remote-tracking references that no longer exist on the remote",
    "Cli-GitPullPruneTagsDescription": "Before fetching, remove any local tags that no longer exist on the remote if --prune is enabled",
    "Cli-GitPullNoTagsDescription": "By default, tags that point at objects that are downloaded from the remote repository are fetched and stored locally. This option disables this automatic tag following",
    "Cli-GitPullRefMapDescription": "When fetching refs listed on the command line, use the specified refspec (can be given more than once) to map the refs to remote-tracking branches, instead of the values of remote.*.fetch configuration variables for the remote repository",
    "Cli-GitPullTagsDescription": "By default, tags that point at objects that are downloaded from the remote repository are fetched and stored locally. This option disables this automatic tag following",
    "Cli-GitPullRecurseSubmodulesDescription": "When fetching refs listed on the command line, use the specified refspec (can be given more than once) to map the refs to remote-tracking branches, instead of the values of remote.*.fetch configuration variables for the remote repository",
    "Cli-GitPullNoRecurseSubmodulesDescription": "Disable recursive fetching of submodules (this has the same effect as using the --recurse-submodules=no option)",
    "Cli-GitPullJobsDescription": "Number of parallel children to be used for all forms of fetching",
    "Cli-GitPullSetUpstreamDescription": "If the remote is fetched successfully, add upstream (tracking) reference, used by argument-less git-pull[1] and other commands",
    "Cli-GitPullUploadPackDescription": "When given, and the repository to fetch from is handled by git fetch-pack, --exec=<upload-pack> is passed to the command to specify non-default path for the command run on the other end",
    "Cli-GitPullProgressDescription": "Progress status is reported on the standard error stream by default when it is attached to a terminal, unless -q is specified",
    "Cli-GitPullServerOptionDescription": "Transmit the given string to the server when communicating using protocol version 2. The given string must not contain a NUL or LF character",
    "Cli-GitPullShowForcedUpdatesDescription": "By default, git checks if a branch is force-updated during fetch. This can be disabled through fetch.showForcedUpdates, but the --show-forced-updates option guarantees this check occurs",
    "Cli-GitPullNoShowForcedUpdatesDescription": "By default, git checks if a branch is force-updated during fetch. Pass --no-show-forced-updates or set fetch.showForcedUpdates to false to skip this check for performance reasons",
    "Cli-GitPullIpV4Description": "Use IPv4 addresses only, ignoring IPv6 addresses",
    "Cli-GitPullIpV6Description": "Use IPv6 addresses only, ignoring IPv4 addresses",
    "Cli-GitDiffDescription": "Show changes between commits, commit and working tree, etc",
    "Cli-GitDiffStagedDescription": "Show difference between the files in the staging area and the latest version",
    "Cli-GitResetDescription": "Reset current HEAD to the specified state",
    "Cli-GitResetKeepDescription": "Safe: files which are different between the current HEAD and the given commit. Will abort if there are uncommitted changes",
    "Cli-GitResetSoftDescription": "remove the last commit from the current branch, but the file changes will stay in your working tree",
    "Cli-GitResethardDescription": "⚠️WARNING: you will lose all uncommitted changes in addition to the changes introduced in the last commit",
    "Cli-GitResethardToHeadDescription": "Reset back to any number of commits",
    "Cli-GitResetMixedDescription": "keep the changes in your working tree but not on the index",
    "Cli-GitResetMixedToHeadDescription": "Reset back any number of commits",
    "Cli-GitResetMergeDescription": "Resets the index and updates the files in the working tree that are different between 'commit' and HEAD",
    "Cli-GitLogDescription": "Show commit logs",
    "Cli-GitLogFollowDescription": "Show history of given file",
    "Cli-GitLogQuietDescription": "Suppress diff output",
    "Cli-GitLogSourceDescription": "Show source",
    "Cli-GitLogOnelineDescription": "Show each commit as a single line ",
    "Cli-GitRemoteDescription": "Manage remote repository",
    "Cli-GitRemoteAddDescription": "添加 remote repo ",
    "Cli-GitRemoteSetHeadDescription": "Sets or deletes the default branch",
    "Cli-GitRemoteRmDescription": "Removes given remote [name]",
    "Cli-GitRemoteGetUrlDescription": "Retrieves the URLs for a remote",
    "Cli-GitRemoteSetUrlDescription": "Changes the URLs for the remote",
    "Cli-GitRemoteShowDescription": "Gives some information about the remote [name]",
    "Cli-GitRemotePruneDescription": "Equivalent to git fetch --prune [name], except that no new references will be fetched",
    "Cli-GitRemotePruneDryRunDescription": "Do not delete anything, but show what would be deleted",
    "Cli-GitRemoteUpdateDescription": "Fetch updates for remotes or remote groups in the repository as defined by remotes.<group> or remotes<name>",
    "Cli-GitRemoteUpdatePruneDescription": "Prune remotes after fetching",
    "Cli-GitRemoteFetchDescription": "Fetch after remote info is added",
    "Cli-GitRemoteTagsDescription": "Import tags from remote",
    "Cli-GitRemoteVerboseDescription": "Show more information about the refspecs processed",
    "Cli-GitFetchDescription": "Download objects and refs from another repository",
    "Cli-GitFetchAllDescription": "Fetch all remotes",
    "Cli-GitFetchAppendDescription": "Append ref names and object names of fetched refs to the existing contents of .git/FETCH_HEAD",
    "Cli-GitFetchAtomicDescription": "Use an atomic transaction to update local refs. Either all refs are updated, or on error, no refs are updated.",
    "Cli-GitFetchDepthDescription": "Limit fetching to the specified number of commits from the tip of each remote branch history",
    "Cli-GitFetchDeepenDescription": "Similar to --depth, except it specifies the number of commits from the current shallow boundary instead of from the tip of each remote branch history",
    "Cli-GitFetcShallowSinceDescription": "Deepen or shorten the history of a shallow repository to include all reachable commits after <date>",
    "Cli-GitFetchShallowExcludeDescription": "Deepen or shorten the history of a shallow repository to exclude commits reachable from a specified remote branch or tag. This option can be specified multiple times",
    "Cli-GitFetchUnshallowDescription": "If the source repository is shallow, fetch as much as possible so that the current repository has the same history as the source repository",
    "Cli-GitFetchUpdateShallowDescription": "By default when fetching from a shallow repository, git fetch refuses refs that require updating .git/shallow",
    "Cli-GitFetchNegotiationDescription": "By default, Git will report, to the server, commits reachable from all local refs to find common commits in an attempt to reduce the size of the to-be-received packfile",
    "Cli-GitFetchDryRunDescription": "Show what would be done, without making any changes.",
    "Cli-GitFetchWriteHeadDescription": "Write the list of remote refs fetched in the FETCH_HEAD file directly under $GIT_DIR. This is the default",
    "Cli-GitFetchNotWriteHeadDescription": "Tells Git not to write the file",
    "Cli-GitFetcForceDescription": "This option overrides that check",
    "Cli-GitFetchKeepDescription": "Keep downloaded pack.",
    "Cli-GitFetchMultipleDescription": "Allow several <repository> and <group> arguments to be specified. 否 <refspec>s may be specified.",
    "Cli-GitFetchMaintenanceDescription": "Run git maintenance run --auto at the end to perform automatic repository maintenance if",
    "Cli-GitFetchNoMaintenanceDescription": "Don't run git maintenance run --auto at the end to perform automatic repository maintenance",
    "Cli-GitFetchWriteGraphDescription": "Write a commit-graph after fetching. This overrides the config setting fetch.write提交Graph",
    "Cli-GitFetchNotWriteGraphDescription": "Don't write a commit-graph after fetching. This overrides the config setting fetch.write提交Graph",
    "Cli-GitFetchPruneDescription": "Before fetching, remove any remote-tracking references that no longer exist on the remote",
    "Cli-GitFetchPruneTagsDescription": "Before fetching, remove any local tags that no longer exist on the remote if --prune is enabled",
    "Cli-GitFetchNotTagsDescription": "By default, tags that point at objects that are downloaded from the remote repository are fetched and stored locally. This option disables this automatic tag following",
    "Cli-GitFetchRefmapDescription": "When fetching refs listed on the command line, use the specified refspec (can be given more than once) to map the refs to remote-tracking branches, instead of the values of remote.*.fetch configuration variables for the remote repository",
    "Cli-GitFetchTagsDescription": "By default, tags that point at objects that are downloaded from the remote repository are fetched and stored locally. This option disables this automatic tag following",
    "Cli-GitFetchJobsDescription": "Number of parallel children to be used for all forms of fetching.",
    "Cli-GitFetchNoSubmodulesDescription": "Disable recursive fetching of submodules (this has the same effect as using the --recurse-submodules=no option).",
    "Cli-GitFetchSetUpstreamDescription": "If the remote is fetched successfully, add upstream (tracking) reference, used by argument-less git-pull1 and other commands.",
    "Cli-GitFetchSubmodulesDescription": "Prepend <path> to paths printed in informative messages such as 'Fetching submodule foo'. This option is used internally when recursing over submodules.",
    "Cli-GitFetchUpdateHeadDescription": "By default git fetch refuses to update the head which corresponds to the current branch. This flag disables the check. This is purely for the internal use for git pull to communicate with git fetch, and unless you are implementing your own Porcelain you are not supposed to use it.",
    "Cli-GitFetchUploadPackDescription": "When given, and the repository to fetch from is handled by git fetch-pack, --exec=<upload-pack> is passed to the command to specify non-default path for the command run on the other end.",
    "Cli-GitFetchQuietDescription": "Pass --quiet to git-fetch-pack and silence any other internally used git commands. Progress is not reported to the standard error stream.",
    "Cli-GitFetchVerboseDescription": "Be verbose.",
    "Cli-GitFetchprogressDescription": "Progress status is reported on the standard error stream by default when it is attached to a terminal, unless -q is specified.",
    "Cli-GitFetchOptionDescription": "Transmit the given string to the server when communicating using protocol version 2. The given string must not contain a NUL or LF character. ",
    "Cli-GitFetchShowForcedDescription": "By default, git checks if a branch is force-updated during fetch. This can be disabled through fetch.showForcedUpdates, but the --show-forced-updates option guarantees this check occurs",
    "Cli-GitFetchNotShowForcedDescription": "By default, git checks if a branch is force-updated during fetch. Pass --no-show-forced-updates or set fetch.showForcedUpdates to false to skip this check for performance reasons.",
    "Cli-GitIPV4Description": "Use IPv4 addresses only, ignoring IPv6 addresses.",
    "Cli-GitIPV6Description": "Use IPv6 addresses only, ignoring IPv4 addresses.",
    "Cli-GitFetchStdinDescription": "Use binary search to find the commit that introduced a bug",
    "Cli-GitStashDescription": "Stash the changes in a dirty working directory away",
    "Cli-GitStashPushDescription": "保存 your local modifications to a new stash entry and roll them back to HEAD.",
    "Cli-GitStashPushPatchDescription": "Interactively select hunks from the diff between HEAD and the working tree to be stashed.",
    "Cli-GitStashPushKeepIndexDescription": "All changed already added to the index are left intact.",
    "Cli-GitStashPushIncludeDescription": "All untracked files are also stashed and then cleaned up.",
    "Cli-GitStashPushAllDescription": "All ignored and untracked files are also stashed.",
    "Cli-GitStashPushMessageDescription": "Use the given <msg> as the stash message.",
    "Cli-GitStashPathspecFromFileDescription": "Pathspec is passed in <file> instead of commandline args",
    "Cli-GitStashHyphenDescription": "Separates pathsec from options for disambiguation purposes.",
    "Cli-GitStashShowDescription": "Show the changes recorded in the stash entry as a diff.",
    "Cli-GitStashSaveDescription": "Stash the changes in a dirty working directory away",
    "Cli-GitStashSavePatchDescription": "Interactively select hunks from the diff between HEAD and the working tree to be stashed.",
    "Cli-GitStashSaveIndexDescription": "All changed already added to the index are left intact.",
    "Cli-GitStashSaveIncludeUntrackedDescription": "All untracked files are also stashed and then cleaned up.",
    "Cli-GitStashSaveAllDescription": "All ignored and untracked files are also stashed.",
    "Cli-GitQuietOptionDescription": "Quiet, suppress feedback messages from command line.",
    "Cli-GitStashPopDescription": "Restores the most recently stashed files",
    "Cli-GitStashPopIndexDescription": "Tries to reinstate not only the working tree's changes, but also the index's ones.",
    "Cli-GitStashListDescription": "Lists all stashed changesets",
    "Cli-GitStashDropDescription": "Discards the most recently stashed changeset",
    "Cli-GitStashClearDescription": "Remove all the stash entries.",
    "Cli-GitStashApplyDescription": "Like pop, but do not remove the state from the stash list.",
    "Cli-GitStashApplyIndexDescription": "Tries to reinstate not only the working tree's changes, but also the index's ones.",
    "Cli-GitStashBranchDescription": "创建s and checks out a new branch named ",
    "Cli-GitStashCreateDescription": "创建s a stash with the message <msg>",
    "Cli-GitStashStoreDescription": "Store a given stash in the stash ref., updating the staft reflog.",
    "Cli-GitStashStoreMessageDescription": "Use the given <msg> as the stash message.",
    "Cli-GitReflogDescription": "Show history of events with hashes",
    "Cli-GitCloneDescription": "Clone a repository into a new directory",
    "Cli-GitInitDescription": "创建 an empty Git repository or reinitialize an existing one",
    "Cli-GitMoveDescription": "Move or rename a file, a directory, or a symlink",
    "Cli-GitRemoveDescription": "Remove files from the working tree and from the index",
    "Cli-GitRemoveHyphenDescription": "used to separate command-line options from the list of files",
    "Cli-GitRemoveCachedDescription": "only remove from the index",
    "Cli-GitRemoveForceDescription": "override the up-to-date check",
    "Cli-GitRemoveRecursiveDescription": "allow recursive removal",
    "Cli-GitGrepDescription": "Print lines matching a pattern",
    "Cli-GitShowCommandDescription": "Show various types of objects",
    "Cli-GitBranchDescription": "List, create, or delete branches",
    "Cli-GitBranchAllDescription": "list both remote-tracking and local branches",
    "Cli-GitBranchDeleteDescription": "delete fully merged branch",
    "Cli-GitBranchDeleteDDescription": "delete branch (even if not merged)",
    "Cli-GitBranchRenameDescription": "move/rename current branch and its reflog",
    "Cli-GitBranchMoveDescription": "move/rename current branch, even if target exists",
    "Cli-GitBranchcDescription": "copy a branch and its reflog",
    "Cli-GitBranchCDescription": "copy a branch, even if target exists",
    "Cli-GitBranchListDescription": "list branch names",
    "Cli-GitBranchCreateReflogDescription": "create the branch's reflog",
    "Cli-GitBranchEditDescription": "edit the description for the branch",
    "Cli-GitBranchForceDescription": "force creation, move/rename, deletion",
    "Cli-GitBranchMergedDescription": "print only branches that are merged",
    "Cli-GitBranchNotMergedDescription": "print only branches that are not merged",
    "Cli-GitBranchColumDescription": "list branches in columns [=<style>]",
    "Cli-GitBranchSortDescription": "field name to sort on",
    "Cli-GitBranchPointsAtDescription": "print only branches of the object",
    "Cli-GitBranchIgnoreDescription": "sorting and filtering are case insensitive",
    "Cli-GitBranchFormatDescription": "format to use for the output",
    "Cli-GitCheckoutDescription": "Switch branches or restore working tree files",
    "Cli-GitCheckoutbDescription": "create and checkout a new branch",
    "Cli-GitCheckoutBDescription": "create/reset and checkout a branch",
    "Cli-GitCheckoutlDescription": "create reflog for new branch",
    "Cli-GitCheckoutDetachDescription": "detach HEAD at named commit",
    "Cli-GitCheckoutTrackDescription": "set upstream info for new branch",
    "Cli-GitCheckoutOrphanDescription": "new unparented branch",
    "Cli-GitCheckoutOursDescription": "checkout our version for unmerged files",
    "Cli-GitCheckoutTheirsDescription": "checkout their version for unmerged files",
    "Cli-GitCheckoutForceDescription": "force checkout (throw away local modifications)",
    "Cli-GitCheckoutMergeDescription": "perform a 3-way merge with the new branch",
    "Cli-GitCheckoutOverwriteIgnoredDescription": "update ignored files (default)",
    "Cli-GitCheckoutConflictDescription": "conflict style (merge or diff3)",
    "Cli-GitCheckoutPatchDescription": "select hunks interactively",
    "Cli-GitCheckoutToBranchDescription": "分支 to switch to",
    "Cli-GitMergeDescription": "Join two or more development histories together",
    "Cli-GitMergeCommitDescription": "Perform the merge and commit the result",
    "Cli-GitMergeNoCommitDescription": "Perform the merge and stop just before creating a merge commit",
    "Cli-GitMergeEditDescription": "Invoke an editor before committing successful mechanical merge to further edit the auto-generated merge message",
    "Cli-GitMergeNoEditDescription": "Used to accept the auto-generated message",
    "Cli-GitMergeCleanupDescription": "This option determines how the merge message will be cleaned up before committing",
    "Cli-GitMergeBranchDescription": "分支 to merge with",
    "Cli-GitMergeMessageDescription": "Set the commit message to be used for the merge commit (in case one is created)",
    "Cli-GitMergeFastForwardDescription": "Fast-forward (Default): when possible resolve the merge as a fast-forward (only update the branch pointer to match the merged branch; do not create a merge commit). When not possible, create a merge commit",
    "Cli-GitMergeNoFastForwardDescription": "否-fast-forward: create a merge commit in all cases, even when the merge could instead be resolved as a fast-forward",
    "Cli-GitMergeFastForwardOnlyDescription": "Fast-forward-only: Resolve the merge as a fast-forward when possible. When not possible, refuse to merge and exit with a non-zero status",
    "Cli-GitMergeAbortDescription": "Abort the current conflict resolution process, and try to reconstruct the pre-merge state. If an autostash entry is present, apply it to the worktree",
    "Cli-GitMergeQuitDescription": "Forget about the current merge in progress. Leave the index and the working tree as-is. If MERGE_AUTOSTASH is present, the stash entry will be saved to the stash list",
    "Cli-GitMergeContinueDescription": "After a git merge stops due to conflicts you can conclude the merge by running git merge --continue after resolving conflicts",
    "Cli-GitMergeGpgSignDescription": "GPG-sign the resulting merge commit, 'Keyid' is optional",
    "Cli-GitMergeGpgSignKeyDescription": "GPG-sign the resulting merge commit, '=Keyid' is optional",
    "Cli-GitMergeNoGpgSignDescription": "Do not GPG-sign the resulting merge commit",
    "Cli-GitMergeLogDescription": "In addition to branch names, populate the log message with one-line descriptions from at most <n> actual commits that are being merged",
    "Cli-GitMergeNoLogDescription": "Do not list one-line descriptions from the actual commits being merged",
    "Cli-GitMergeSignOffDescription": "添加 a Signed-off-by trailer by the committer at the end of the commit log message",
    "Cli-GitMergeNoSignOffDescription": "Can be used to countermand an earlier --signoff option on the command line",
    "Cli-GitMergeStatDescription": "Show a diffstat at the end of the merge",
    "Cli-GitMergeNoStat": "Do not show a diffstat at the end of the merge",
    "Cli-GitMergeVerifySignaturesDescription": "Verify that the tip commit of the side branch being merged is signed with a valid key, if not the merge is aborted",
    "Cli-GitMergeNoVerifySignaturesDescription": "Do not verify signature if it was previously configured to do so",
    "Cli-GitMergeVerboseDescription": "Be verbose",
    "Cli-GitMergeProgressDescription": "Turn progress on explicitly",
    "Cli-GitMergeNoProgressDescription": "Turn progress off explicitly",
    "Cli-GitMergeAutostashDescription": "Automatically create a temporary stash entry before the operation begins, and apply it after the operation ends",
    "Cli-GitMergeNoAutostashDescription": "Do not create a temporary stash entry",
    "Cli-GitMergeAllowUnrelatedHistoriesDescription": "Allow to merge histories that do not share a common ancestor",
    "Cli-GitMergeFileDescription": "合并 commit message to be use read by file given",
    "Cli-GitMergeReReReDescription": "Allow the rerere mechanism to update the index with the result of auto-conflict resolution if possible",
    "Cli-GitMergeNoReReReDescription": "Do not let the rerere mechanism to update the index",
    "Cli-GitMergeOverWriteIgnoreDescription": "Silently overwrite ignored files from the merge result. default behavior",
    "Cli-GitMergeNoOverWriteIgnoreDescription": "Do not overwrite ignored files",
    "Cli-GitTagDescription": "创建, list, delete or verify a tag object signed with GPG",
    "Cli-GitTagListDescription": "List tag names",
    "Cli-GitTagNDescription": "Print <n> lines of each tag message",
    "Cli-GitTagDeleteDescription": "删除 tags",
    "Cli-GitTagVerifyDescription": "Verify tags",
    "Cli-GitTagAnnotateDescription": "Annotated tag, needs a message",
    "Cli-GitTagMessageDescription": "Tag message",
    "Cli-GitTagNameDescription": "Select a tag",
    "Cli-GitGcDescription": "Cleanup unnecessary files and optimize the local repository",
    "Cli-GitGcAggressiveDescription": "More aggressively optimize",
    "Cli-GitGcAutoDescription": "Check whether housekeeping is required",
    "Cli-GitGcPruneDescription": "Prune loose objects older than given date. --prune is on by default",
    "Cli-GitGcPruneNowDescription": "Prunes loose objects regardless of their age and increases the risk of corruption if another process is writing to the repository concurrently",
    "Cli-GitGcNoPruneDescription": "Do not prune any loose objects.",
    "Cli-GitGcQuietDescription": "Suppress progress reporting",
    "Cli-GitGcForceDescription": "Force git gc to run even if there may be another git gc instance running on this repository.",
    "Cli-GitGcKeepLargestPackDescription": "Repack all other packs except the largest pack",
    "Cli-GitFlowDescription": "GitFlow AVH Edition",
    "Cli-GitFlowHelpDescription": "Show this help",
    "Cli-GitFlowShowCommandsDescription": "Show git commands while executing them",
    "Cli-GitFlowVerboseDescription": "Verbose output",
    "Cli-GitFlowFetchDescription": "Fetch from origin before performing operation",
    "Cli-GitFlowInitDescription": "Initialize a new git repo with support for the branching mode",
    "Cli-GitFlowInitDefaultsDescription": "Use default branch naming conventions",
    "Cli-GitFlowInitForceDescription": "Force setting of gitflow branches, even if already configured",
    "Cli-GitFlowInitFeatureDescription": "Feature branches",
    "Cli-GitFlowInitBugfixDescription": "Bugfix branches",
    "Cli-GitFlowInitReleaseDescription": "Release branches",
    "Cli-GitFlowInitHotfixDescription": "Hotfix branches",
    "Cli-GitFlowInitSupportDescription": "Support branches",
    "Cli-GitFlowInitTagDescription": "Tag branches",
    "Cli-GitFlowInitLocalDescription": "Config file location",
    "Cli-GitFlowInitGlobalDescription": "Use repository config file",
    "Cli-GitFlowInitSystemDescription": "Use global config file",
    "Cli-GitFlowInitFileDescription": "Use given config file",
    "Cli-GitFlowManageDescription": "Manage your {0} branches",
    "Cli-GitFlowStartDescription": "Start {0} branches",
    "Cli-GitFlowFinishDescription": "Finish {0} branches",
    "Cli-GitFlowPreserveMergesDescription": "Preserve merges while rebasing",
    "Cli-GitFlowFinishPushDescription": "推送 to origin after performing finish",
    "Cli-GitFlowFinishKeepDescription": "Keep branch after performing finish",
    "Cli-GitFlowFinishKeepRemoteDescription": "Keep the remote branch",
    "Cli-GitFlowFinishKeepLocalDescription": "Keep the local branch",
    "Cli-GitFlowFinishForceDeleteDescription": "Force delete feature after branch finish",
    "Cli-GitFlowFinishSquashDescription": "Squash during merge",
    "Cli-GitFlowFinishFFDescription": "Never fast-forward during the merge",
    "Cli-GitFlowPublishDescription": "Publish {0} branches",
    "Cli-GitFlowTrackDescription": "Track {0} branches",
    "Cli-GitFlowDiffDescription": "Diff {0} branches",
    "Cli-GitFlowRebaseDescription": "Rebase {0} branches",
    "Cli-GitFlowRebaseInteractiveDescription": "Do an interactive rebase",
    "Cli-GitFlowCheckoutDescription": "Checkout {0} branches",
    "Cli-GitFlowPullDescription": "拉取 {0} branches",
    "Cli-GitFlowDeleteDescription": "删除 given {0} branches",
    "Cli-GitFlowDeleteForceDescription": "Force deletion",
    "Cli-GitFlowDeleteRemoteDescription": "删除 remote branch",
    "Cli-GitFlowVersionDescription": "Shows version information",
    "Cli-GitFlowLogDescription": "Show log deviating from base branch",
    "Cli-GitFlowConfigDescription": "Manage your git-flow configuration",
    "Cli-GitFlowConfigSetDescription": "Set the git-flow configuration option to the given value",
    "Cli-GitFlowConfigBaseDescription": "Set the given <base> for the given <branch>",
    "Cli-GitFlowRenameDescription": "Rename a given {0} branch",
    "Cli-GitFlowReleaseBranchDescription": "Release a branch [<name>], if a name is not given it defaults to the develop branch, and use the given version <version>",
    "Cli-GitFlowReleaseBranchSignDescription": "Sign the release tag cryptographically",
    "Cli-GitFlowReleaseBranchSigningKeyDescription": "Use the given GPG-key for the digital signature (implies -s)",
    "Cli-GitFlowReleaseBranchMessageDescription": "Use the given tag message",
    "Cli-GitFlowReleaseBranchMessageFileDescription": "Use the contents of the given file as a tag message",
    "Cli-GitFlowReleaseBranchPushDescription": "Use the contents of the given file as a tag message",
    "Cli-GitFlowReleaseBranchTagDescription": "Use the contents of the given file as a tag message",
    "Cli-GitFlowReleaseSquashDescription": "Squash release during merge",
    "Cli-PackageSagasWorkspaces": "Workspaces",
    "Cli-YarnDescription": "Manage packages and run scripts",
    "Cli-YarnDisablePNPDescription": "Disable the Plug'n'Play installation",
    "Cli-YarnStrictSemverDescription": "Removes fuzzy characters from listed dependencies in your package.json",
    "Cli-YarnEmojiDescription": "Enable emoji in output (default: true)",
    "Cli-YarnEnablePNPDescription": "Enable the Plug'n'Play installation",
    "Cli-YarnFlatDescription": "Only allow one version of a package",
    "Cli-YarnFocusDescription": "Focus on a single workspace by installing remote copies of its sibling workspaces",
    "Cli-YarnForceDescription": "Install and build packages even if they were built before, overwrite lockfile",
    "Cli-YarnFrozenLockfileDescription": "Don't generate a lockfile and fail if an update is needed",
    "Cli-YarnGlobalFolderDescription": "Specify a custom folder to store global packages",
    "Cli-YarnHarDescription": "保存 HAR output of network traffic",
    "Cli-YarnIgnoreEnginesDescription": "Ignore engines check",
    "Cli-YarnIgnoreOptionalDescription": "Ignore optional dependencies",
    "Cli-YarnIgnorePlatformDescription": "Ignore platform checks",
    "Cli-YarnIgnoreScriptsDescription": "Don't run lifecycle scripts",
    "Cli-YarnJsonDescription": "Format Yarn log messages as lines of JSON (see jsonlines.org)",
    "Cli-YarnLinkDuplicatesDescription": "创建 hardlinks to the repeated modules in node_modules",
    "Cli-YarnLinkFolderDescription": "Specify a custom folder to store global links",
    "Cli-YarnModulesFolderDescription": "Rather than installing modules into the node_modules folder relative to the cwd, output them here",
    "Cli-YarnMutexDescription": "Use a mutex to ensure only one yarn instance is executing",
    "Cli-YarnNetworkConcurrencyDescription": "Maximum number of concurrent network requests",
    "Cli-YarnNetworkTimeoutDescription": "TCP timeout for network requests",
    "Cli-YarnNoBinLinksDescription": "Don't generate bin links when setting up packages",
    "Cli-YarnNoDefaultSrcDescription": "Prevent Yarn from automatically detecting yarnrc and npmrc files",
    "Cli-YarnNoLockfileDescription": "Don't read or generate a lockfile",
    "Cli-YarnNonInteractiveDescription": "Do not show interactive prompts",
    "Cli-YarnNoNodeVersionCheckDescription": "Do not warn when using a potentially unsupported 否de version",
    "Cli-YarnNoProgressDescription": "Disable progress bar",
    "Cli-YarnOfflineDescription": "Trigger an error if any required dependencies are not available in local cache",
    "Cli-YarnOTPDescription": "One-time password for two factor authentication",
    "Cli-YarnPreferOfflineDescription": "Use network only if dependencies are not available in local cache",
    "Cli-YarnPreferredCacheFolderDescription": "Specify a custom folder to store the yarn cache if possible",
    "Cli-YarnPureLockfileDescription": "Don't generate a lockfile",
    "Cli-YarnRegistryDescription": "Override configuration registry",
    "Cli-YarnSilentDescription": "Skip Yarn console logs, other types of logs (script output) will be printed",
    "Cli-YarnScriptsPrependNodePathDescription": "Prepend the node executable dir to the PATH in scripts",
    "Cli-YarnSkipIntegrityCheckDescription": "Run install without checking if node_modules is installed",
    "Cli-YarnVersionDescription": "Output the version number",
    "Cli-YarnHelpDescription": "Output usage information",
    "Cli-YarnExecDescription": "Executes a shell script within the context of the root directory of the active workspace using the portable shell.",
    "Cli-YarnUseYarnrcDescription": "Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )",
    "Cli-YarnVerboseDescription": "Output verbose messages on internal operations",
    "Cli-YarnCheckFilesDescription": "Install will verify file tree of packages for consistency",
    "Cli-YarnProductionDescription": "Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead",
    "Cli-YarnUpdateChecksumsDescription": "Update package checksums from current repository",
    "Cli-YarnCacheFolderDescription": "Specify a custom folder that must be used to store the yarn cache",
    "Cli-YarnHttpsProxyDescription": "创建s a https proxy with the given <host>",
    "Cli-YarnProxyDescription": "创建s a proxy with the given <host>",
    "Cli-YarnCwdDescription": "Working directory to use",
    "Cli-YarnAddIgnoreWSDescription": "Required to run yarn add inside a workspace root",
    "Cli-YarnAddDevDescription": "保存 package to your 'devDependencies'",
    "Cli-YarnAddPeerDescription": "保存 package to your 'peerDependencies'",
    "Cli-YarnAddOptionalDescription": "保存 package to your 'optionalDependencies'",
    "Cli-YarnAddExactDescription": "Install exact version",
    "Cli-YarnAddTildeDescription": "Install most recent release with the same minor version",
    "Cli-YarnAddAuditDescription": "Run vulnerability audit on installed packages",
    "Cli-YarnAuditDescription": "Perform a vulnerability audit against the installed packages",
    "Cli-YarnAuditSummaryDescription": "Only print the summary",
    "Cli-YarnAuditGroupsDescription": "Only audit dependencies from listed groups. Default: devDependencies, dependencies, optionalDependencies",
    "Cli-YarnAuditLevelDescription": "Only print advisories with severity greater than or equal to one of the following: info|low|moderate|high|critical. Default: info",
    "Cli-YarnAutocleanDescription": "Cleans and removes unnecessary files from package dependencies",
    "Cli-YarnAutocleanInitDescription": "创建s the .yarnclean file if it does not exist, and adds the default entries",
    "Cli-YarnAutocleanForceDescription": "If a .yarnclean file exists, run the clean process",
    "Cli-YarnBinDescription": "Displays the location of the yarn bin folder",
    "Cli-YarnCacheDescription": "Yarn cache list will print out every cached package",
    "Cli-YarnCacheCleanDescription": "Clear global cache",
    "Cli-YarnCacheDirDescription": "Print yarn's global cache path",
    "Cli-YarnCacheListDescription": "Print out every cached package",
    "Cli-YarnCacheListPatternDescription": "Filter cached packages by pattern",
    "Cli-YarnConfigDescription": "Configure yarn",
    "Cli-YarnConfigSetDescription": "Sets the config key to a certain value",
    "Cli-YarnConfigSetGlobalDescription": "Set global config",
    "Cli-YarnConfigGetDescription": "Print the value for a given key",
    "Cli-YarnConfigDeleteDescription": "删除s a given key from the config",
    "Cli-YarnConfigListDescription": "Displays the current configuration",
    "Cli-YarnCreateDescription": "创建s new projects from any create-* starter kits",
    "Cli-YarnConfigGenerateLockEntryDescription": "Generates a lock file entry",
    "Cli-YarnGenerateLockEntryManifestDescription": "Specify which manifest file to use for generating lock entry",
    "Cli-YarnGenerateLockEntryResolvedDescription": "Generate from <*.tgz>#<hash>",
    "Cli-YarnGlobalDescription": "Manage yarn globally",
    "Cli-YarnGlobalAddDescription": "Install globally packages on your operating system",
    "Cli-YarnGlobalBinDescription": "Displays the location of the yarn global bin folder",
    "Cli-YarnGlobalDirDescription": "Displays the location of the global installation folder",
    "Cli-YarnGlobalLsDescription": "List globally installed packages (deprecated)",
    "Cli-YarnGlobalListDescription": "List globally installed packages",
    "Cli-YarnGlobalRemoveDescription": "Remove globally installed packages",
    "Cli-YarnGlobalRemoveIgnoreWsRootDescription": "Required to run yarn remove inside a workspace root",
    "Cli-YarnGlobalUpgradeDescription": "Upgrade globally installed packages",
    "Cli-YarnGlobalUpgradeScopeDescription": "Upgrade packages under the specified scope",
    "Cli-YarnGlobalUpgradeLatestDescription": "List the latest version of packages",
    "Cli-YarnGlobalUpgradeExactDescription": "Install exact version. Only used when --latest is specified",
    "Cli-YarnGlobalUpgradePatternDescription": "Upgrade packages that match pattern",
    "Cli-YarnGlobalUpgradeTildeDescription": "Install most recent release with the same minor version. Only used when --latest is specified",
    "Cli-YarnGlobalUpgradeCaretDescription": "Install most recent release with the same major version. Only used when --latest is specified",
    "Cli-YarnGlobalUpgradeAuditDescription": "Run vulnerability audit on installed packages",
    "Cli-YarnGlobalUpgradeInteractiveDescription": "Display the outdated packages before performing any upgrade",
    "Cli-YarnGlobalPrefixDescription": "Bin prefix to use to install binaries",
    "Cli-YarnImportDescription": "Generates yarn.lock from an npm package-lock.json file",
    "Cli-YarnInfoDescription": "Show information about a package",
    "Cli-YarnInitDescription": "Interactively creates or updates a package.json file",
    "Cli-YarnInitYesDescription": "Use default options",
    "Cli-YarnInitPrivateDescription": "Use default options and private true",
    "Cli-YarnInitInstallDescription": "Install a specific Yarn release",
    "Cli-YarnInitYarn2Description": "Generates the project using Yarn 2",
    "Cli-YarnInstallDescription": "Install all the dependencies listed within package.json",
    "Cli-YarnInstallAuditDescription": "Run vulnerability audit on installed packages",
    "Cli-YarnLicensesDescription": "List, in alphabetical order, all of the packages that were installed by yarn or yarn install",
    "Cli-YarnLicensesListDescription": "List licenses for installed packages",
    "Cli-YarnLicensesGenerateDescription": "List of licenses from all the packages",
    "Cli-YarnLinkDescription": "Symlink a package folder during development",
    "Cli-YarnListDescription": "Lists all dependencies for the current working directory",
    "Cli-YarnListDepthDescription": "Restrict the depth of the dependencies",
    "Cli-YarnListPatternDescription": "Filter the list of dependencies by the pattern",
    "Cli-YarnLoginDescription": "Store registry username and email",
    "Cli-YarnLogoutDescription": "Clear registry username and email",
    "Cli-YarnNodeDescription": "Runs 否de and makes sure to call it in a way that's compatible with the current project",
    "Cli-YarnOutdatedDescription": "Checks for outdated package dependencies",
    "Cli-YarnOwnerDescription": "Manage package owners",
    "Cli-YarnOwnerListDescription": "Lists all of the owners of a package",
    "Cli-YarnOwnerAddDescription": "添加s the user as an owner of the package",
    "Cli-YarnOwnerRemoveDescription": "Removes the user as an owner of the package",
    "Cli-YarnPackDescription": "创建s a compressed gzip archive of package dependencies",
    "Cli-YarnPackFilenameDescription": "创建s a compressed gzip archive of package dependencies and names the file filename",
    "Cli-YarnPoliciesDescription": "Defines project-wide policies for your project",
    "Cli-YarnPublishDescription": "Publishes a package to the npm registry",
    "Cli-YarnPublishMajorDescription": "Auto-increment major version number",
    "Cli-YarnPublishMinorDescription": "Auto-increment minor version number",
    "Cli-YarnPublishPatchDescription": "Auto-increment patch version number",
    "Cli-YarnPublishPremajorDescription": "Auto-increment premajor version number",
    "Cli-YarnPublishPreminorDescription": "Auto-increment preminor version number",
    "Cli-YarnPublishPrepatchDescription": "Auto-increment prepatch version number",
    "Cli-YarnPublishPrereleaseDescription": "Auto-increment prerelease version number",
    "Cli-YarnPublishPreidDescription": "添加 a custom identifier to the prerelease",
    "Cli-YarnPublishMessageDescription": "Message",
    "Cli-YarnPublishNoGitTagDescription": "否 git tag version",
    "Cli-YarnPublishNoCommitHooksDescription": "Bypass git hooks when committing new version",
    "Cli-YarnPublishAccessDescription": "Access",
    "Cli-YarnPublishTagDescription": "Tag",
    "Cli-YarnRemoveDescription": "Remove installed package",
    "Cli-YarnRemoveIgnoreWsDescription": "Required to run yarn remove inside a workspace root",
    "Cli-YarnRunDescription": "Runs a defined package script",
    "Cli-YarnRunEnvDescription": "Lists enviornment variables available to scripts",
    "Cli-YarnTagDescription": "添加, remove, or list tags on a package",
    "Cli-YarnTeamDescription": "Maintain team memberships",
    "Cli-YarnUnlinkDescription": "Unlink a previously created symlink for a package",
    "Cli-YarnUnplugDescription": "Temporarily copies a package (with an optional @range suffix) outside of the global cache for debugging purposes",
    "Cli-YarnUpgradeDescription": "Upgrades packages to their latest version based on the specified range",
    "Cli-YarnUpgradeInteractiveDescription": "Upgrades packages in interactive mode",
    "Cli-YarnUpgradeInteractiveLatestDescription": "Use the version tagged latest in the registry",
    "Cli-YarnVersionUpgradeDescription": "Update version of your package",
    "Cli-YarnVersionMajorDescription": "Auto-increment major version number",
    "Cli-YarnVersionMinorDescription": "Auto-increment minor version number",
    "Cli-YarnVersionPatchDescription": "Auto-increment patch version number",
    "Cli-YarnVersionsDescription": "Displays version information of the currently installed Yarn, 否de.js, and its dependencies",
    "Cli-YarnWhyDescription": "Show information about why a package is installed",
    "Cli-YarnWorkspaceDescription": "Manage workspace",
    "Cli-YarnWorkspacesDescription": "Show information about your workspaces",
    "Cli-YarnWorkspacesInfoDescription": "Display the workspace dependency tree of your current project",
    "Cli-YarnWorkspacesRunDescription": "Run the chosen Yarn command in each workspace",
    "GitInfo-AheadBehind": "You are {0} commits ahead, and {1} commits behind",
    "GitInfo-Ahead": "You are {0} commits ahead",
    "GitInfo-Behind": "You are {0} commits behind",
    "WorkspaceRepositories-NoLocalPath": "Unable to locate this repo on your machine",
    "WorkspaceRepositories-OpenRepo": "打开 repo",
    "WorkspaceRepositories-SelectedReposSummary": "{0} repositories selected",
    "WorkspaceRepositories-SelectedReposSummarySingular": "{0} repository selected",
    "WorkspaceRepositories-InvalidFilepath": "Invalid 文件path",
    "WorkspaceRepositories-CouldNotFindRepoAtFilepath": "Could not find repo at {0}",
    "WorkspaceRepositories-ErrorOpeningRepo": "错误 opening repo",
    "WorkspaceRepositories-RepoMaybeDeleted": "Repo is unreachable and may have been deleted",
    "WorkspaceRepositories-RepoMustBeClonedToFavorite": "仓库 must be cloned to favorite",
    "WorkspacesTab-Loading": "Loading",
    "WorkspacesTab-LoadingWorkspace": "Workspace...",
    "WorkspacesTab-LoadingWorkspaces": "Workspaces...",
    "WorkspacesTab-NewWorkspace": "New Workspace",
    "SingleWorkspaceTab-AddRepositories": "添加 repositories",
    "SingleWorkspaceTab-NoRepositoryReadMe": "This repository doesn't have a README.md",
    "SingleWorkspaceTab-Insights": "Insights",
    "AddEditWorkspace-ProjectSync": "Sync with a single Azure project",
    "AddEditWorkspace-ProjectSyncDescription": "添加s and syncs all repos from the selected project",
    "AddEditWorkspace-Direct": "Manually select Azure repos",
    "AddEditWorkspace-DirectDescription": "添加s specific repos from one or many Azure projects",
    "AddEditWorkspace-CreateCloudWorkspaceFrom": "创建 Cloud Workspace from",
    "AddEditWorkspace-CreateLocalWorkspace": "创建 Local Workspace",
    "AddEditWorkspace-Creating": "Creating...",
    "AddEditWorkspace-Description": "Description",
    "AddEditWorkspace-DescriptionPlaceholder": "Describe the purpose of the workspace",
    "AddEditWorkspace-ErrorGeneric": "错误 Saving Workspace",
    "AddEditWorkspace-ErrorMaxWorkspaces": "Workspaces limit reached",
    "AddEditWorkspace-ErrorMaxWorkspacesDescription": "You've reached the maximum number of Workspaces allowed for this account. Please remove an existing Workspace to add a new one.",
    "AddEditWorkspace-ErrorMaxTeamWorkspaces": "Team workspaces limit reached",
    "AddEditWorkspace-ErrorMaxTeamWorkspacesDescription": "You've reached the maximum number of Team Workspaces allowed for this organization. Please remove an existing Workspace to add a new one.",
    "AddEditWorkspace-ErrorMaxMachineWorkspaces": "Machine workspaces limit reached",
    "AddEditWorkspace-ErrorMaxMachineWorkspacesDescription": "You've reached the maximum number of Workspaces allowed for this machine. Please remove an existing Workspace to add a new one.",
    "AddEditWorkspace-LocalDescription": "{0} give you quick access to repos you use the most on this machine, display statuses like current branch and commits ahead/behind, allow multi-repo Git actions, and more!",
    "AddEditWorkspace-CloudDescription": "{0} are enhanced with 拉取 Request and Issue data for all repos in the Workspace. They are accessible on any machine, and can be shared with teams in your organization.",
    "AddEditWorkspace-NamePlaceholder": "Name of the workspace",
    "AddEditWorkspace-RequiredFieldsNotice": "Required Field",
    "AddEditWorkspace-SaveChanges": "保存 Changes",
    "AddEditWorkspace-Saving": "Saving...",
    "AddEditWorkspace-SearchRemoteRepos": "Search remote repositories",
    "AddEditWorkspace-SelectedRepoOne": "1 repository will be added to this workspace",
    "AddEditWorkspace-SelectedReposCount": "{0} repositories will be added to this workspace",
    "AddEditWorkspace-ClearRepoSelection": "Clear",
    "AddEditWorkspace-SelectRepos": "Select repositories to add to this workspace",
    "AddEditWorkspace-SelectLocalSyncedWorkspaceRepos": "Select the directory you keep your repos to sync with your Local Workspace",
    "AddEditWorkspace-TeamDescription": "Select the teams and members this workspace will be shared with",
    "AddEditWorkspace-CreateSuccessful": "Workspace created successfully.",
    "AddEditWorkspace-UpdateSuccessful": "Workspace updated successfully.",
    "AddEditWorkspace-Title": "创建 a GitKraken Workspace",
    "AddEditWorkspace-TitleAtEdit": "Edit Workspace",
    "AddEditWorkspace-CanShareWithTeams": "Organizations on Pro plans and above can share workspaces with teams.",
    "AddEditWorkspace-ViewPlans": "View plans",
    "AddEditWorkspace-AndUpgradeToShare": "and upgrade your account to share this workspace.",
    "AddEditWorkspace-ExtendTrial": "This will also create a new {0}-day trial your organization, giving your team more time to test paid features.",
    "AddEditWorkspace-Please": "Please",
    "AddEditWorkspace-CreateAnOrganization": "create an organization",
    "AddEditWorkspace-ToShare": "to share this workspace.",
    "AddEditWorkspace-SelectTeams": "Share with selected teams and members",
    "AddEditWorkspace-ShareWithTeams": "Select teams and members",
    "AddEditWorkspace-DoesNotHaveTeamYet": "{0} does not have any teams yet.",
    "AddEditWorkspace-CreateATeam": "创建 a team",
    "Add-EditWorkspace-CreateATeamBenefit": "to share Workspaces with others more easily.",
    "AddEditWorkspace-NotPartOfTeam": "You have not been added to any teams yet.",
    "AddEditWorkspace-JoinATeam": "Join a team",
    "AddEditWorkspace-CloudWorkspace": "Cloud Workspace",
    "AddEditWorkspace-LocalWorkspace": "Local Workspace",
    "AddEditWorkspace-OriginOfYourRemotes": "The origin of your remotes.",
    "AddEditWorkspace-ReposFromFoundIn": "{0} repositories from {1} found in",
    "AddEditWorkspace-ProviderNotFoundFor": "A provider could not be found for",
    "AddEditWorkspace-Repos": "{0} repos",
    "AddEditWorkspace-NoShareWarning": "This workspace will not be shared with anyone. Only owners and admins will be able to see this workspace.",
    "AddEditWorkspace-AddRemoveMembersWarning": "You do not have permission to add or remove other members of this workspace.",
    "WorkspaceError-AddRepositoriesTitle": "Failed to add repositories",
    "WorkspaceError-AddRepositoryToTitle": "Failed to add repository to workspace",
    "WorkspaceError-AddRepositoryMessage": "The following repository could not be added to the workspace: {0}",
    "WorkspaceError-AddRepositoriesMessage": "The following repositories could not be added to the workspace: {0}",
    "WorkspaceError-AddRepositoryToWorkspaceMessage": "The repository could not be added to the \"{0}\" workspace",
    "WorkspaceError-RemoveRepositoriesTitle": "Failed to remove repositories",
    "WorkspaceError-RemoveRepositoriesMessage": "The following repositories could not be removed from the workspace: {0}",
    "WorkspaceError-TroubleConnectingToProvider": "We are having trouble connecting to {0}. Please {1} to access this workspace.",
    "WorkspaceError-CheckSettingsForService": "check your integration settings for {0}",
    "WorkspaceError-ConnectToIntegrationToAccess": "Connect your {0} integration to access this workspace.",
    "WorkspaceError-WrongHost": "Your {0} integration is connected with an account that can't access repos in this workspace. If you want to view this workspace you'll need to disconnect your {0} integration and connect with one that can access the repos in this workspace. Please {1}.",
    "WorkspaceError-CheckSettings": "check your integration settings",
    "WorkspaceError-WorkspaceNotFound": "Workspace not found",
    "WorkspaceError-RepoRenamedOrDeleted": "Failed to load repository URLs. 仓库 may have been deleted or renamed",
    "WorkspaceError-MultiSelectIncludesWorkspace": "Please select just one VS Code Workspace, or one or more system directories.",
    "DeleteWorkspace-Deleting": "Deleting...",
    "DeleteWorkspace-Delete": "删除 Workspace",
    "DeleteWorkspace-Error": "Failed to delete workspace",
    "DeleteWorkspace-NamePlaceholder": "Name of the workspace",
    "DeleteWorkspace-RequestAction": "Please type the name of your workspace {0} to confirm",
    "DeleteWorkspace-Successful": "Workspace {0} deleted successfully.",
    "DeleteWorkspace-Title": "删除 Workspace",
    "DeleteWorkspace-Warning": "Are you sure you want to DELETE this workspace?",
    "DeleteWorkspace-WarningExplained": "THIS ACTION CANNOT BE UNDONE. This will permanently delete the {0} workspace",
    "DeleteWorkspace-WarningExplainedCannotBeUndone": "THIS ACTION CANNOT BE UNDONE. This will permanently delete the {0} workspace from the Organization and all members will lose access",
    "DeleteWorkspace-WarningFinal": "This action cannot be undone",
    "WorkspaceSummarySection-Edit": "Edit Workspace",
    "WorkspaceSummarySection-Delete": "删除 Workspace",
    "WorkspaceSummarySection-LeaveWorkspace": "Leave workspace",
    "WorkspacePullRequestSection-RepoHeader": "Repo",
    "WorkspacePullRequestSection-TitleHeader": "Title",
    "WorkspacePullRequestSection-AuthorHeader": "Author",
    "WorkspacePullRequestSection-Open": "打开",
    "WorkspacePullRequestSection-ChangesRequested": "This pull request has changes requested",
    "WorkspacePullRequestSection-ReviewPending": "This pull request has pending reviews",
    "WorkspacePullRequestSection-Approved": "This pull request has been approved",
    "WorkspacePullRequestSection-Commented": "There are comments on this pull request",
    "WorkspacePullRequestSection-UserChangesRequested": "You have requested changes on this pull request",
    "WorkspacePullRequestSection-UserReviewPending": "You have a pending review on this pull request",
    "WorkspacePullRequestSection-UserApproved": "You have approved this pull request",
    "WorkspacePullRequestSection-UserCommented": "You have left comments on this pull request",
    "WorkspacePullRequestSection-ReviewStatus": "Review status",
    "WorkspacePullRequestSection-PRStatus": "PR status",
    "WorkspacePullRequestSection-Checks": "Checks",
    "WorkspacePullRequestSection-LinesAddedRemoved": "Lines added/removed",
    "WorkspacePullRequestSection-Complexity": "Complexity",
    "WorkspacePullRequestSection-ComplexityTooltip": "PREVIEW: Complexity is currently based on the # of lines changed, # of files changed, and the # of commits in the pull request, and compared relatively to other pull requests in the list. These calculations may change.",
    "WorkspaceIssuesSection-MyIssues": "MY ISSUES",
    "WorkspaceIssuesSection-RepoHeader": "Repo",
    "WorkspaceIssuesSection-TitleHeader": "Title",
    "WorkspaceIssuesSection-AuthorHeader": "Author",
    "WorkspaceIssuesSection-NoRepoFound": "Issue repo not found",
    "WorkspaceIssuesSection-RepoNotInit": "Repo not initialized",
    "WorkspaceIssuesSection-CreateBranch": "创建 a branch",
    "WorkspaceIssuesSection-Open": "打开",
    "WorkspaceIssuesSection-OpenIssuePanel": "打开 Issue Panel",
    "WorkspaceOverview-LastUpdated": "Last updated",
    "RemoveRepositories-Error": "Remove repositories from {0} failed",
    "RemoveRepositories-Success": "Remove {0} repositories from {1} succeeded",
    "InvalidSSLCertificate-Title": "Invalid SSL Certificate",
    "InvalidSSLCertificate-Advanced": "Advanced",
    "InvalidSSLCertificate-AdvancedMessage": "Attackers may be attempting to steal information through this integration. Proceeding with an invalid SSL certificate is not safe. Disabling this integration and contacting your system administrator is recommended.",
    "InvalidSSLCertificate-GKSupportSite": "GitKraken Support Site",
    "InvalidSSLCertificate-ProceedUsingInvalidCert": "Proceed with invalid SSL certificate and restart GitKraken Desktop (unsafe)",
    "InvalidSSLCertificate-DisableIntegration": "Disable this integration",
    "InvalidSSLCertificate-MainMessage": "Your {0} integration is using an invalid SSL certificate and the connection is not secure",
    "InvalidSSLCertificate-SubMessage1": "Please contact your system administrator to fix the certificate for this self-hosted integration. You can find information about fixing an invalid SSL certificate on the {0}.",
    "InvalidSSLCertificate-ResolveSSLError": "Resolve invalid SSL certificate",
    "InvalidSSLCertificate-IntegrationIsUsingInvalidSSLCert": "This integration is using an invalid SSL certificate",
    "InvalidSSLCertificate-ProceedingRequiresRestart": "Proceeding with an invalid SSL certificate will require a restart.",
    "InvalidSSLCertificate-PleaseContactYourAdministrator": "Please contact your system administrator to fix the certificate for this hosted integration. You can find information about fixing an invalid SSL cert on the {0}.",
    "InvalidSSLCertificate-ReconnectRequired": "You will need to reconnect to your integration following the restart.",
    "InvalidSSLCertificate-RestartIfResolved": "Please restart GitKraken Desktop after fixing the SSL certificate.",
    "Theme-ApplicationFailedTitle": "错误 in {0} theme",
    "Theme-ApplicationFailedMessage": "Theme system failed to apply {0}. See the application log for details",
    "Theme-CircularReferenceAtKey": "Theme has a circular reference at key {0}",
    "Theme-EncounteredErrorEvaluatingValue": "Theme encountered error evaluating {0}: {1}",
    "Theme-DirectoryWatcherFailedTitle": "错误 watching themes directory",
    "Theme-DirectoryWatcherFailedMessage": "The directory watcher encountered error '{0}'. Hot reload will stop working until the app is restarted",
    "Time-NY": "{0}y",
    "Time-NMonth": "{0}M",
    "Time-NW": "{0}w",
    "Time-ND": "{0}d",
    "Time-NDaysAgo": "{0} days ago",
    "Time-NH": "{0}h",
    "Time-NHoursAgo": "{0} hours ago",
    "Time-NMinute": "{0}m",
    "Time-NMinutesAgo": "{0} minutes ago",
    "Time-NS": "{0}s",
    "Time-LessThan1MinuteAgo": "<1 minute ago",
    "WSL-DistroCommandErrorToastTitle": "Command failed in {0}",
    "WSL-HostCommandErrorToastTitle": "Command failed in Windows",
    "OpenRepoExternallyToast-WindowsTitle": "Working with repositories stored on WSL is not recommended from GitKraken Desktop on Windows. Visit our 帮助 Center for help setting up GitKraken Desktop in WSL for the best experience.",
    "OpenRepoExternallyToast-WSLTitle": "Working with repositories stored on Windows is not recommended from GitKraken Desktop on WSL. Visit our 帮助 Center for help setting up GitKraken Desktop in Windows for the best experience.",
    "OpenRepoExternallyToast-OpenSupportDocs": "打开 帮助 Center",
    "OpenRepoExternallyToast-CheckingGKInstallStatus": "Finding GitKraken installations...",
    "OpenRepoExternallyToast-OpenRepoInDistroName": "打开 with GitKraken in {0}",
    "OpenRepoExternallyToast-OpenRepoInHost": "打开 with GitKraken in Windows",
    "OpenRepoExternallyToast-WSLGKNotInstalled": "GitKraken 否t Found in {0}",
    "OpenRepoExternallyToast-WindowsGKNotInstalled": "GitKraken 否t Found in Windows",
    "OpenRepoExternallyToast-OpenAnyways": "打开 仓库 Anyway",
    "AiCommitMessageGeneration-NoStagedChanges": "否 Staged Changes",
    "AiCommitMessageGeneration-NoStagedChangesDescription": "Stage any changes you would like to be uploaded and try again.",
    "Ai-ResolveConflict": "Auto-resolve with AI",
    "Ai-ResolveConflictConfidence": "Confidence",
    "Ai-ResolveConflictTooltip": "Auto-resolve merge conflict with AI",
    "Ai-ResolveConflictMergeSummary": "AI 合并 Summary",
    "Ai-ResolveConflictMergeSummaryInfoTooltip": "This is AI-generated code and should always be reviewed before saving",
    "Ai-ResolveConflictErrorMismatchResolutions": "AI didn't provide the expected number of conflict resolutions",
    "Ai-ResolveConflictErrorMismatchExplanations": "AI didn't provide the expected number of conflict explanations",
    "Ai-ResolveConflictErrorMismatchConfidences": "AI didn't provide the expected number of level of confidence",
    "Ai-ResolveConflictInform": "Unable to Auto-resolve with AI",
    "Ai-ResolveConflictInformMissingDiffSha": "Unable to Auto-resolve with AI due to missing conflict data. This typically occurs when conflicts arise from a stash operation or an uncommitted cherry-pick executed externally or after restarting GitKraken.\nTo proceed, either resolve conflicts manually or return to a clean state by performing a hard reset to your current HEAD commit and generate the conflict by using GitKraken.",
    "Ai-SendCode-BannerMessage": "GitKraken AI can send code snippets, diffs, and other context to an AI provider for analysis.",
    "Ai-Generating": "Generating",
    "Ai-Back": "Back",
    "Ai-Explain": "Explain",
    "Ai-ExplainingOneCommit": "Explaining 1 commit",
    "Ai-ExplainingXCommits": "Explaining {0} commits",
    "Ai-ExplanationFailed": "提交 explanation failed. Try resolving any issues and generate an explanation again.",
    "Ai-GeneratePullRequest": "Generate title and description",
    "Ai-GeneratePullRequestTooltip": "Generate a title and description for the PR with AI",
    "Ai-ConflictResolutionErrorNoInputData": "Missing input data prevents conflict resolution",
    "Ai-Regenerate": "Regenerate",
    "Ai-Error": "AI 错误",
    "Ai-MaxInputTokensHelpText": "Maximum number of input tokens the model can process",
    "Ai-MaxInputTokensLabel": "Max Input Tokens",
    "Ai-NoApiKey": "否 API key set. Check the AI settings",
    "Ai-NoApiKeySet": "添加 your API key to the preferences menu to use this feature",
    "Ai-OpenPreferences": "打开 偏好设置",
    "Ai-UsageLimitExceeded": "GitKraken AI Weekly Limit Reached",
    "Ai-UsageLimitExceededText": "Your request could not be completed because it goes above the weekly usage included in your plan.",
    "Ai-UpgradeMoreRequests": "Upgrade GitKraken for more requests",
    "Ai-UsageDetailsTitle": "Usage Details",
    "Ai-UsageDetails-KTokensPerWeek": "{0}k/{1}k Tokens this week",
    "Ai-UsageDetails-ResetOnDate": "Resets on {0}",
    "Ai-ErrorFormatResponseUnknown": "Unrecognized Response",
    "Ai-UnableToProvideCommitsExplanation": "Unable to provide any explanation as there is no content to analyze",
    "Ai-UnableToProvidePullRequestTitleDescription": "Unable to provide title and description as there is no content to analyze",
    "Ai-NoBaseOrHeadSha": "否 base or head SHA",
    "Ai-Error-NoPRCommitsFoundLocally": "Make sure the PR's base/target remotes and the PR's commits are present in your local repo so that the AI can use them as context.",
    "Ai-Error-ContextNotAvailable": "AI context not available",
    "Ai-UnexpectedResponseError": "Unexpected AI response error",
    "Ai-CannotProcessRequest": "Can’t process request",
    "Ai-RequestBlocked": "Sorry, we couldn’t process your request because it was blocked by our security service. This can happen if the content looks potentially harmful, usually because certain code patterns resemble known vulnerabilities.",
    "Ai-ModelNotSelected": "否 model selected",
    "Ai-ModelNotFound": "Model {0} not found",
    "Git-RemoteMessage-Title": "Remote: {0}",
    "Git-Error-Title": "Git 错误",
    "Git-TryRemoveUserFromRemoteUrl-Title": "User detected in remote url",
    "Git-TryRemoveUserFromRemoteUrl": "The remote {0} has a user in the URL which can cause issues with Git integrations in GitKraken Desktop. We recommend removing the user from the URL, or creating a new remote without a username in the URL.",
    "Git-TryRemoveUserFromRemoteUrlOpenRemote": "打开 Remote",
    "Git-Invalid-Credentials": "Invalid credentials",
    "FocusView-Title": "Launchpad",
    "FocusView-ActionsWipOpenRemote": "打开 Remote: {0}",
    "FocusView-ActionsWipOpenInTab": "View Repo",
    "FocusView-WipBadge": "WIP",
    "FocusView-IssueBadge": "ISSUE",
    "FocusView-NoBuildStatusAvailable": "否 build status information available",
    "FocusView-NoUserReviewStatusAvailable": "否 review information available",
    "FocusView-StatusColumnTitle": "Status",
    "FocusView-Collaborators": "COLLABORATORS",
    "FocusView-Author": "AUTHOR",
    "FocusView-People": "PEOPLE",
    "FocusView-TypeFilterAll": "All",
    "FocusView-TypeFilterWIPs": "WIPs",
    "FocusView-TypeFilterSnoozed": "Snoozed",
    "FocusView-InvolvementFilterAll": "Mine",
    "FocusView-InvolvementFilterOpenedByMe": "创建d by Me",
    "FocusView-InvolvementFilterAssignedToMe": "Assigned to Me",
    "FocusView-InvolvementFilterNeedsReviewByMe": "Needs my review",
    "FocusView-InvolvementFilterMentionedMe": "Mentioned",
    "FocusView-Pin": "Pin",
    "FocusView-UnPin": "Unpin",
    "FocusView-RemoveFromLater": "Remove from snoozed",
    "FocusView-SnoozingRequiresPaidLicense": "Snoozing requires a paid license",
    "FocusView-RefreshData": "Refresh Data",
    "FocusView-LastUpdated": "Last Updated:",
    "FocusView-RefreshLimit": "Refreshing is limited to once per minute",
    "FocusView-DisabledRefresh": "Disabled refresh button for Launchpad. Refreshing is limited to once per minute.",
    "FocusView-RefreshMessage": "Refresh button for Launchpad. Press enter to refresh.",
    "FocusView-MyMergeRequests": "My 合并 Requests",
    "FocusView-MyPullRequests": "My 拉取 Requests",
    "FocusView-MyIssues": "My Issues",
    "FocusView-MyCards": "My Cards",
    "FocusView-MergeRequests": "合并 Requests",
    "FocusView-PullRequests": "拉取 Requests",
    "FocusView-Issues": "Issues",
    "FocusView-Cards": "Cards",
    "FocusView-NoItemsAllHeader": "否 Items",
    "FocusView-NoItemsPRHeader": "否 拉取 Requests",
    "FocusView-NoItemsIssueHeader": "否 Issues",
    "FocusView-NoItemsWipHeader": "否 Work in Progress",
    "FocusView-NoItemsSnoozedHeader": "否 snoozed items",
    "FocusView-NoItemsSearchHeader": "否 results",
    "FocusView-NoItemsAllDescription": "We couldn't find any 拉取 Requests, Issues, or Work in Progress.",
    "FocusView-NoItemsPRDescription": "We couldn't find any 拉取 Requests in the current hosting service.",
    "FocusView-NoItemsIssueDescription": "We didn't find any issues in the current integration.",
    "FocusView-NoItemsWipDescription": "否 local changes on any of your workspace repos on this machine. 打开 a repo to get started",
    "FocusView-NoItemsSnoozedDescription": "Check the {0} icon to snooze items and temporarily clear them out of your all items view.",
    "FocusView-NoItemsSearchDescription": "We couldn't find what you were looking for. Try a different search term or check your integrations.",
    "FocusView-SwitchToOrConnectIssueTracker": "Switch to or connect an issue tracker.",
    "FocusView-ConnectAnIssueTracker": "Connect an issue tracker if you aren't tracking issues in your hosting service.",
    "FocusView-SwitchToOrConnectPullRequestHostingService": "Switch to or connect a pull request hosting service.",
    "FocusView-Snooze": "Snooze",
    "FocusView-SnoozeForOneHour": "Snooze for 1 hour",
    "FocusView-SnoozeForFourHours": "Snooze for 4 hours",
    "FocusView-SnoozeUntilTomorrow": "Snooze until tomorrow at 9:00 AM",
    "FocusView-Merge": "合并",
    "FocusView-MergedSuccessfully": "合并d successfully",
    "FocusView-ClosePR": "关闭 PR",
    "FocusView-PullRequestClosedSuccessfully": "拉取 Request closed successfully",
    "FocusView-UpdateStatus": "Update Status",
    "FocusView-MarkAsClosed": "Mark as closed",
    "FocusView-OpenCodeSuggestion": "打开 Code Suggestion",
    "FocusView-ReviewPullRequest": "Review 拉取 Request",
    "FocusView-CreateCloudPatch": "创建 Cloud Patch",
    "FocusView-ClonePullRequestRepo": "Clone {0}",
    "FocusView-Workspace": "Workspace",
    "FocusView-None": "否ne",
    "FocusView-Team": "Team",
    "FocusView-Personal": "Personal",
    "FocusView-Pinned": "Pinned",
    "FocusView-ReadyToMerge": "Ready to 合并",
    "FocusView-UnassignedReviewer": "Unassigned Reviewers",
    "FocusView-FailingCI": "Failing CI",
    "FocusView-ResolveConflicts": "Resolve Conflicts",
    "FocusView-NeedsMyReview": "Needs My Review",
    "FocusView-SuggestedChanges": "Suggested Changes",
    "FocusView-ReviewerCommented": "Reviewer Commented",
    "FocusView-WaitingForReview": "Waiting For Review",
    "FocusView-Draft": "Draft",
    "FocusView-Other": "Other",
    "FocusView-Snoozed": "Snoozed",
    "FocusView-CodeSuggestion": "Code Suggestion",
    "FocusView-SelectACloudWorkspace": "Select a Cloud Workspace to get started",
    "FocusView-OrCreateANewCloudWorkspace": "Or create a new Cloud Workspace",
    "FocusView-CreateWorkspace": "创建 Workspace",
    "FocusView-GitKrakenCantFindRepository": "GitKraken can't find the repository {0}.",
    "FocusView-CloningRepository": "Cloning repository...",
    "FocusView-LocateInFilesystem": "Locate in filesystem",
    "FocusView-CheckoutBranch": "Checkout 分支 {0}",
    "FocusView-CreateWorktree": "Checkout in New Worktree",
    "FocusView-DraftPullRequest": "Draft 拉取 Request",
    "FocusView-OpenPullRequest": "打开 拉取 Request",
    "FocusView-PRView": "打开 拉取 Request Panel",
    "FocusView-MissingRepoOpenPRView": "Repo path not found. Click to open pull request view to clone or locate repo",
    "FocusView-SelectedProvider": "{0}: {1} {2}",
    "FocusView-WorkspaceX": "Workspace: {0}",
    "FocusView-IssuesX": "Issues: {0} {1}",
    "FocusView-ProjectX": "Project: {0} {1}",
    "FocusView-AllLabels": "{0} All labels",
    "FocusView-IssueLabels": "Issue Labels",
    "FocusView-PullRequestLabels": "拉取 Request Labels",
    "FocusView-IssueMilestones": "Issue Milestones",
    "FocusView-PullRequestMilestones": "拉取 Request Milestones",
    "FocusView-AllMilestones": "{0} All milestones",
    "FocusView-AllFixVersions": "{0} All fix versions",
    "FocusView-AllSprints": "{0} All sprints",
    "FocusView-PlusN": "+{0}",
    "FocusView-XOrgMembers": "{0} members",
    "FocusView-ExternalCollaborators": "External collaborators",
    "FocusView-FilterForTeamMembers": "Filter for specific team members here",
    "FocusView-ViewSettings": "View 设置",
    "FocusView-XViewSettings": "{0} View 设置",
    "FocusView-IssueViewSettings": "Issue View 设置",
    "FocusView-AllViewSettings": "All View 设置",
    "FocusView-SnoozedViewSettings": "Snoozed View 设置",
    "FocusView-WipViewSettings": "Wip View 设置",
    "FocusView-Density": "Density",
    "FocusView-Compact": "Compact",
    "FocusView-Standard": "Standard",
    "FocusView-Fields": "Fields",
    "FocusView-LinesChanged": "Lines changed",
    "FocusView-UseInitials": "Display initials instead of avatars",
    "FocusView-Comments": "Comments",
    "FocusView-Likes": "Likes",
    "FocusView-FixVersions": "Fix 版本s",
    "FocusView-Sprints": "Sprints",
    "FocusView-Labels": "Labels",
    "FocusView-Milestones": "Milestones",
    "FocusView-Mentions": "Mentions",
    "FocusView-SaveAView": "保存 A View",
    "FocusView-UpgradeToSaveView": "Upgrade to a Pro subscription to save custom Launchpad views",
    "FocusView-CannotSaveView": "Only 拉取 Request and Issue pages can be saved",
    "FocusView-SaveViews": "保存 this Launchpad View",
    "FocusView-DeleteView": "删除 View",
    "FocusView-Name": "Name",
    "FocusView-CreateView": "创建 View",
    "FocusView-XCharactersMaxiumum": "{0} characters maximum",
    "FocusView-ThisViewsFiltersHaveBeenSaved": "This view's filters have been saved.",
    "FocusView-ThisViewsSettingsHaveBeenSaved": "This view's settings have been saved.",
    "FocusView-DeleteThisView": "删除 this view",
    "FocusView-SaveChanges": "保存 changes",
    "FocusView-Reset": "Reset",
    "FocusView-CustomViewDeleted": "Custom view {0} deleted",
    "FocusView-CustomViewCreated": "Custom view {0} created",
    "FocusView-AreYouSureYouWantToDeleteThisView": "Are you sure you want to delete this view? This action cannot be undone.",
    "FocusView-PressEnterToConfirm": "Press Enter to confirm",
    "FocusView-ViewSavedSuccessfully": "View saved successfully",
    "FocusView-ThisViewHasUnsavedChanges": "This view has unsaved changes",
    "FocusViewBuildStatus-ActionRequired": "Action required",
    "FocusViewBuildStatus-Cancelled": "Some checks cancelled",
    "FocusViewBuildStatus-Failed": "Some checks failed",
    "FocusViewBuildStatus-OptionalActionRequired": "Some checks can be run manually",
    "FocusViewBuildStatus-Pending": "Some checks pending",
    "FocusViewBuildStatus-Running": "Some checks in progress",
    "FocusViewBuildStatus-Skipped": "Some checks skipped",
    "FocusViewBuildStatus-Success": "All checks passed",
    "FocusViewBuildStatus-Warning": "Some checks have warnings",
    "FocusViewItemActionModal-XRequestedChanges": "{0} requested changes",
    "FocusViewItemActionModal-ResolveChangesPriorToMerge": "It is recommended to resolve changes prior to merging",
    "FocusViewItemActionModal-NoRequestedChanges": "否 requested changes",
    "FocusViewItemActionModal-ThereArentAnyRequestedChanges": "There aren't any requested changes on this pull request",
    "FocusViewItemActionModal-AwaitingReview": "Awaiting review",
    "FocusViewItemActionModal-AtLeastOneApproval": "It is recommended to have at least one approval prior to merging",
    "FocusViewItemActionModal-XError": "{0} error",
    "FocusViewItemActionModal-XFailed": "{0} failed",
    "FocusViewItemActionModal-XPending": "{0} pending",
    "FocusViewItemActionModal-XSucceessful": "{0} succeessful",
    "FocusViewItemActionModal-XActionRequired": "{0} action(s) required",
    "FocusViewItemActionModal-XCancelled": "{0} cancelled",
    "FocusViewItemActionModal-XRunning": "{0} running",
    "FocusViewItemActionModal-XSkipped": "{0} skipped",
    "FocusViewItemActionModal-XWarnings": "{0} warnings",
    "FocusViewItemActionModal-XOptionalActionsRequired": "{0} optional action(s) required",
    "FocusViewItemActionModal-And": "and",
    "FocusViewItemActionModal-Checks": "checks",
    "FocusViewItemActionModal-XChecksHaveFailed": "{0} checks have failed",
    "FocusViewItemActionModal-AllChecksHavePassed": "All checks have passed",
    "FocusViewItemActionModal-NoConflicts": "This branch has no conflicts with the base branch",
    "FocusViewItemActionModal-MergingPerformedAutomatically": "Merging can be performed automatically",
    "FocusViewItemActionModal-ConflictsDetected": "Conflicts detected",
    "FocusViewItemActionModal-ConflictsMustBeResolved": "Conflicts must be resolved before merging",
    "FocusViewItemActionModal-MergePullRequest": "合并 拉取 Request",
    "FocusViewItemActionModal-CloseWithUnmergedCommits": "关闭 with unmerged commits?",
    "FocusViewItemActionModal-ClosingThisPR": "Closing this PR will remove it from Launchpad.",
    "FocusViewItemActionModal-Status": "Status",
    "FocusViewItemActionModal-IssueStatusChangedToX": "Issue status changed to {0}",
    "FocusViewItemActionModal-IssueMarkedAsClosed": "Issue maked as 关闭d",
    "FocusViewItemActionModal-SelectStatus": "Select status...",
    "FocusViewItemActionModal-CreateMergeCommitHeader": "创建 a merge commit",
    "FocusViewItemActionModal-CreateMergeCommitDescription": "All commits from this branch will be added to the base branch via a merge commit",
    "FocusViewItemActionModal-SquashHeader": "Squash and merge",
    "FocusViewItemActionModal-SquashDescription": "The commits from this branch will be added to the base branch",
    "FocusViewItemActionModal-RebaseHeader": "Rebase and merge",
    "FocusViewItemActionModal-RebaseDescription": "The commits from this branch will be rebased and added to the base branch",
    "FocusViewItemActionModal-RebaseThenMergeHeader": "Rebase then merge",
    "FocusViewItemActionModal-RebaseThenMergeDescription": "The commits from this branch will be rebased and then added to the base branch",
    "FocusViewItemActionModal-FastForwardHeader": "Fast forward",
    "FocusViewItemActionModal-FastForwardDescription": "The base branch head will be moved to the top of this branch",
    "FocusViewStatusBar-IsReadyToMerge": "{0}/{1}#{2} is ready to merge",
    "FocusViewStatusBar-HasNoReviewers": "{0}/{1}#{2} has no assigned reviewers",
    "FocusViewStatusBar-IsFailingCI": "{0}/{1}#{2} is failing CI",
    "FocusViewStatusBar-HasMergeConflicts": "{0}/{1}#{2} has merge conflicts",
    "FocusViewStatusBar-HasSuggestedChanges": "{0}/{1}#{2} has suggested changes",
    "FocusViewStatusBar-NeedsYourReview": "{0}/{1}#{2} needs your review",
    "FocusViewStatusBar-HasComments": "{0}/{1}#{2} has comments",
    "FocusViewStatusBar-IsWaitingOnReview": "{0}/{1}#{2} is waiting on a review",
    "FocusViewStatusBar-IsInDraft": "{0}/{1}#{2} is in draft",
    "FocusViewStatusBar-NoPullRequests": "否 拉取 Requests",
    "FocusViewStatusBar-SelectAnIntegration": "Select an integration",
    "FocusViewStatusBar-ConnectAnIntegration": "Connect an integration",
    "FocusViewStatusBar-PRsReadyToMerge": "PRs are ready to merge",
    "FocusViewStatusBar-PRsWithNoReviewers": "PRs with no assigned reviewers",
    "FocusViewStatusBar-PRsFailingCI": "PRs failing CI",
    "FocusViewStatusBar-PRsWithConflicts": "PRs with merge conflicts",
    "FocusViewStatusBar-PRsWithSuggestedChanges": "PRs with suggested changes",
    "FocusViewStatusBar-PRsNeedYourReview": "PRs need your review",
    "FocusViewStatusBar-PRsHaveComments": "PRs have comments",
    "FocusViewStatusBar-PRsWaitingOnReview": "PRs are waiting on review",
    "FocusViewStatusBar-PRsInDraft": "PRs are in draft",
    "FocusViewStatusBar-PRReadyToMerge": "PR is ready to merge",
    "FocusViewStatusBar-PRWithNoReviewers": "PR with no assigned reviewers",
    "FocusViewStatusBar-PRFailingCI": "PR is failing CI",
    "FocusViewStatusBar-PRWithConflicts": "PR with merge conflicts",
    "FocusViewStatusBar-PRWithSuggestedChanges": "PR with suggested changes",
    "FocusViewStatusBar-PRNeedYourReview": "PR needs your review",
    "FocusViewStatusBar-PRHaveComments": "PR has comments",
    "FocusViewStatusBar-PRWaitingOnReview": "PR is waiting on review",
    "FocusViewStatusBar-PRInDraft": "PR is in draft",
    "FocusViewStatusBar-RepoLabel": "{0}/{1} #{2}",
    "FocusViewError-FailedToMergePullRequest": "Failed to merge pull request",
    "FocusViewError-FailedToClosePullRequest": "Failed to close pull request",
    "FocusViewError-FailedToUpdateIssueStatus": "Failed to update issue status",
    "FocusViewError-FailedToMarkIssueAsClosed": "Failed to mark issue as 关闭d",
    "FocusViewError-FailedToLoadPullRequests": "Failed to load Launchpad pull requests",
    "FocusViewError-FailedToLoadIssues": "Failed to load Launchpad issues",
    "FocusViewError-FailedToFetchPullRequest": "Failed to fetch pull request from {0}",
    "FocusViewError-FailedToDeleteCloudTabSettings": "Failed to delete cloud tab settings",
    "FocusViewError-FailedToCreateCustomView": "Failed to create custom view",
    "FocusViewError-FailedToUpdateCustomView": "Failed to update custom view",
    "MultiBranchDisplay-CheckoutBranch": "Click to checkout branch",
    "StatusBar-Cancellation": "Your subscription is scheduled to cancel. {1}.",
    "StatusBar-CancellationOnDate": "Your subscription is scheduled to cancel on {0}. {1}.",
    "StatusBar-CardExpired": "The card on file has expired. {0}.",
    "StatusBar-CardExpiring": "The card on file is about to expire. {0}.",
    "StatusBar-ClickToUpdatePayment": "Click here to update payment",
    "StatusBar-ContactAdminToRenew": "Contact your admin to renew",
    "StatusBar-GKRenewalFailed": "GitKraken renewal failed! {0}.",
    "StatusBar-UpdatePaymentMethodToAvoidFailure": "Update your payment method to avoid failure on renewal",
    "StatusBar-UpdatePaymentUser": "GitKraken renewal failed! Ask your admin to update payment.",
    "StatusBar-UpdateYourSubscriptionToRenew": "Update your subscription to renew",
    "StatusBar-WhatsNewInVersion10": "{0} What's New In 版本 10",
    "GKDotDev-OpeningLinkInBrowser": "打开ing Link in Browser",
    "GKDotDev-CopyLink": "Copy Link",
    "worktree": "worktree",
    "Worktree-Create": "创建 Worktree",
    "Worktree-FormReference": "Reference to checkout",
    "Worktree-FormLock": "Lock this worktree",
    "Worktree-FormOpen": "打开 this worktree",
    "Worktree-FormPrune": "Prune worktrees",
    "Worktree-FormRemove": "Remove this worktree",
    "Worktree-FormUnlock": "Unlock this worktree",
    "Worktree-FormWorkdir": "Working directory",
    "Worktree-FormWorktreeBranch": "Worktree branch to create",
    "Worktree-HasSubmodules": "The worktree contains submodules.",
    "Worktree-Menu": "Worktree actions",
    "Worktree-CreateError-InvalidRefName": "Cannot create worktree because the specified reference name is invalid",
    "Worktree-CreateError-LocalBranchExists": "Cannot create worktree because a local branch with the same name already exists",
    "Worktree-CreateError-RefNotFound": "Cannot create worktree because the specified reference does not exist",
    "Worktree-CreateError-WorkdirExists": "Cannot create worktree because the specified working directory already exists",
    "Worktree-CreateError-WorktreeBranchExists": "Cannot create worktree because a worktree with the same branch name already exists",
    "Worktree-CreateWarning-WorkdirInsideWorktree": "It is not recommended to choose a location inside a working directory. If you wish to proceed, please make sure your .gitignore is properly configured.",
    "Worktree-Refresh-WIPs": "Refresh WIPs",
    "Open-Rust-Socket-Bridge-Support-Page": "Visit 帮助 Center"
  }
}